Python interactive window. Type $help for a list of commands.
>>> import stat_script
Fetching item list from SDE: oceanus-1.0-105658
Finished calculating convert.
Fetching market data ...
Finished calculating raw_query.
Finished calculating raw_data.
Finished calculating expected_dates.
Finished calculating raw_data_filled.
Finished calculating market_data_groups.
Crunching Stats
Finished calculating stats.
Finished calculating market_sigmas.
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File ".\stat_script.py", line 413, in <module>
    main()
  File ".\stat_script.py", line 384, in main
    region=region
  File ".\stat_script.py", line 210, in volume_sigma_report
    of_interest = pd.merge(vol_means, market_sigmas, left_on='itemid', right_on='itemid')
  File "D:\Anaconda\lib\site-packages\pandas\tools\merge.py", line 38, in merge
    copy=copy)
  File "D:\Anaconda\lib\site-packages\pandas\tools\merge.py", line 184, in __init__
    self.join_names) = self._get_merge_keys()
  File "D:\Anaconda\lib\site-packages\pandas\tools\merge.py", line 344, in _get_merge_keys
    right_keys.append(right[rk].values)
  File "D:\Anaconda\lib\site-packages\pandas\core\frame.py", line 1743, in __getitem__
    return self._getitem_column(key)
  File "D:\Anaconda\lib\site-packages\pandas\core\frame.py", line 1750, in _getitem_column
    return self._get_item_cache(key)
  File "D:\Anaconda\lib\site-packages\pandas\core\generic.py", line 1058, in _get_item_cache
    values = self._data.get(item)
  File "D:\Anaconda\lib\site-packages\pandas\core\internals.py", line 2806, in get
    loc = self.items.get_loc(item)
  File "D:\Anaconda\lib\site-packages\pandas\core\index.py", line 1385, in get_loc
    return self._engine.get_loc(_values_from_object(key))
  File "pandas\index.pyx", line 133, in pandas.index.IndexEngine.get_loc (pandas\index.c:3795)
  File "pandas\index.pyx", line 153, in pandas.index.IndexEngine.get_loc (pandas\index.c:3675)
  File "pandas\hashtable.pyx", line 696, in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12299)
  File "pandas\hashtable.pyx", line 704, in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12250)
KeyError: 'itemid'
>>> from stat_script import V
Fetching item list from SDE: oceanus-1.0-105658
Finished calculating convert.
Fetching market data ...
Finished calculating raw_query.
Finished calculating raw_data.
Finished calculating expected_dates.
Finished calculating raw_data_filled.
Finished calculating market_data_groups.
Crunching Stats
Finished calculating stats.
Finished calculating market_sigmas.
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File ".\stat_script.py", line 413, in <module>
    main()
  File ".\stat_script.py", line 384, in main
    region=region
  File ".\stat_script.py", line 210, in volume_sigma_report
    of_interest = pd.merge(vol_means, market_sigmas, left_on='itemid', right_on='itemid')
  File "D:\Anaconda\lib\site-packages\pandas\tools\merge.py", line 38, in merge
    copy=copy)
  File "D:\Anaconda\lib\site-packages\pandas\tools\merge.py", line 184, in __init__
    self.join_names) = self._get_merge_keys()
  File "D:\Anaconda\lib\site-packages\pandas\tools\merge.py", line 344, in _get_merge_keys
    right_keys.append(right[rk].values)
  File "D:\Anaconda\lib\site-packages\pandas\core\frame.py", line 1743, in __getitem__
    return self._getitem_column(key)
  File "D:\Anaconda\lib\site-packages\pandas\core\frame.py", line 1750, in _getitem_column
    return self._get_item_cache(key)
  File "D:\Anaconda\lib\site-packages\pandas\core\generic.py", line 1058, in _get_item_cache
    values = self._data.get(item)
  File "D:\Anaconda\lib\site-packages\pandas\core\internals.py", line 2806, in get
    loc = self.items.get_loc(item)
  File "D:\Anaconda\lib\site-packages\pandas\core\index.py", line 1385, in get_loc
    return self._engine.get_loc(_values_from_object(key))
  File "pandas\index.pyx", line 133, in pandas.index.IndexEngine.get_loc (pandas\index.c:3795)
  File "pandas\index.pyx", line 153, in pandas.index.IndexEngine.get_loc (pandas\index.c:3675)
  File "pandas\hashtable.pyx", line 696, in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12299)
  File "pandas\hashtable.pyx", line 704, in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12250)
KeyError: 'itemid'
>>> "{0:3d}".format(1)
'  1'
>>> V
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'V' is not defined
>>> import stat_script as s
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File ".\stat_script.py", line 30, in <module>
    V = AttrLogger()
  File ".\stat_script.py", line 25, in __init__
    self.start_time = time.clock()
  File ".\stat_script.py", line 27, in __setattr__
    print "{0:5d} Finished calculating {0}.".format(time.clock(), name)
ValueError: Unknown format code 'd' for object of type 'float'
>>> "{0:3f}".format(1)
'1.000000'
>>> "{0:4.2f}".format(1)
'1.00'
>>> "{0:>4.2f}".format(1)
'1.00'
>>> "{0:>4.2f}".format(1)
'1.00'
>>> "{0:>4.1f}".format(1)
' 1.0'
>>> "{0:>7.1f}".format(1)
'    1.0'
>>> "{0:>6.1f}".format(1)
'   1.0'
>>> import stat_script as s
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File ".\stat_script.py", line 30, in <module>
    V = AttrLogger()
  File ".\stat_script.py", line 25, in __init__
    self.start_time = time.clock()
  File ".\stat_script.py", line 27, in __setattr__
    print "{0:5d} Finished calculating {0}.".format(time.clock(), name)
ValueError: Unknown format code 'd' for object of type 'float'
>>> import stat_script as s
 1e+02 Finished calculating 129.92129712.
Fetching item list from SDE: oceanus-1.0-105658
 1e+02 Finished calculating 130.066723494.
Fetching market data ...
 1e+02 Finished calculating 130.067406961.
 2e+02 Finished calculating 176.128034499.
 2e+02 Finished calculating 176.151533435.
 2e+02 Finished calculating 196.679380131.
 2e+02 Finished calculating 196.680091953.
Crunching Stats
 3e+02 Finished calculating 275.87370832.
 3e+02 Finished calculating 276.043314653.
 3e+02 Finished calculating 276.729748474.
>>> s.V
<stat_script.AttrLogger object at 0x0000000028FCE828>
Resetting execution engine
The Python REPL process has exited
>>> import stat_script as s
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File ".\stat_script.py", line 30, in <module>
    V = AttrLogger()
  File ".\stat_script.py", line 25, in __init__
    self.start_time = time.clock()
  File ".\stat_script.py", line 27, in __setattr__
    print "{0:10.1f} Finished calculating {1}.".format(time.clock()-self.start_time, name)
AttributeError: 'AttrLogger' object has no attribute 'start_time'
>>> import stat_script as s
Fetching item list from SDE: oceanus-1.0-105658
       0.2 Finished calculating convert.
Fetching market data ...
       0.2 Finished calculating raw_query.
      45.3 Finished calculating raw_data.
      45.3 Finished calculating expected_dates.
      65.6 Finished calculating raw_data_filled.
      65.6 Finished calculating market_data_groups.
Crunching Stats
     144.3 Finished calculating stats.
     144.5 Finished calculating market_sigmas.
     145.1 Finished calculating vol_means.
>>> s.V.market_sigmas
                                       typename    N         MIN  \
typeid                                                             
18                                  Plagioclase  366     3875802   
19                                    Spodumain  363           0   
20                                      Kernite  365           0   
21                                   Hedbergite  366         854   
22                                      Arkonor  366        1247   
34                                    Tritanium  366  6422449079   
35                                      Pyerite  366  1538021810   
36                                     Mexallon  366   640981265   
37                                       Isogen  366   103925510   
38                                      Nocxium  366    26201277   
39                                      Zydrine  366    10148009   
40                                     Megacyte  366     4775428   
41                                      Garbage  366          50   
42                                  Spiced Wine  366         273   
43                                  Antibiotics  366        5959   
44                             Enriched Uranium  366      199842   
45                           Frozen Plant Seeds  362           0   
178                           Carbonized Lead S  366       13965   
179                                   Nuclear S  366       24019   
180                                    Proton S  365           0   
181                          Depleted Uranium S  366       23513   
182                            Titanium Sabot S  366       25500   
183                                    Fusion S  366       67246   
184                             Phased Plasma S  366      121667   
185                                       EMP S  365           0   
186                           Carbonized Lead M  366       12650   
187                                   Nuclear M  365           0   
188                                    Proton M  366       14656   
189                          Depleted Uranium M  366       19902   
190                            Titanium Sabot M  366       46947   
...                                         ...  ...         ...   
34050      Women's 'Hover' Tights (opaque blue)   38           0   
34051      Women's 'Hover' Tights (opaque gray)   29           0   
34056             Men's 'Nova' Headwear (black)   41           0   
34057   Men's 'Tectonic' Headwear (matte black)   30           0   
34059            Men's 'Nova' Headwear (silver)   15           0   
34061            Men's 'Nova' Headwear (bronze)   30           0   
34062         Men's 'Tectonic' Headwear (metal)   21           0   
34064        Women's 'Aeriform' Headwear (cyan)   31           0   
34065      Women's 'Blades' Headwear (gunmetal)   40           0   
34068      Women's 'Spiderweb' Headwear (black)   31           0   
34070      Women's 'Aeriform' Headwear (orange)   25           0   
34072     Women's 'Spiderweb' Headwear (copper)   10           0   
34073   Women's 'Spiderweb' Headwear (metallic)   14           0   
34074          Women's 'Blades' Headwear (jade)   46           0   
34118                   Megathron Quafe Edition   17           0   
34122             Limited Jump Drive Economizer   67           0   
34124        Experimental Jump Drive Economizer   68           0   
34126           Prototype Jump Drive Economizer   39           0   
34132         Pilot's Body Resculpt Certificate   69           0   
34133       Multiple Pilot Training Certificate   69           0   
34156          Men's 'Marshal' Jacket (Caldari)   27           0   
34157            Men's 'Marshal' Jacket (Amarr)   19           0   
34158         Men's 'Marshal' Jacket (Minmatar)   12           0   
34159         Men's 'Marshal' Jacket (Gallente)   20           0   
34160              Men's 'Marshal' Jacket (ORE)   32           0   
34169         Women's 'Gunner' Jacket (Caldari)   18           0   
34170           Women's 'Gunner' Jacket (Amarr)    6           0   
34171        Women's 'Gunner' Jacket (Minmatar)    8           0   
34172        Women's 'Gunner' Jacket (Gallente)   18           0   
34173             Women's 'Gunner' Jacket (ORE)   33           0   

                 P10           MED           AVG           P90          MAX  \
typeid                                                                        
18      9.873781e+06  2.162093e+07  2.540986e+07  4.486723e+07    130717578   
19      2.130000e+02  1.096000e+03  3.395891e+03  1.027100e+04        59892   
20      1.236256e+06  2.473058e+06  3.050467e+06  5.615875e+06     17211306   
21      1.214550e+04  5.243400e+04  7.008960e+04  1.427900e+05       378672   
22      5.975500e+03  2.096150e+04  2.774916e+04  5.763450e+04       214052   
34      1.088581e+10  2.171377e+10  2.118469e+10  3.001181e+10  70739309589   
35      2.466574e+09  4.650055e+09  4.570852e+09  6.580050e+09  10138178126   
36      9.330175e+08  1.532116e+09  1.552161e+09  2.142851e+09   3685797317   
37      1.791796e+08  3.037027e+08  3.073356e+08  4.292438e+08    716042085   
38      6.023771e+07  8.903914e+07  9.011936e+07  1.207838e+08    167774017   
39      2.342593e+07  3.554910e+07  3.814063e+07  5.730580e+07    140878739   
40      1.214083e+07  1.782762e+07  1.940243e+07  2.769441e+07     76990015   
41      4.989500e+03  7.368150e+04  1.574267e+05  3.156255e+05      3009350   
42      5.235000e+02  9.550000e+02  2.282784e+03  4.045500e+03        50934   
43      9.261050e+04  6.484625e+05  8.083263e+05  1.775064e+06      3712128   
44      7.384760e+05  1.105792e+06  1.157393e+06  1.668376e+06      3016940   
45      7.300000e+02  1.230000e+03  3.280445e+03  3.169000e+03       337580   
178     6.002950e+04  2.127870e+05  6.009328e+05  1.303730e+06     28965718   
179     5.332800e+04  1.622330e+05  6.272011e+05  1.012520e+06     21651636   
180     4.766900e+04  1.266165e+05  2.112741e+05  4.873800e+05      1701470   
181     7.364750e+04  2.091325e+05  4.943779e+05  1.015583e+06     27276720   
182     9.184950e+04  2.729415e+05  5.889185e+05  1.152280e+06     13927848   
183     2.243195e+05  7.514325e+05  1.755055e+06  2.860353e+06     42620887   
184     3.176410e+05  1.067938e+06  2.256453e+06  4.321959e+06     30690857   
185     6.976535e+05  1.790854e+06  3.281341e+06  6.565668e+06     47690308   
186     4.946400e+04  1.918815e+05  3.669229e+05  9.553145e+05      4441016   
187     4.762100e+04  1.520575e+05  2.995353e+05  6.372435e+05      5000403   
188     4.849500e+04  1.753805e+05  3.196233e+05  7.230605e+05      5264080   
189     1.132935e+05  4.168740e+05  6.491696e+05  1.395928e+06     12653208   
190     1.915945e+05  4.872435e+05  7.347406e+05  1.583376e+06      5959894   
...              ...           ...           ...           ...          ...   
34050   0.000000e+00  0.000000e+00  1.857923e-01  1.000000e+00            5   
34051   0.000000e+00  0.000000e+00  1.448087e-01  0.000000e+00            5   
34056   0.000000e+00  0.000000e+00  2.267760e-01  1.000000e+00            9   
34057   0.000000e+00  0.000000e+00  1.393443e-01  0.000000e+00            5   
34059   0.000000e+00  0.000000e+00  1.284153e-01  0.000000e+00            9   
34061   0.000000e+00  0.000000e+00  1.393443e-01  0.000000e+00            6   
34062   0.000000e+00  0.000000e+00  9.289617e-02  0.000000e+00            4   
34064   0.000000e+00  0.000000e+00  1.502732e-01  0.000000e+00            6   
34065   0.000000e+00  0.000000e+00  2.131148e-01  1.000000e+00            5   
34068   0.000000e+00  0.000000e+00  1.639344e-01  0.000000e+00            8   
34070   0.000000e+00  0.000000e+00  8.196721e-02  0.000000e+00            2   
34072   0.000000e+00  0.000000e+00  3.825137e-02  0.000000e+00            3   
34073   0.000000e+00  0.000000e+00  1.530055e-01  0.000000e+00           10   
34074   0.000000e+00  0.000000e+00  1.994536e-01  1.000000e+00            4   
34118   0.000000e+00  0.000000e+00  2.868852e-01  0.000000e+00           17   
34122   0.000000e+00  0.000000e+00  3.426230e+00  1.400000e+01           66   
34124   0.000000e+00  0.000000e+00  3.819672e+00  1.700000e+01           50   
34126   0.000000e+00  0.000000e+00  4.672131e-01  1.000000e+00           17   
34132   0.000000e+00  0.000000e+00  4.221311e+00  1.600000e+01           93   
34133   0.000000e+00  0.000000e+00  5.693989e+00  2.600000e+01           92   
34156   0.000000e+00  0.000000e+00  1.229508e-01  0.000000e+00            3   
34157   0.000000e+00  0.000000e+00  6.284153e-02  0.000000e+00            2   
34158   0.000000e+00  0.000000e+00  6.557377e-02  0.000000e+00            6   
34159   0.000000e+00  0.000000e+00  1.229508e-01  0.000000e+00            7   
34160   0.000000e+00  0.000000e+00  3.251366e-01  0.000000e+00           12   
34169   0.000000e+00  0.000000e+00  6.557377e-02  0.000000e+00            4   
34170   0.000000e+00  0.000000e+00  2.185792e-02  0.000000e+00            2   
34171   0.000000e+00  0.000000e+00  2.732240e-02  0.000000e+00            2   
34172   0.000000e+00  0.000000e+00  7.103825e-02  0.000000e+00            3   
34173   0.000000e+00  0.000000e+00  4.125683e-01  0.000000e+00           10   

                 STD         SN2P5         SN2P0         SN1P5         SN1P0  \
typeid                                                                         
18      1.506960e+07  6.035313e+06  6.977596e+06  8.913571e+06  1.265614e+07   
19      6.139415e+03  2.665278e-01  3.591139e+01  1.360770e+02  3.422733e+02   
20      2.179127e+06  6.208978e+05  8.442900e+05  1.152355e+06  1.435115e+06   
21      6.262922e+04  2.536861e+03  3.832924e+03  9.392007e+03  1.861349e+04   
22      2.475475e+04  1.466987e+03  2.684064e+03  4.849928e+03  8.288731e+03   
34      8.130761e+09  7.598860e+09  8.534222e+09  9.929784e+09  1.180023e+10   
35      1.605941e+09  1.613244e+09  1.861975e+09  2.188221e+09  2.744249e+09   
36      4.894501e+08  6.943336e+08  7.537885e+08  8.531130e+08  1.022635e+09   
37      1.021077e+08  1.268325e+08  1.470933e+08  1.629908e+08  1.968935e+08   
38      2.363299e+07  4.113423e+07  4.829226e+07  5.551247e+07  6.710391e+07   
39      1.560885e+07  1.409584e+07  1.903873e+07  2.255090e+07  2.529721e+07   
40      7.471629e+06  7.487058e+06  9.871065e+06  1.149511e+07  1.309292e+07   
41      2.959170e+05  1.241322e+02  1.967722e+02  1.830616e+03  1.206573e+04   
42      5.195491e+03  3.366653e+02  3.900127e+02  4.880000e+02  5.652733e+02   
43      6.604984e+05  9.768385e+03  3.092231e+04  6.161909e+04  1.618247e+05   
44      3.832359e+05  5.016825e+05  5.927369e+05  6.882094e+05  8.089656e+05   
45      1.836044e+04  0.000000e+00  4.927595e+02  6.700000e+02  7.890917e+02   
178     1.719773e+06  2.742231e+04  3.601209e+04  4.872823e+04  7.669339e+04   
179     2.149308e+06  2.662473e+04  3.121568e+04  4.325055e+04  6.392657e+04   
180     2.352051e+05  2.088939e+04  2.814704e+04  3.716880e+04  5.366955e+04   
181     1.539985e+06  2.717579e+04  4.122572e+04  6.500515e+04  8.736500e+04   
182     1.280530e+06  4.570785e+04  5.600803e+04  8.085970e+04  1.149963e+05   
183     4.479860e+06  9.530701e+04  1.400438e+05  1.851978e+05  2.927057e+05   
184     4.043335e+06  1.386321e+05  1.892892e+05  2.635983e+05  4.208045e+05   
185     4.737079e+06  3.161578e+05  4.143414e+05  5.765894e+05  8.287799e+05   
186     4.959138e+05  2.555384e+04  3.064496e+04  4.378508e+04  6.376877e+04   
187     4.509906e+05  1.602940e+04  2.087905e+04  4.343455e+04  6.030212e+04   
188     4.966987e+05  2.068695e+04  2.802390e+04  4.031623e+04  6.021732e+04   
189     9.194526e+05  3.095105e+04  4.903074e+04  9.540735e+04  1.501683e+05   
190     7.724652e+05  7.885844e+04  1.182965e+05  1.578048e+05  2.251442e+05   
...              ...           ...           ...           ...           ...   
34050   6.397048e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34051   5.859663e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34056   8.635346e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34057   5.436897e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34059   7.815764e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34061   5.731275e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34062   4.467279e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34064   6.383518e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34065   6.971116e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34068   7.695648e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34070   3.207055e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34072   2.535473e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34073   9.237086e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34074   6.202958e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34118   1.753960e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34122   8.755352e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34124   9.472107e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34126   1.765038e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34132   1.111522e+01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34133   1.371448e+01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34156   4.838975e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34157   2.845551e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34158   4.329770e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34159   6.526389e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34160   1.238988e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34169   3.409344e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34170   1.799934e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34171   1.939268e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34172   3.398348e-01  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34173   1.428384e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   

               SN0P5          S0P0          S0P5          S1P0          S1P5  \
typeid                                                                         
18      1.691769e+07  2.162093e+07  2.882915e+07  3.935387e+07  5.000580e+07   
19      5.946972e+02  1.096000e+03  2.493303e+03  5.245074e+03  1.439969e+04   
20      1.806961e+06  2.473058e+06  3.242705e+06  4.538457e+06  6.164179e+06   
21      3.419496e+04  5.243400e+04  7.940992e+04  1.186574e+05  1.786848e+05   
22      1.320027e+04  2.096150e+04  3.144103e+04  4.621635e+04  6.657123e+04   
34      1.727268e+10  2.171377e+10  2.508490e+10  2.822678e+10  3.232504e+10   
35      3.717868e+09  4.650055e+09  5.382107e+09  6.158091e+09  6.905491e+09   
36      1.259825e+09  1.532116e+09  1.791856e+09  2.026487e+09  2.314235e+09   
37      2.456065e+08  3.037027e+08  3.567435e+08  4.015688e+08  4.560941e+08   
38      7.818745e+07  8.903914e+07  9.985305e+07  1.139705e+08  1.261441e+08   
39      2.953541e+07  3.554910e+07  4.080690e+07  4.883764e+07  6.176456e+07   
40      1.552811e+07  1.782762e+07  2.107549e+07  2.528295e+07  3.087783e+07   
41      3.061140e+04  7.368150e+04  1.354846e+05  2.311204e+05  4.337787e+05   
42      7.264648e+02  9.550000e+02  1.298989e+03  2.488453e+03  6.510688e+03   
43      3.391462e+05  6.484625e+05  1.027273e+06  1.521916e+06  2.000742e+06   
44      9.467118e+05  1.105792e+06  1.258719e+06  1.522144e+06  1.730049e+06   
45      1.010000e+03  1.230000e+03  1.623454e+03  2.411363e+03  4.860922e+03   
178     1.197367e+05  2.127870e+05  4.080517e+05  9.353023e+05  1.805385e+06   
179     1.004886e+05  1.622330e+05  3.015196e+05  5.244189e+05  1.257133e+06   
180     7.986169e+04  1.266165e+05  2.090313e+05  3.629333e+05  6.481258e+05   
181     1.312009e+05  2.091325e+05  3.674118e+05  7.080302e+05  1.278931e+06   
182     1.722001e+05  2.729415e+05  4.355399e+05  8.827767e+05  1.322597e+06   
183     4.839627e+05  7.514325e+05  1.322608e+06  2.267675e+06  4.014577e+06   
184     6.563623e+05  1.067938e+06  1.668773e+06  2.813737e+06  6.278214e+06   
185     1.153667e+06  1.790854e+06  2.884520e+06  4.824140e+06  9.023470e+06   
186     1.068975e+05  1.918815e+05  3.359747e+05  6.312887e+05  1.166037e+06   
187     9.203899e+04  1.520575e+05  2.771035e+05  5.077628e+05  8.059125e+05   
188     1.045954e+05  1.753805e+05  2.903271e+05  4.617828e+05  8.835734e+05   
189     2.562186e+05  4.168740e+05  6.433341e+05  1.041432e+06  1.604527e+06   
190     3.242767e+05  4.872435e+05  7.443359e+05  1.287284e+06  1.784333e+06   
...              ...           ...           ...           ...           ...   
34050   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  1.000000e+00   
34051   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  1.000000e+00   
34056   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  1.000000e+00   
34057   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  1.000000e+00   
34059   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34061   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  1.000000e+00   
34062   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34064   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  1.000000e+00   
34065   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  1.000000e+00   
34068   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  1.000000e+00   
34070   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  6.153715e-01   
34072   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34073   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34074   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  1.000000e+00   
34118   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34122   0.000000e+00  0.000000e+00  0.000000e+00  7.090832e+00  2.061537e+01   
34124   0.000000e+00  0.000000e+00  0.000000e+00  9.000000e+00  2.161537e+01   
34126   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  3.000000e+00   
34132   0.000000e+00  0.000000e+00  0.000000e+00  1.000000e+01  2.300000e+01   
34133   0.000000e+00  0.000000e+00  0.000000e+00  1.500000e+01  3.100000e+01   
34156   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  1.000000e+00   
34157   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34158   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34159   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34160   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  2.000000e+00   
34169   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34170   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34171   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34172   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34173   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  3.000000e+00   

                S2P0          S2P5  
typeid                              
18      6.430829e+07  7.829332e+07  
19      2.191913e+04  2.864078e+04  
20      9.337316e+06  1.152126e+07  
21      2.654841e+05  3.398883e+05  
22      9.506447e+04  1.170923e+05  
34      3.757319e+10  4.813529e+10  
35      7.926839e+09  8.558797e+09  
36      2.550204e+09  2.917229e+09  
37      5.425092e+08  6.027989e+08  
38      1.426165e+08  1.582939e+08  
39      7.682722e+07  9.995405e+07  
40      3.802282e+07  4.870905e+07  
41      1.026069e+06  1.650216e+06  
42      1.563617e+04  3.508980e+04  
43      2.320696e+06  2.726959e+06  
44      2.098982e+06  2.515438e+06  
45      1.256631e+04  5.068874e+04  
178     3.722688e+06  6.018544e+06  
179     4.814628e+06  1.557714e+07  
180     9.663622e+05  1.165662e+06  
181     2.206676e+06  4.594836e+06  
182     2.296009e+06  9.196804e+06  
183     8.609251e+06  4.040689e+07  
184     1.866111e+07  2.534615e+07  
185     1.624594e+07  2.730497e+07  
186     1.785865e+06  2.746817e+06  
187     1.511681e+06  2.111183e+06  
188     1.560639e+06  3.179314e+06  
189     2.769261e+06  4.853952e+06  
190     2.738676e+06  5.065089e+06  
...              ...           ...  
34050   2.000000e+00  3.733472e+00  
34051   2.000000e+00  3.000000e+00  
34056   3.000000e+00  4.733472e+00  
34057   2.000000e+00  3.000000e+00  
34059   2.000000e+00  5.466944e+00  
34061   2.000000e+00  3.733472e+00  
34062   1.000000e+00  3.000000e+00  
34064   2.000000e+00  4.000000e+00  
34065   3.000000e+00  3.000000e+00  
34068   2.000000e+00  5.200416e+00  
34070   1.000000e+00  2.000000e+00  
34072   1.000000e+00  1.733472e+00  
34073   2.000000e+00  6.000000e+00  
34074   2.000000e+00  3.733472e+00  
34118   3.696202e+00  1.200000e+01  
34122   3.069620e+01  4.433472e+01  
34124   3.469620e+01  4.700000e+01  
34126   5.696202e+00  1.146694e+01  
34132   3.869620e+01  5.500000e+01  
34133   4.869620e+01  6.473347e+01  
34156   2.000000e+00  3.000000e+00  
34157   1.000000e+00  2.000000e+00  
34158   1.000000e+00  2.000000e+00  
34159   2.000000e+00  5.000000e+00  
34160   5.000000e+00  6.000000e+00  
34169   1.000000e+00  1.733472e+00  
34170   0.000000e+00  1.000000e+00  
34171   0.000000e+00  1.000000e+00  
34172   1.000000e+00  2.000000e+00  
34173   5.696202e+00  7.000000e+00  

[7374 rows x 20 columns]
>>> s.V.market_sigmas.loc[34]
typename       Tritanium
N                    366
MIN         6.422449e+09
P10         1.088581e+10
MED         2.171377e+10
AVG         2.118469e+10
P90         3.001181e+10
MAX         7.073931e+10
STD         8.130761e+09
SN2P5        7.59886e+09
SN2P0       8.534222e+09
SN1P5       9.929784e+09
SN1P0       1.180023e+10
SN0P5       1.727268e+10
S0P0        2.171377e+10
S0P5         2.50849e+10
S1P0        2.822678e+10
S1P5        3.232504e+10
S2P0        3.757319e+10
S2P5        4.813529e+10
Name: 34, dtype: object
>>> s.V.vol_means
              volume      avgprice
itemid                            
18      4.951411e+07  7.278400e+01
19      6.664600e+03  2.934085e+03
20      6.141051e+06  2.859110e+02
21      2.670550e+04  4.878660e+02
22      9.377600e+03  2.549039e+03
34      1.298940e+10  5.577000e+00
35      2.908354e+09  1.109100e+01
36      9.735055e+08  6.965800e+01
37      1.953079e+08  1.207280e+02
38      7.483399e+07  5.586820e+02
39      4.798707e+07  4.442870e+02
40      2.379535e+07  7.368250e+02
41      2.850157e+05  2.834300e+01
42      2.401600e+03  1.108641e+03
43      1.087038e+06  3.167660e+02
44      9.860134e+05  7.861122e+03
45      1.095500e+03  3.114700e+01
178     2.230821e+05  3.694000e+00
179     2.093950e+05  4.293000e+00
180     8.487140e+04  3.641111e+00
181     2.947335e+05  7.049000e+00
182     2.990328e+05  7.460000e+00
183     2.109958e+06  1.915900e+01
184     1.342858e+06  1.709400e+01
185     2.116115e+06  2.316600e+01
186     5.155122e+05  1.459800e+01
187     2.661350e+05  1.442300e+01
188     3.298968e+05  2.380300e+01
189     3.309673e+05  4.234800e+01
190     5.659888e+05  3.776400e+01
...              ...           ...
34050   4.000000e-01  2.726667e+07
34051   9.000000e-01  2.925000e+07
34056   6.000000e-01  1.927622e+08
34057   3.000000e-01  2.025590e+08
34059   2.800000e+00  4.341484e+07
34061   7.000000e-01  2.432768e+08
34062   4.000000e-01  2.240642e+08
34064   5.000000e-01  1.419917e+08
34065   1.300000e+00  1.786945e+08
34068   1.100000e+00  2.208815e+08
34070   5.000000e-01  2.022150e+08
34072   0.000000e+00           NaN
34073   3.700000e+00  4.011113e+07
34074   9.000000e-01  2.157286e+08
34118   6.500000e+00  1.073979e+09
34122   1.580000e+01  1.098613e+07
34124   2.370000e+01  6.189488e+07
34126   3.400000e+00  3.873418e+08
34132   1.940000e+01  1.090149e+08
34133   2.440000e+01  8.243759e+08
34156   1.400000e+00  1.381180e+08
34157   7.000000e-01  1.657772e+08
34158   6.000000e-01  1.072660e+08
34159   1.700000e+00  1.331857e+08
34160   4.200000e+00  8.730644e+07
34169   5.000000e-01  2.028002e+08
34170   2.000000e-01  1.700000e+08
34171   2.000000e-01  2.387500e+08
34172   8.000000e-01  1.782917e+08
34173   4.600000e+00  8.227702e+07

[7374 rows x 2 columns]
>>> import pandas as pd
>>> s.V.of_interest
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'AttrLogger' object has no attribute 'of_interest'
>>> s.V.of_interest = pd.merge(vol_means, market_sigmas, left_index=True, right_index=True)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'vol_means' is not defined
>>> s.V.of_interest = pd.merge(s.V.vol_means, s.V.market_sigmas, left_index=True, right_index=True)
     360.2 Finished calculating of_interest.
>>> s.V.of_interest
              volume      avgprice                                 typename  \
itemid                                                                        
18      4.951411e+07  7.278400e+01                              Plagioclase   
19      6.664600e+03  2.934085e+03                                Spodumain   
20      6.141051e+06  2.859110e+02                                  Kernite   
21      2.670550e+04  4.878660e+02                               Hedbergite   
22      9.377600e+03  2.549039e+03                                  Arkonor   
34      1.298940e+10  5.577000e+00                                Tritanium   
35      2.908354e+09  1.109100e+01                                  Pyerite   
36      9.735055e+08  6.965800e+01                                 Mexallon   
37      1.953079e+08  1.207280e+02                                   Isogen   
38      7.483399e+07  5.586820e+02                                  Nocxium   
39      4.798707e+07  4.442870e+02                                  Zydrine   
40      2.379535e+07  7.368250e+02                                 Megacyte   
41      2.850157e+05  2.834300e+01                                  Garbage   
42      2.401600e+03  1.108641e+03                              Spiced Wine   
43      1.087038e+06  3.167660e+02                              Antibiotics   
44      9.860134e+05  7.861122e+03                         Enriched Uranium   
45      1.095500e+03  3.114700e+01                       Frozen Plant Seeds   
178     2.230821e+05  3.694000e+00                        Carbonized Lead S   
179     2.093950e+05  4.293000e+00                                Nuclear S   
180     8.487140e+04  3.641111e+00                                 Proton S   
181     2.947335e+05  7.049000e+00                       Depleted Uranium S   
182     2.990328e+05  7.460000e+00                         Titanium Sabot S   
183     2.109958e+06  1.915900e+01                                 Fusion S   
184     1.342858e+06  1.709400e+01                          Phased Plasma S   
185     2.116115e+06  2.316600e+01                                    EMP S   
186     5.155122e+05  1.459800e+01                        Carbonized Lead M   
187     2.661350e+05  1.442300e+01                                Nuclear M   
188     3.298968e+05  2.380300e+01                                 Proton M   
189     3.309673e+05  4.234800e+01                       Depleted Uranium M   
190     5.659888e+05  3.776400e+01                         Titanium Sabot M   
...              ...           ...                                      ...   
34050   4.000000e-01  2.726667e+07     Women's 'Hover' Tights (opaque blue)   
34051   9.000000e-01  2.925000e+07     Women's 'Hover' Tights (opaque gray)   
34056   6.000000e-01  1.927622e+08            Men's 'Nova' Headwear (black)   
34057   3.000000e-01  2.025590e+08  Men's 'Tectonic' Headwear (matte black)   
34059   2.800000e+00  4.341484e+07           Men's 'Nova' Headwear (silver)   
34061   7.000000e-01  2.432768e+08           Men's 'Nova' Headwear (bronze)   
34062   4.000000e-01  2.240642e+08        Men's 'Tectonic' Headwear (metal)   
34064   5.000000e-01  1.419917e+08       Women's 'Aeriform' Headwear (cyan)   
34065   1.300000e+00  1.786945e+08     Women's 'Blades' Headwear (gunmetal)   
34068   1.100000e+00  2.208815e+08     Women's 'Spiderweb' Headwear (black)   
34070   5.000000e-01  2.022150e+08     Women's 'Aeriform' Headwear (orange)   
34072   0.000000e+00           NaN    Women's 'Spiderweb' Headwear (copper)   
34073   3.700000e+00  4.011113e+07  Women's 'Spiderweb' Headwear (metallic)   
34074   9.000000e-01  2.157286e+08         Women's 'Blades' Headwear (jade)   
34118   6.500000e+00  1.073979e+09                  Megathron Quafe Edition   
34122   1.580000e+01  1.098613e+07            Limited Jump Drive Economizer   
34124   2.370000e+01  6.189488e+07       Experimental Jump Drive Economizer   
34126   3.400000e+00  3.873418e+08          Prototype Jump Drive Economizer   
34132   1.940000e+01  1.090149e+08        Pilot's Body Resculpt Certificate   
34133   2.440000e+01  8.243759e+08      Multiple Pilot Training Certificate   
34156   1.400000e+00  1.381180e+08         Men's 'Marshal' Jacket (Caldari)   
34157   7.000000e-01  1.657772e+08           Men's 'Marshal' Jacket (Amarr)   
34158   6.000000e-01  1.072660e+08        Men's 'Marshal' Jacket (Minmatar)   
34159   1.700000e+00  1.331857e+08        Men's 'Marshal' Jacket (Gallente)   
34160   4.200000e+00  8.730644e+07             Men's 'Marshal' Jacket (ORE)   
34169   5.000000e-01  2.028002e+08        Women's 'Gunner' Jacket (Caldari)   
34170   2.000000e-01  1.700000e+08          Women's 'Gunner' Jacket (Amarr)   
34171   2.000000e-01  2.387500e+08       Women's 'Gunner' Jacket (Minmatar)   
34172   8.000000e-01  1.782917e+08       Women's 'Gunner' Jacket (Gallente)   
34173   4.600000e+00  8.227702e+07            Women's 'Gunner' Jacket (ORE)   

          N         MIN           P10           MED           AVG  \
itemid                                                              
18      366     3875802  9.873781e+06  2.162093e+07  2.540986e+07   
19      363           0  2.130000e+02  1.096000e+03  3.395891e+03   
20      365           0  1.236256e+06  2.473058e+06  3.050467e+06   
21      366         854  1.214550e+04  5.243400e+04  7.008960e+04   
22      366        1247  5.975500e+03  2.096150e+04  2.774916e+04   
34      366  6422449079  1.088581e+10  2.171377e+10  2.118469e+10   
35      366  1538021810  2.466574e+09  4.650055e+09  4.570852e+09   
36      366   640981265  9.330175e+08  1.532116e+09  1.552161e+09   
37      366   103925510  1.791796e+08  3.037027e+08  3.073356e+08   
38      366    26201277  6.023771e+07  8.903914e+07  9.011936e+07   
39      366    10148009  2.342593e+07  3.554910e+07  3.814063e+07   
40      366     4775428  1.214083e+07  1.782762e+07  1.940243e+07   
41      366          50  4.989500e+03  7.368150e+04  1.574267e+05   
42      366         273  5.235000e+02  9.550000e+02  2.282784e+03   
43      366        5959  9.261050e+04  6.484625e+05  8.083263e+05   
44      366      199842  7.384760e+05  1.105792e+06  1.157393e+06   
45      362           0  7.300000e+02  1.230000e+03  3.280445e+03   
178     366       13965  6.002950e+04  2.127870e+05  6.009328e+05   
179     366       24019  5.332800e+04  1.622330e+05  6.272011e+05   
180     365           0  4.766900e+04  1.266165e+05  2.112741e+05   
181     366       23513  7.364750e+04  2.091325e+05  4.943779e+05   
182     366       25500  9.184950e+04  2.729415e+05  5.889185e+05   
183     366       67246  2.243195e+05  7.514325e+05  1.755055e+06   
184     366      121667  3.176410e+05  1.067938e+06  2.256453e+06   
185     365           0  6.976535e+05  1.790854e+06  3.281341e+06   
186     366       12650  4.946400e+04  1.918815e+05  3.669229e+05   
187     365           0  4.762100e+04  1.520575e+05  2.995353e+05   
188     366       14656  4.849500e+04  1.753805e+05  3.196233e+05   
189     366       19902  1.132935e+05  4.168740e+05  6.491696e+05   
190     366       46947  1.915945e+05  4.872435e+05  7.347406e+05   
...     ...         ...           ...           ...           ...   
34050    38           0  0.000000e+00  0.000000e+00  1.857923e-01   
34051    29           0  0.000000e+00  0.000000e+00  1.448087e-01   
34056    41           0  0.000000e+00  0.000000e+00  2.267760e-01   
34057    30           0  0.000000e+00  0.000000e+00  1.393443e-01   
34059    15           0  0.000000e+00  0.000000e+00  1.284153e-01   
34061    30           0  0.000000e+00  0.000000e+00  1.393443e-01   
34062    21           0  0.000000e+00  0.000000e+00  9.289617e-02   
34064    31           0  0.000000e+00  0.000000e+00  1.502732e-01   
34065    40           0  0.000000e+00  0.000000e+00  2.131148e-01   
34068    31           0  0.000000e+00  0.000000e+00  1.639344e-01   
34070    25           0  0.000000e+00  0.000000e+00  8.196721e-02   
34072    10           0  0.000000e+00  0.000000e+00  3.825137e-02   
34073    14           0  0.000000e+00  0.000000e+00  1.530055e-01   
34074    46           0  0.000000e+00  0.000000e+00  1.994536e-01   
34118    17           0  0.000000e+00  0.000000e+00  2.868852e-01   
34122    67           0  0.000000e+00  0.000000e+00  3.426230e+00   
34124    68           0  0.000000e+00  0.000000e+00  3.819672e+00   
34126    39           0  0.000000e+00  0.000000e+00  4.672131e-01   
34132    69           0  0.000000e+00  0.000000e+00  4.221311e+00   
34133    69           0  0.000000e+00  0.000000e+00  5.693989e+00   
34156    27           0  0.000000e+00  0.000000e+00  1.229508e-01   
34157    19           0  0.000000e+00  0.000000e+00  6.284153e-02   
34158    12           0  0.000000e+00  0.000000e+00  6.557377e-02   
34159    20           0  0.000000e+00  0.000000e+00  1.229508e-01   
34160    32           0  0.000000e+00  0.000000e+00  3.251366e-01   
34169    18           0  0.000000e+00  0.000000e+00  6.557377e-02   
34170     6           0  0.000000e+00  0.000000e+00  2.185792e-02   
34171     8           0  0.000000e+00  0.000000e+00  2.732240e-02   
34172    18           0  0.000000e+00  0.000000e+00  7.103825e-02   
34173    33           0  0.000000e+00  0.000000e+00  4.125683e-01   

                 P90          MAX      ...              SN2P0         SN1P5  \
itemid                                 ...                                    
18      4.486723e+07    130717578      ...       6.977596e+06  8.913571e+06   
19      1.027100e+04        59892      ...       3.591139e+01  1.360770e+02   
20      5.615875e+06     17211306      ...       8.442900e+05  1.152355e+06   
21      1.427900e+05       378672      ...       3.832924e+03  9.392007e+03   
22      5.763450e+04       214052      ...       2.684064e+03  4.849928e+03   
34      3.001181e+10  70739309589      ...       8.534222e+09  9.929784e+09   
35      6.580050e+09  10138178126      ...       1.861975e+09  2.188221e+09   
36      2.142851e+09   3685797317      ...       7.537885e+08  8.531130e+08   
37      4.292438e+08    716042085      ...       1.470933e+08  1.629908e+08   
38      1.207838e+08    167774017      ...       4.829226e+07  5.551247e+07   
39      5.730580e+07    140878739      ...       1.903873e+07  2.255090e+07   
40      2.769441e+07     76990015      ...       9.871065e+06  1.149511e+07   
41      3.156255e+05      3009350      ...       1.967722e+02  1.830616e+03   
42      4.045500e+03        50934      ...       3.900127e+02  4.880000e+02   
43      1.775064e+06      3712128      ...       3.092231e+04  6.161909e+04   
44      1.668376e+06      3016940      ...       5.927369e+05  6.882094e+05   
45      3.169000e+03       337580      ...       4.927595e+02  6.700000e+02   
178     1.303730e+06     28965718      ...       3.601209e+04  4.872823e+04   
179     1.012520e+06     21651636      ...       3.121568e+04  4.325055e+04   
180     4.873800e+05      1701470      ...       2.814704e+04  3.716880e+04   
181     1.015583e+06     27276720      ...       4.122572e+04  6.500515e+04   
182     1.152280e+06     13927848      ...       5.600803e+04  8.085970e+04   
183     2.860353e+06     42620887      ...       1.400438e+05  1.851978e+05   
184     4.321959e+06     30690857      ...       1.892892e+05  2.635983e+05   
185     6.565668e+06     47690308      ...       4.143414e+05  5.765894e+05   
186     9.553145e+05      4441016      ...       3.064496e+04  4.378508e+04   
187     6.372435e+05      5000403      ...       2.087905e+04  4.343455e+04   
188     7.230605e+05      5264080      ...       2.802390e+04  4.031623e+04   
189     1.395928e+06     12653208      ...       4.903074e+04  9.540735e+04   
190     1.583376e+06      5959894      ...       1.182965e+05  1.578048e+05   
...              ...          ...      ...                ...           ...   
34050   1.000000e+00            5      ...       0.000000e+00  0.000000e+00   
34051   0.000000e+00            5      ...       0.000000e+00  0.000000e+00   
34056   1.000000e+00            9      ...       0.000000e+00  0.000000e+00   
34057   0.000000e+00            5      ...       0.000000e+00  0.000000e+00   
34059   0.000000e+00            9      ...       0.000000e+00  0.000000e+00   
34061   0.000000e+00            6      ...       0.000000e+00  0.000000e+00   
34062   0.000000e+00            4      ...       0.000000e+00  0.000000e+00   
34064   0.000000e+00            6      ...       0.000000e+00  0.000000e+00   
34065   1.000000e+00            5      ...       0.000000e+00  0.000000e+00   
34068   0.000000e+00            8      ...       0.000000e+00  0.000000e+00   
34070   0.000000e+00            2      ...       0.000000e+00  0.000000e+00   
34072   0.000000e+00            3      ...       0.000000e+00  0.000000e+00   
34073   0.000000e+00           10      ...       0.000000e+00  0.000000e+00   
34074   1.000000e+00            4      ...       0.000000e+00  0.000000e+00   
34118   0.000000e+00           17      ...       0.000000e+00  0.000000e+00   
34122   1.400000e+01           66      ...       0.000000e+00  0.000000e+00   
34124   1.700000e+01           50      ...       0.000000e+00  0.000000e+00   
34126   1.000000e+00           17      ...       0.000000e+00  0.000000e+00   
34132   1.600000e+01           93      ...       0.000000e+00  0.000000e+00   
34133   2.600000e+01           92      ...       0.000000e+00  0.000000e+00   
34156   0.000000e+00            3      ...       0.000000e+00  0.000000e+00   
34157   0.000000e+00            2      ...       0.000000e+00  0.000000e+00   
34158   0.000000e+00            6      ...       0.000000e+00  0.000000e+00   
34159   0.000000e+00            7      ...       0.000000e+00  0.000000e+00   
34160   0.000000e+00           12      ...       0.000000e+00  0.000000e+00   
34169   0.000000e+00            4      ...       0.000000e+00  0.000000e+00   
34170   0.000000e+00            2      ...       0.000000e+00  0.000000e+00   
34171   0.000000e+00            2      ...       0.000000e+00  0.000000e+00   
34172   0.000000e+00            3      ...       0.000000e+00  0.000000e+00   
34173   0.000000e+00           10      ...       0.000000e+00  0.000000e+00   

               SN1P0         SN0P5          S0P0          S0P5          S1P0  \
itemid                                                                         
18      1.265614e+07  1.691769e+07  2.162093e+07  2.882915e+07  3.935387e+07   
19      3.422733e+02  5.946972e+02  1.096000e+03  2.493303e+03  5.245074e+03   
20      1.435115e+06  1.806961e+06  2.473058e+06  3.242705e+06  4.538457e+06   
21      1.861349e+04  3.419496e+04  5.243400e+04  7.940992e+04  1.186574e+05   
22      8.288731e+03  1.320027e+04  2.096150e+04  3.144103e+04  4.621635e+04   
34      1.180023e+10  1.727268e+10  2.171377e+10  2.508490e+10  2.822678e+10   
35      2.744249e+09  3.717868e+09  4.650055e+09  5.382107e+09  6.158091e+09   
36      1.022635e+09  1.259825e+09  1.532116e+09  1.791856e+09  2.026487e+09   
37      1.968935e+08  2.456065e+08  3.037027e+08  3.567435e+08  4.015688e+08   
38      6.710391e+07  7.818745e+07  8.903914e+07  9.985305e+07  1.139705e+08   
39      2.529721e+07  2.953541e+07  3.554910e+07  4.080690e+07  4.883764e+07   
40      1.309292e+07  1.552811e+07  1.782762e+07  2.107549e+07  2.528295e+07   
41      1.206573e+04  3.061140e+04  7.368150e+04  1.354846e+05  2.311204e+05   
42      5.652733e+02  7.264648e+02  9.550000e+02  1.298989e+03  2.488453e+03   
43      1.618247e+05  3.391462e+05  6.484625e+05  1.027273e+06  1.521916e+06   
44      8.089656e+05  9.467118e+05  1.105792e+06  1.258719e+06  1.522144e+06   
45      7.890917e+02  1.010000e+03  1.230000e+03  1.623454e+03  2.411363e+03   
178     7.669339e+04  1.197367e+05  2.127870e+05  4.080517e+05  9.353023e+05   
179     6.392657e+04  1.004886e+05  1.622330e+05  3.015196e+05  5.244189e+05   
180     5.366955e+04  7.986169e+04  1.266165e+05  2.090313e+05  3.629333e+05   
181     8.736500e+04  1.312009e+05  2.091325e+05  3.674118e+05  7.080302e+05   
182     1.149963e+05  1.722001e+05  2.729415e+05  4.355399e+05  8.827767e+05   
183     2.927057e+05  4.839627e+05  7.514325e+05  1.322608e+06  2.267675e+06   
184     4.208045e+05  6.563623e+05  1.067938e+06  1.668773e+06  2.813737e+06   
185     8.287799e+05  1.153667e+06  1.790854e+06  2.884520e+06  4.824140e+06   
186     6.376877e+04  1.068975e+05  1.918815e+05  3.359747e+05  6.312887e+05   
187     6.030212e+04  9.203899e+04  1.520575e+05  2.771035e+05  5.077628e+05   
188     6.021732e+04  1.045954e+05  1.753805e+05  2.903271e+05  4.617828e+05   
189     1.501683e+05  2.562186e+05  4.168740e+05  6.433341e+05  1.041432e+06   
190     2.251442e+05  3.242767e+05  4.872435e+05  7.443359e+05  1.287284e+06   
...              ...           ...           ...           ...           ...   
34050   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34051   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34056   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34057   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34059   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34061   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34062   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34064   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34065   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34068   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34070   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34072   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34073   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34074   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34118   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34122   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  7.090832e+00   
34124   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  9.000000e+00   
34126   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34132   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  1.000000e+01   
34133   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  1.500000e+01   
34156   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34157   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34158   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34159   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34160   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34169   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34170   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34171   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34172   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   
34173   0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00   

                S1P5          S2P0          S2P5  
itemid                                            
18      5.000580e+07  6.430829e+07  7.829332e+07  
19      1.439969e+04  2.191913e+04  2.864078e+04  
20      6.164179e+06  9.337316e+06  1.152126e+07  
21      1.786848e+05  2.654841e+05  3.398883e+05  
22      6.657123e+04  9.506447e+04  1.170923e+05  
34      3.232504e+10  3.757319e+10  4.813529e+10  
35      6.905491e+09  7.926839e+09  8.558797e+09  
36      2.314235e+09  2.550204e+09  2.917229e+09  
37      4.560941e+08  5.425092e+08  6.027989e+08  
38      1.261441e+08  1.426165e+08  1.582939e+08  
39      6.176456e+07  7.682722e+07  9.995405e+07  
40      3.087783e+07  3.802282e+07  4.870905e+07  
41      4.337787e+05  1.026069e+06  1.650216e+06  
42      6.510688e+03  1.563617e+04  3.508980e+04  
43      2.000742e+06  2.320696e+06  2.726959e+06  
44      1.730049e+06  2.098982e+06  2.515438e+06  
45      4.860922e+03  1.256631e+04  5.068874e+04  
178     1.805385e+06  3.722688e+06  6.018544e+06  
179     1.257133e+06  4.814628e+06  1.557714e+07  
180     6.481258e+05  9.663622e+05  1.165662e+06  
181     1.278931e+06  2.206676e+06  4.594836e+06  
182     1.322597e+06  2.296009e+06  9.196804e+06  
183     4.014577e+06  8.609251e+06  4.040689e+07  
184     6.278214e+06  1.866111e+07  2.534615e+07  
185     9.023470e+06  1.624594e+07  2.730497e+07  
186     1.166037e+06  1.785865e+06  2.746817e+06  
187     8.059125e+05  1.511681e+06  2.111183e+06  
188     8.835734e+05  1.560639e+06  3.179314e+06  
189     1.604527e+06  2.769261e+06  4.853952e+06  
190     1.784333e+06  2.738676e+06  5.065089e+06  
...              ...           ...           ...  
34050   1.000000e+00  2.000000e+00  3.733472e+00  
34051   1.000000e+00  2.000000e+00  3.000000e+00  
34056   1.000000e+00  3.000000e+00  4.733472e+00  
34057   1.000000e+00  2.000000e+00  3.000000e+00  
34059   0.000000e+00  2.000000e+00  5.466944e+00  
34061   1.000000e+00  2.000000e+00  3.733472e+00  
34062   0.000000e+00  1.000000e+00  3.000000e+00  
34064   1.000000e+00  2.000000e+00  4.000000e+00  
34065   1.000000e+00  3.000000e+00  3.000000e+00  
34068   1.000000e+00  2.000000e+00  5.200416e+00  
34070   6.153715e-01  1.000000e+00  2.000000e+00  
34072   0.000000e+00  1.000000e+00  1.733472e+00  
34073   0.000000e+00  2.000000e+00  6.000000e+00  
34074   1.000000e+00  2.000000e+00  3.733472e+00  
34118   0.000000e+00  3.696202e+00  1.200000e+01  
34122   2.061537e+01  3.069620e+01  4.433472e+01  
34124   2.161537e+01  3.469620e+01  4.700000e+01  
34126   3.000000e+00  5.696202e+00  1.146694e+01  
34132   2.300000e+01  3.869620e+01  5.500000e+01  
34133   3.100000e+01  4.869620e+01  6.473347e+01  
34156   1.000000e+00  2.000000e+00  3.000000e+00  
34157   0.000000e+00  1.000000e+00  2.000000e+00  
34158   0.000000e+00  1.000000e+00  2.000000e+00  
34159   0.000000e+00  2.000000e+00  5.000000e+00  
34160   2.000000e+00  5.000000e+00  6.000000e+00  
34169   0.000000e+00  1.000000e+00  1.733472e+00  
34170   0.000000e+00  0.000000e+00  1.000000e+00  
34171   0.000000e+00  0.000000e+00  1.000000e+00  
34172   0.000000e+00  1.000000e+00  2.000000e+00  
34173   3.000000e+00  5.696202e+00  7.000000e+00  

[7374 rows x 22 columns]
D:\Anaconda\lib\site-packages\pandas\core\format.py:1965: RuntimeWarning: invalid value encountered in greater
  has_large_values = (abs_vals > 1e8).any()
D:\Anaconda\lib\site-packages\pandas\core\format.py:1966: RuntimeWarning: invalid value encountered in less
  has_small_values = ((abs_vals < 10 ** (-self.digits)) &
D:\Anaconda\lib\site-packages\pandas\core\format.py:1967: RuntimeWarning: invalid value encountered in greater
  (abs_vals > 0)).any()
>>> s.V.of_interest.loc[34]
volume       1.29894e+10
avgprice           5.577
typename       Tritanium
N                    366
MIN         6.422449e+09
P10         1.088581e+10
MED         2.171377e+10
AVG         2.118469e+10
P90         3.001181e+10
MAX         7.073931e+10
STD         8.130761e+09
SN2P5        7.59886e+09
SN2P0       8.534222e+09
SN1P5       9.929784e+09
SN1P0       1.180023e+10
SN0P5       1.727268e+10
S0P0        2.171377e+10
S0P5         2.50849e+10
S1P0        2.822678e+10
S1P5        3.232504e+10
S2P0        3.757319e+10
S2P5        4.813529e+10
Name: 34, dtype: object
>>> s.V.market_data_groups
<pandas.core.groupby.DataFrameGroupBy object at 0x000000000DBB5C50>
>>> s.V.market_data_groups.get_group(34)
      itemid price_date       volume  avgprice
1830      34 2013-11-02  29112987907      4.75
1831      34 2013-11-03  36693361984      4.78
1832      34 2013-11-04  23069079781      4.78
1833      34 2013-11-05  26005580179      4.80
1834      34 2013-11-06  23654600552      4.79
1835      34 2013-11-07  24645749948      4.81
1836      34 2013-11-08  24397879623      4.80
1837      34 2013-11-09  31235106425      4.83
1838      34 2013-11-10  30529126145      4.81
1839      34 2013-11-11  22698778748      4.80
1840      34 2013-11-12  22413630385      4.86
1841      34 2013-11-13  24357785596      4.87
1842      34 2013-11-14  22898083113      4.78
1843      34 2013-11-15  25930441847      4.83
1844      34 2013-11-16  29777622031      4.84
1845      34 2013-11-17  25492688514      4.81
1846      34 2013-11-18  23267308672      4.84
1847      34 2013-11-19  18702274437      4.82
1848      34 2013-11-20  29861761354      4.83
1849      34 2013-11-21  21055486896      4.81
1850      34 2013-11-22  15471884772      4.80
1851      34 2013-11-23  24830596182      4.79
1852      34 2013-11-24  27364596015      4.80
1853      34 2013-11-25  17866574436      4.76
1854      34 2013-11-26  19727693721      4.76
1855      34 2013-11-27  18264210919      4.76
1856      34 2013-11-28  23969141777      4.76
1857      34 2013-11-29  23008027938      4.76
1858      34 2013-11-30  26238246428      4.76
1859      34 2013-12-01  23291661308      4.76
...      ...        ...          ...       ...
2166      34 2014-10-04  11964839000      5.46
2167      34 2014-10-05  12179560833      5.48
2168      34 2014-10-06  11558176515      5.53
2169      34 2014-10-07  15251307675      5.55
2170      34 2014-10-08  10235833952      5.51
2171      34 2014-10-09  13070837708      5.53
2172      34 2014-10-10  12875202112      5.49
2173      34 2014-10-11  10122357991      5.51
2174      34 2014-10-12  12374422863      5.58
2175      34 2014-10-13  10307106850      5.57
2176      34 2014-10-14  10308307822      5.53
2177      34 2014-10-15  12071957971      5.55
2178      34 2014-10-16   7649868427      5.47
2179      34 2014-10-17  11259645249      5.46
2180      34 2014-10-18  12925536177      5.51
2181      34 2014-10-19  13866506798      5.48
2182      34 2014-10-20  11430195304      5.53
2183      34 2014-10-21   8655125843      5.50
2184      34 2014-10-22   9166774536      5.50
2185      34 2014-10-23  11889511146      5.54
2186      34 2014-10-24  11449260792      5.56
2187      34 2014-10-25  10979265898      5.60
2188      34 2014-10-26  13986878657      5.66
2189      34 2014-10-27  14510989613      5.71
2190      34 2014-10-28  13256462532      5.65
2191      34 2014-10-29  11246050970      5.48
2192      34 2014-10-30  14610354056      5.62
2193      34 2014-10-31  16935147479      5.50
2194      34 2014-11-01  10705199830      5.50
2195      34 2014-11-02  12214346718      5.49

[366 rows x 4 columns]
>>> trit = s.V.market_data_groups.get_group(34)
>>> trit.quantile()
itemid      3.400000e+01
volume      2.171377e+10
avgprice    5.320000e+00
dtype: float64
>>> s.V.market_sigmas.loc[34]
typename       Tritanium
N                    366
MIN         6.422449e+09
P10         1.088581e+10
MED         2.171377e+10
AVG         2.118469e+10
P90         3.001181e+10
MAX         7.073931e+10
STD         8.130761e+09
SN2P5        7.59886e+09
SN2P0       8.534222e+09
SN1P5       9.929784e+09
SN1P0       1.180023e+10
SN0P5       1.727268e+10
S0P0        2.171377e+10
S0P5         2.50849e+10
S1P0        2.822678e+10
S1P5        3.232504e+10
S2P0        3.757319e+10
S2P5        4.813529e+10
Name: 34, dtype: object
>>> from scipy.stats import norm
>>> qs = [norm.cdf(q) for q in [
... 		-2.5,
... 		-2.0,
... 		-1.5,
... 		-1.0,
... 		-0.5,
... 		 0.0,
... 		 0.5,
... 		 1.0,
... 		 1.5,
... 		 2.0,
... 		 2.5
... 	]]
... 
>>> q
2.5
>>> qs
[0.0062096653257761323, 0.022750131948179195, 0.066807201268858071, 0.15865525393145707, 0.30853753872598688, 0.5, 0.69146246127401312, 0.84134474606854293, 0.93319279873114191, 0.97724986805182079, 0.99379033467422384]
>>> trit.quantile(qs)
          itemid        volume  avgprice
0.006210      34  7.598860e+09  4.720000
0.022750      34  8.534222e+09  4.730000
0.066807      34  9.929784e+09  4.760000
0.158655      34  1.180023e+10  4.800000
0.308538      34  1.727268e+10  4.996162
0.500000      34  2.171377e+10  5.320000
0.691462      34  2.508490e+10  5.490000
0.841345      34  2.822678e+10  5.832725
0.933193      34  3.232504e+10  6.190000
0.977250      34  3.757319e+10  6.246962
0.993790      34  4.813529e+10  6.342004
>>> s.V.mqs = s.V.market_data_groups.quantile(qs)
    1934.7 Finished calculating mqs.
>>> s.V.mqs
                 itemid           volume      avgprice
itemid                                                
18     0.006210      18   6035313.384103  4.539454e+01
       0.022750      18   6977596.238007  4.912595e+01
       0.066807      18   8913570.638100  5.108769e+01
       0.158655      18  12656135.327236  5.380637e+01
       0.308538      18  16917686.514705  5.583000e+01
       0.500000      18  21620931.000000  5.769500e+01
       0.691462      18  28829149.286358  5.939384e+01
       0.841345      18  39353865.748093  6.954635e+01
       0.933193      18  50005804.609607  7.387846e+01
       0.977250      18  64308294.152037  7.489747e+01
       0.993790      18  78293316.003946  7.507000e+01
19     0.006210      19         0.266528  5.000125e+02
       0.022750      19        35.911394  8.147833e+02
       0.066807      19       136.077028  1.500001e+03
       0.158655      19       342.273341  1.833810e+03
       0.308538      19       594.697210  2.150287e+03
       0.500000      19      1096.000000  2.610020e+03
       0.691462      19      2493.302790  2.915909e+03
       0.841345      19      5245.073942  3.005100e+03
       0.933193      19     14399.689169  3.639049e+03
       0.977250      19     21919.126478  4.472862e+03
       0.993790      19     28640.781366  5.975208e+03
20     0.006210      20    620897.756963  2.127307e+02
       0.022750      20    844290.031304  2.155542e+02
       0.066807      20   1152354.520143  2.250000e+02
       0.158655      20   1435114.610778  2.314101e+02
       0.308538      20   1806960.501559  2.389631e+02
       0.500000      20   2473058.500000  2.450000e+02
       0.691462      20   3242705.064662  2.539369e+02
       0.841345      20   4538456.561776  2.830800e+02
...                 ...              ...           ...
34171  0.158655   34171         0.000000  1.896877e+08
       0.308538   34171         0.000000  1.957988e+08
       0.500000   34171         0.000000  2.150000e+08
       0.691462   34171         0.000000  2.371420e+08
       0.841345   34171         0.000000  2.389447e+08
       0.933193   34171         0.000000  2.395323e+08
       0.977250   34171         0.000000  2.398407e+08
       0.993790   34171         1.000000  2.399565e+08
34172  0.006210   34172         0.000000  1.528584e+08
       0.022750   34172         0.000000  1.532802e+08
       0.066807   34172         0.000000  1.542544e+08
       0.158655   34172         0.000000  1.672673e+08
       0.308538   34172         0.000000  1.887099e+08
       0.500000   34172         0.000000  2.069500e+08
       0.691462   34172         0.000000  2.247549e+08
       0.841345   34172         0.000000  2.353029e+08
       0.933193   34172         0.000000  2.368643e+08
       0.977250   34172         1.000000  2.388397e+08
       0.993790   34172         2.000000  2.396833e+08
34173  0.006210   34173         0.000000  5.274716e+07
       0.022750   34173         0.000000  6.006466e+07
       0.066807   34173         0.000000  6.964328e+07
       0.158655   34173         0.000000  7.971159e+07
       0.308538   34173         0.000000  8.774895e+07
       0.500000   34173         0.000000  1.013333e+08
       0.691462   34173         0.000000  1.406376e+08
       0.841345   34173         0.000000  2.095311e+08
       0.933193   34173         3.000000  2.927645e+08
       0.977250   34173         5.696202  3.581431e+08
       0.993790   34173         7.000000  3.861516e+08

[81114 rows x 3 columns]
>>> s.V.mqs.loc[34]
          itemid        volume  avgprice
0.006210      34  7.598860e+09  4.720000
0.022750      34  8.534222e+09  4.730000
0.066807      34  9.929784e+09  4.760000
0.158655      34  1.180023e+10  4.800000
0.308538      34  1.727268e+10  4.996162
0.500000      34  2.171377e+10  5.320000
0.691462      34  2.508490e+10  5.490000
0.841345      34  2.822678e+10  5.832725
0.933193      34  3.232504e+10  6.190000
0.977250      34  3.757319e+10  6.246962
0.993790      34  4.813529e+10  6.342004
>>> s.V.mqs.index
MultiIndex(levels=[[18, 19, 20, 21, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, ...], [0.00620966532578, 0.0227501319482, 0.0668072012689, 0.158655253931, 0.308537538726, 0.5, 0.691462461274, 0.841344746069, 0.933192798731, 0.977249868052, 0.993790334674]],
           labels=[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, ...], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, ...]],
           names=[u'itemid', None])
>>> l = s.V.mqs.index.get_loc_level()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: get_loc_level() takes at least 2 arguments (1 given)
>>> l = s.V.mqs.index.get_level_values()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: get_level_values() takes exactly 2 arguments (1 given)
>>> l = s.V.mqs.index.get_level_values(1)
>>> l
Float64Index([0.00620966532578, 0.0227501319482, 0.0668072012689, 0.158655253931, 0.308537538726, 0.5, 0.691462461274, 0.841344746069, 0.933192798731, 0.977249868052, 0.993790334674, 0.00620966532578, 0.0227501319482, 0.0668072012689, 0.158655253931, 0.308537538726, 0.5, 0.691462461274, 0.841344746069, 0.933192798731, 0.977249868052, 0.993790334674, 0.00620966532578, 0.0227501319482, 0.0668072012689, 0.158655253931, 0.308537538726, 0.5, 0.691462461274, 0.841344746069, 0.933192798731, 0.977249868052, 0.993790334674, 0.00620966532578, 0.0227501319482, 0.0668072012689, 0.158655253931, 0.308537538726, 0.5, 0.691462461274, 0.841344746069, 0.933192798731, 0.977249868052, 0.993790334674, 0.00620966532578, 0.0227501319482, 0.0668072012689, 0.158655253931, 0.308537538726, 0.5, 0.691462461274, 0.841344746069, 0.933192798731, 0.977249868052, 0.993790334674, 0.00620966532578, 0.0227501319482, 0.0668072012689, 0.158655253931, 0.308537538726, 0.5, 0.691462461274, 0.841344746069, 0.933192798731, 0.977249868052, 0.993790334674, 0.00620966532578, 0.0227501319482, 0.0668072012689, 0.158655253931, 0.308537538726, 0.5, 0.691462461274, 0.841344746069, 0.933192798731, 0.977249868052, 0.993790334674, 0.00620966532578, 0.0227501319482, 0.0668072012689, 0.158655253931, 0.308537538726, 0.5, 0.691462461274, 0.841344746069, 0.933192798731, 0.977249868052, 0.993790334674, 0.00620966532578, 0.0227501319482, 0.0668072012689, 0.158655253931, 0.308537538726, 0.5, 0.691462461274, 0.841344746069, 0.933192798731, 0.977249868052, 0.993790334674, 0.00620966532578, ...], dtype='float64')
>>> l = s.V.mqs.index.levels
>>> l
FrozenList([[18, 19, 20, 21, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, ...], [0.00620966532578, 0.0227501319482, 0.0668072012689, 0.158655253931, 0.308537538726, 0.5, 0.691462461274, 0.841344746069, 0.933192798731, 0.977249868052, 0.993790334674]])
>>> l = list(s.V.mqs.index.levels)
>>> l
[Int64Index([18, 19, 20, 21, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, ...], dtype='int64'), Float64Index([0.00620966532578, 0.0227501319482, 0.0668072012689, 0.158655253931, 0.308537538726, 0.5, 0.691462461274, 0.841344746069, 0.933192798731, 0.977249868052, 0.993790334674], dtype='float64')]
>>> pd.Float64Index([0.1,0.2,0.3])
Float64Index([0.1, 0.2, 0.3], dtype='float64')
>>> pd.Index(['hi','there','world'])
Index([u'hi', u'there', u'world'], dtype='object')
>>> [
... 		-2.5,
... 		-2.0,
... 		-1.5,
... 		-1.0,
... 		-0.5,
... 		 0.0,
... 		 0.5,
... 		 1.0,
... 		 1.5,
... 		 2.0,
... 		 2.5
... 	]
[-2.5, -2.0, -1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0, 2.5]
>>> r_s = [-2.5, -2.0, -1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0, 2.5]
>>> l2 = pd.Index([s.sig_int_to_str(sig) for sig in r_s])
>>> l2
Index([u'SN2P5', u'SN2P0', u'SN1P5', u'SN1P0', u'SN0P5', u'S0P0', u'S0P5', u'S1P0', u'S1P5', u'S2P0', u'S2P5'], dtype='object')
>>> l[1] = l2
>>> l
[Int64Index([18, 19, 20, 21, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, ...], dtype='int64'), Index([u'SN2P5', u'SN2P0', u'SN1P5', u'SN1P0', u'SN0P5', u'S0P0', u'S0P5', u'S1P0', u'S1P5', u'S2P0', u'S2P5'], dtype='object')]
>>> s.V.mqs.index.levels = l
D:\Anaconda\lib\site-packages\pandas\util\decorators.py:13: FutureWarning: setting `levels` directly is deprecated. Use set_levels instead
  FutureWarning)
>>> s.V.mqs
              itemid           volume      avgprice
itemid                                             
18     SN2P5      18   6035313.384103  4.539454e+01
       SN2P0      18   6977596.238007  4.912595e+01
       SN1P5      18   8913570.638100  5.108769e+01
       SN1P0      18  12656135.327236  5.380637e+01
       SN0P5      18  16917686.514705  5.583000e+01
       S0P0       18  21620931.000000  5.769500e+01
       S0P5       18  28829149.286358  5.939384e+01
       S1P0       18  39353865.748093  6.954635e+01
       S1P5       18  50005804.609607  7.387846e+01
       S2P0       18  64308294.152037  7.489747e+01
       S2P5       18  78293316.003946  7.507000e+01
19     SN2P5      19         0.266528  5.000125e+02
       SN2P0      19        35.911394  8.147833e+02
       SN1P5      19       136.077028  1.500001e+03
       SN1P0      19       342.273341  1.833810e+03
       SN0P5      19       594.697210  2.150287e+03
       S0P0       19      1096.000000  2.610020e+03
       S0P5       19      2493.302790  2.915909e+03
       S1P0       19      5245.073942  3.005100e+03
       S1P5       19     14399.689169  3.639049e+03
       S2P0       19     21919.126478  4.472862e+03
       S2P5       19     28640.781366  5.975208e+03
20     SN2P5      20    620897.756963  2.127307e+02
       SN2P0      20    844290.031304  2.155542e+02
       SN1P5      20   1152354.520143  2.250000e+02
       SN1P0      20   1435114.610778  2.314101e+02
       SN0P5      20   1806960.501559  2.389631e+02
       S0P0       20   2473058.500000  2.450000e+02
       S0P5       20   3242705.064662  2.539369e+02
       S1P0       20   4538456.561776  2.830800e+02
...              ...              ...           ...
34171  SN1P0   34171         0.000000  1.896877e+08
       SN0P5   34171         0.000000  1.957988e+08
       S0P0    34171         0.000000  2.150000e+08
       S0P5    34171         0.000000  2.371420e+08
       S1P0    34171         0.000000  2.389447e+08
       S1P5    34171         0.000000  2.395323e+08
       S2P0    34171         0.000000  2.398407e+08
       S2P5    34171         1.000000  2.399565e+08
34172  SN2P5   34172         0.000000  1.528584e+08
       SN2P0   34172         0.000000  1.532802e+08
       SN1P5   34172         0.000000  1.542544e+08
       SN1P0   34172         0.000000  1.672673e+08
       SN0P5   34172         0.000000  1.887099e+08
       S0P0    34172         0.000000  2.069500e+08
       S0P5    34172         0.000000  2.247549e+08
       S1P0    34172         0.000000  2.353029e+08
       S1P5    34172         0.000000  2.368643e+08
       S2P0    34172         1.000000  2.388397e+08
       S2P5    34172         2.000000  2.396833e+08
34173  SN2P5   34173         0.000000  5.274716e+07
       SN2P0   34173         0.000000  6.006466e+07
       SN1P5   34173         0.000000  6.964328e+07
       SN1P0   34173         0.000000  7.971159e+07
       SN0P5   34173         0.000000  8.774895e+07
       S0P0    34173         0.000000  1.013333e+08
       S0P5    34173         0.000000  1.406376e+08
       S1P0    34173         0.000000  2.095311e+08
       S1P5    34173         3.000000  2.927645e+08
       S2P0    34173         5.696202  3.581431e+08
       S2P5    34173         7.000000  3.861516e+08

[81114 rows x 3 columns]
>>> gg = s.V.mqs.groupby(itemid)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'itemid' is not defined
>>> gg = s.V.mqs.groupby('itemid')
>>> gg
<pandas.core.groupby.DataFrameGroupBy object at 0x0000000002A48DD8>
>>> gg.get_group(34)
              itemid        volume  avgprice
itemid                                      
34     SN2P5      34  7.598860e+09  4.720000
       SN2P0      34  8.534222e+09  4.730000
       SN1P5      34  9.929784e+09  4.760000
       SN1P0      34  1.180023e+10  4.800000
       SN0P5      34  1.727268e+10  4.996162
       S0P0       34  2.171377e+10  5.320000
       S0P5       34  2.508490e+10  5.490000
       S1P0       34  2.822678e+10  5.832725
       S1P5       34  3.232504e+10  6.190000
       S2P0       34  3.757319e+10  6.246962
       S2P5       34  4.813529e+10  6.342004
>>> s.V.mqs
              itemid           volume      avgprice
itemid                                             
18     SN2P5      18   6035313.384103  4.539454e+01
       SN2P0      18   6977596.238007  4.912595e+01
       SN1P5      18   8913570.638100  5.108769e+01
       SN1P0      18  12656135.327236  5.380637e+01
       SN0P5      18  16917686.514705  5.583000e+01
       S0P0       18  21620931.000000  5.769500e+01
       S0P5       18  28829149.286358  5.939384e+01
       S1P0       18  39353865.748093  6.954635e+01
       S1P5       18  50005804.609607  7.387846e+01
       S2P0       18  64308294.152037  7.489747e+01
       S2P5       18  78293316.003946  7.507000e+01
19     SN2P5      19         0.266528  5.000125e+02
       SN2P0      19        35.911394  8.147833e+02
       SN1P5      19       136.077028  1.500001e+03
       SN1P0      19       342.273341  1.833810e+03
       SN0P5      19       594.697210  2.150287e+03
       S0P0       19      1096.000000  2.610020e+03
       S0P5       19      2493.302790  2.915909e+03
       S1P0       19      5245.073942  3.005100e+03
       S1P5       19     14399.689169  3.639049e+03
       S2P0       19     21919.126478  4.472862e+03
       S2P5       19     28640.781366  5.975208e+03
20     SN2P5      20    620897.756963  2.127307e+02
       SN2P0      20    844290.031304  2.155542e+02
       SN1P5      20   1152354.520143  2.250000e+02
       SN1P0      20   1435114.610778  2.314101e+02
       SN0P5      20   1806960.501559  2.389631e+02
       S0P0       20   2473058.500000  2.450000e+02
       S0P5       20   3242705.064662  2.539369e+02
       S1P0       20   4538456.561776  2.830800e+02
...              ...              ...           ...
34171  SN1P0   34171         0.000000  1.896877e+08
       SN0P5   34171         0.000000  1.957988e+08
       S0P0    34171         0.000000  2.150000e+08
       S0P5    34171         0.000000  2.371420e+08
       S1P0    34171         0.000000  2.389447e+08
       S1P5    34171         0.000000  2.395323e+08
       S2P0    34171         0.000000  2.398407e+08
       S2P5    34171         1.000000  2.399565e+08
34172  SN2P5   34172         0.000000  1.528584e+08
       SN2P0   34172         0.000000  1.532802e+08
       SN1P5   34172         0.000000  1.542544e+08
       SN1P0   34172         0.000000  1.672673e+08
       SN0P5   34172         0.000000  1.887099e+08
       S0P0    34172         0.000000  2.069500e+08
       S0P5    34172         0.000000  2.247549e+08
       S1P0    34172         0.000000  2.353029e+08
       S1P5    34172         0.000000  2.368643e+08
       S2P0    34172         1.000000  2.388397e+08
       S2P5    34172         2.000000  2.396833e+08
34173  SN2P5   34173         0.000000  5.274716e+07
       SN2P0   34173         0.000000  6.006466e+07
       SN1P5   34173         0.000000  6.964328e+07
       SN1P0   34173         0.000000  7.971159e+07
       SN0P5   34173         0.000000  8.774895e+07
       S0P0    34173         0.000000  1.013333e+08
       S0P5    34173         0.000000  1.406376e+08
       S1P0    34173         0.000000  2.095311e+08
       S1P5    34173         3.000000  2.927645e+08
       S2P0    34173         5.696202  3.581431e+08
       S2P5    34173         7.000000  3.861516e+08

[81114 rows x 3 columns]
>>> s.V.mqs.loc[34,'SN2P5']
itemid      3.400000e+01
volume      7.598860e+09
avgprice    4.720000e+00
Name: (34, SN2P5), dtype: float64
>>> rdf = s.V.raw_data_filled
>>> rdf
         itemid price_date    volume      avgprice
0            18 2013-11-02  39381609  4.512000e+01
1            18 2013-11-03  42961573  4.506000e+01
2            18 2013-11-04  12704806  4.905000e+01
3            18 2013-11-05  49553044  5.000000e+01
4            18 2013-11-06  13980435  4.604000e+01
5            18 2013-11-07  18976154  4.930000e+01
6            18 2013-11-08  16608642  4.941000e+01
7            18 2013-11-09  15067572  4.946000e+01
8            18 2013-11-10  18090347  4.995000e+01
9            18 2013-11-11  20436689  4.650000e+01
10           18 2013-11-12  15752480  5.046000e+01
11           18 2013-11-13   9454508  5.081000e+01
12           18 2013-11-14  16649091  5.001000e+01
13           18 2013-11-15   9675592  5.199000e+01
14           18 2013-11-16  17230584  4.516000e+01
15           18 2013-11-17  33862768  5.500000e+01
16           18 2013-11-18  30822756  5.250000e+01
17           18 2013-11-19  11289062  5.395000e+01
18           18 2013-11-20  29608770  5.413000e+01
19           18 2013-11-21  15104457  5.422000e+01
20           18 2013-11-22  46956539  5.424000e+01
21           18 2013-11-23  17279149  5.455000e+01
22           18 2013-11-24  22230750  5.437000e+01
23           18 2013-11-25  21320555  5.436000e+01
24           18 2013-11-26  14662851  5.451000e+01
25           18 2013-11-27  30840049  5.437000e+01
26           18 2013-11-28  11619466  5.377000e+01
27           18 2013-11-29  41791215  5.385000e+01
28           18 2013-11-30  18739456  5.190000e+01
29           18 2013-12-01  25650792  5.381000e+01
...         ...        ...       ...           ...
2698854   34173 2014-10-04         0           NaN
2698855   34173 2014-10-05         5  3.008000e+08
2698856   34173 2014-10-06         4  2.425000e+08
2698857   34173 2014-10-07         3  2.213333e+08
2698858   34173 2014-10-08        10  2.109096e+08
2698859   34173 2014-10-09         5  1.930000e+08
2698860   34173 2014-10-10         7  1.634286e+08
2698861   34173 2014-10-11         5  1.402800e+08
2698862   34173 2014-10-12         5  1.431000e+08
2698863   34173 2014-10-13         7  8.800002e+07
2698864   34173 2014-10-14         6  1.065000e+08
2698865   34173 2014-10-15         5  1.038000e+08
2698866   34173 2014-10-16         3  8.100000e+07
2698867   34173 2014-10-17         4  6.382500e+07
2698868   34173 2014-10-18         6  1.100000e+08
2698869   34173 2014-10-19         3  1.013333e+08
2698870   34173 2014-10-20         2  1.285000e+08
2698871   34173 2014-10-21         2  1.010540e+08
2698872   34173 2014-10-22         7  9.475858e+07
2698873   34173 2014-10-23         4  1.227750e+08
2698874   34173 2014-10-24         5  8.602000e+07
2698875   34173 2014-10-25         3  9.133334e+07
2698876   34173 2014-10-26         6  7.576666e+07
2698877   34173 2014-10-27         4  8.025000e+07
2698878   34173 2014-10-28         3  7.366666e+07
2698879   34173 2014-10-29         6  9.333334e+07
2698880   34173 2014-10-30         3  8.233340e+07
2698881   34173 2014-10-31         8  6.900009e+07
2698882   34173 2014-11-01         3  7.966670e+07
2698883   34173 2014-11-02         5  9.140000e+07

[2698884 rows x 4 columns]
>>> ts = rdf['avgprice']
>>> ts.index = rdf['price_date']
>>> ts
price_date
2013-11-02    45.12
2013-11-03    45.06
2013-11-04    49.05
2013-11-05    50.00
2013-11-06    46.04
2013-11-07    49.30
2013-11-08    49.41
2013-11-09    49.46
2013-11-10    49.95
2013-11-11    46.50
2013-11-12    50.46
2013-11-13    50.81
2013-11-14    50.01
2013-11-15    51.99
2013-11-16    45.16
...
2014-10-19    101333336
2014-10-20    128500000
2014-10-21    101054008
2014-10-22     94758576
2014-10-23    122775000
2014-10-24     86020000
2014-10-25     91333336
2014-10-26     75766664
2014-10-27     80250000
2014-10-28     73666664
2014-10-29     93333336
2014-10-30     82333400
2014-10-31     69000088
2014-11-01     79666696
2014-11-02     91400000
Name: avgprice, Length: 2698884
>>> ts = rdf['itemid','avgprice']
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\frame.py", line 1743, in __getitem__
    return self._getitem_column(key)
  File "D:\Anaconda\lib\site-packages\pandas\core\frame.py", line 1750, in _getitem_column
    return self._get_item_cache(key)
  File "D:\Anaconda\lib\site-packages\pandas\core\generic.py", line 1058, in _get_item_cache
    values = self._data.get(item)
  File "D:\Anaconda\lib\site-packages\pandas\core\internals.py", line 2806, in get
    loc = self.items.get_loc(item)
  File "D:\Anaconda\lib\site-packages\pandas\core\index.py", line 1385, in get_loc
    return self._engine.get_loc(_values_from_object(key))
  File "pandas\index.pyx", line 133, in pandas.index.IndexEngine.get_loc (pandas\index.c:3795)
  File "pandas\index.pyx", line 153, in pandas.index.IndexEngine.get_loc (pandas\index.c:3675)
  File "pandas\hashtable.pyx", line 696, in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12299)
  File "pandas\hashtable.pyx", line 704, in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12250)
KeyError: ('itemid', 'avgprice')
>>> ts['itemid'] = rdf['itemid']
__main__:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
>>> ts
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\base.py", line 65, in __repr__
    return str(self)
  File "D:\Anaconda\lib\site-packages\pandas\core\base.py", line 45, in __str__
    return self.__bytes__()
  File "D:\Anaconda\lib\site-packages\pandas\core\base.py", line 57, in __bytes__
    return self.__unicode__().encode(encoding, 'replace')
  File "D:\Anaconda\lib\site-packages\pandas\core\series.py", line 878, in __unicode__
    result = self._tidy_repr(min(30, max_rows - 4))
  File "D:\Anaconda\lib\site-packages\pandas\core\series.py", line 908, in _tidy_repr
    result = '%s\n%s' % (result, self._repr_footer())
  File "D:\Anaconda\lib\site-packages\pandas\core\series.py", line 919, in _repr_footer
    if self.index.freq is not None:
AttributeError: 'Index' object has no attribute 'freq'
>>> ts = rdf.loc[:, ['itemid','avgprice']]
>>> ts
         itemid      avgprice
0            18  4.512000e+01
1            18  4.506000e+01
2            18  4.905000e+01
3            18  5.000000e+01
4            18  4.604000e+01
5            18  4.930000e+01
6            18  4.941000e+01
7            18  4.946000e+01
8            18  4.995000e+01
9            18  4.650000e+01
10           18  5.046000e+01
11           18  5.081000e+01
12           18  5.001000e+01
13           18  5.199000e+01
14           18  4.516000e+01
15           18  5.500000e+01
16           18  5.250000e+01
17           18  5.395000e+01
18           18  5.413000e+01
19           18  5.422000e+01
20           18  5.424000e+01
21           18  5.455000e+01
22           18  5.437000e+01
23           18  5.436000e+01
24           18  5.451000e+01
25           18  5.437000e+01
26           18  5.377000e+01
27           18  5.385000e+01
28           18  5.190000e+01
29           18  5.381000e+01
...         ...           ...
2698854   34173           NaN
2698855   34173  3.008000e+08
2698856   34173  2.425000e+08
2698857   34173  2.213333e+08
2698858   34173  2.109096e+08
2698859   34173  1.930000e+08
2698860   34173  1.634286e+08
2698861   34173  1.402800e+08
2698862   34173  1.431000e+08
2698863   34173  8.800002e+07
2698864   34173  1.065000e+08
2698865   34173  1.038000e+08
2698866   34173  8.100000e+07
2698867   34173  6.382500e+07
2698868   34173  1.100000e+08
2698869   34173  1.013333e+08
2698870   34173  1.285000e+08
2698871   34173  1.010540e+08
2698872   34173  9.475858e+07
2698873   34173  1.227750e+08
2698874   34173  8.602000e+07
2698875   34173  9.133334e+07
2698876   34173  7.576666e+07
2698877   34173  8.025000e+07
2698878   34173  7.366666e+07
2698879   34173  9.333334e+07
2698880   34173  8.233340e+07
2698881   34173  6.900009e+07
2698882   34173  7.966670e+07
2698883   34173  9.140000e+07

[2698884 rows x 2 columns]
>>> ts.index = rdf['price_date']
>>> ts
            itemid      avgprice
price_date                      
2013-11-02      18  4.512000e+01
2013-11-03      18  4.506000e+01
2013-11-04      18  4.905000e+01
2013-11-05      18  5.000000e+01
2013-11-06      18  4.604000e+01
2013-11-07      18  4.930000e+01
2013-11-08      18  4.941000e+01
2013-11-09      18  4.946000e+01
2013-11-10      18  4.995000e+01
2013-11-11      18  4.650000e+01
2013-11-12      18  5.046000e+01
2013-11-13      18  5.081000e+01
2013-11-14      18  5.001000e+01
2013-11-15      18  5.199000e+01
2013-11-16      18  4.516000e+01
2013-11-17      18  5.500000e+01
2013-11-18      18  5.250000e+01
2013-11-19      18  5.395000e+01
2013-11-20      18  5.413000e+01
2013-11-21      18  5.422000e+01
2013-11-22      18  5.424000e+01
2013-11-23      18  5.455000e+01
2013-11-24      18  5.437000e+01
2013-11-25      18  5.436000e+01
2013-11-26      18  5.451000e+01
2013-11-27      18  5.437000e+01
2013-11-28      18  5.377000e+01
2013-11-29      18  5.385000e+01
2013-11-30      18  5.190000e+01
2013-12-01      18  5.381000e+01
...            ...           ...
2014-10-04   34173           NaN
2014-10-05   34173  3.008000e+08
2014-10-06   34173  2.425000e+08
2014-10-07   34173  2.213333e+08
2014-10-08   34173  2.109096e+08
2014-10-09   34173  1.930000e+08
2014-10-10   34173  1.634286e+08
2014-10-11   34173  1.402800e+08
2014-10-12   34173  1.431000e+08
2014-10-13   34173  8.800002e+07
2014-10-14   34173  1.065000e+08
2014-10-15   34173  1.038000e+08
2014-10-16   34173  8.100000e+07
2014-10-17   34173  6.382500e+07
2014-10-18   34173  1.100000e+08
2014-10-19   34173  1.013333e+08
2014-10-20   34173  1.285000e+08
2014-10-21   34173  1.010540e+08
2014-10-22   34173  9.475858e+07
2014-10-23   34173  1.227750e+08
2014-10-24   34173  8.602000e+07
2014-10-25   34173  9.133334e+07
2014-10-26   34173  7.576666e+07
2014-10-27   34173  8.025000e+07
2014-10-28   34173  7.366666e+07
2014-10-29   34173  9.333334e+07
2014-10-30   34173  8.233340e+07
2014-10-31   34173  6.900009e+07
2014-11-01   34173  7.966670e+07
2014-11-02   34173  9.140000e+07

[2698884 rows x 2 columns]
>>> int_ts = ts.groupby('itemid').interpolate(method='time')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 504, in __getattr__
    return self._make_wrapper(attr)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 519, in _make_wrapper
    raise AttributeError(msg)
AttributeError: Cannot access callable attribute 'interpolate' of 'DataFrameGroupBy' objects, try using the 'apply' method
>>> tsg = ts.groupby('itemid')
>>> tsgi = tsg.interpolate(method='time')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 504, in __getattr__
    return self._make_wrapper(attr)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 519, in _make_wrapper
    raise AttributeError(msg)
AttributeError: Cannot access callable attribute 'interpolate' of 'DataFrameGroupBy' objects, try using the 'apply' method
>>> tsgi = tsg.interpolate
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 504, in __getattr__
    return self._make_wrapper(attr)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 519, in _make_wrapper
    raise AttributeError(msg)
AttributeError: Cannot access callable attribute 'interpolate' of 'DataFrameGroupBy' objects, try using the 'apply' method
>>> tsgi = tsg.apply(lambda x: x.interpolate(method='time'))
>>> tsgi
            itemid      avgprice
price_date                      
2013-11-02      18  4.512000e+01
2013-11-03      18  4.506000e+01
2013-11-04      18  4.905000e+01
2013-11-05      18  5.000000e+01
2013-11-06      18  4.604000e+01
2013-11-07      18  4.930000e+01
2013-11-08      18  4.941000e+01
2013-11-09      18  4.946000e+01
2013-11-10      18  4.995000e+01
2013-11-11      18  4.650000e+01
2013-11-12      18  5.046000e+01
2013-11-13      18  5.081000e+01
2013-11-14      18  5.001000e+01
2013-11-15      18  5.199000e+01
2013-11-16      18  4.516000e+01
2013-11-17      18  5.500000e+01
2013-11-18      18  5.250000e+01
2013-11-19      18  5.395000e+01
2013-11-20      18  5.413000e+01
2013-11-21      18  5.422000e+01
2013-11-22      18  5.424000e+01
2013-11-23      18  5.455000e+01
2013-11-24      18  5.437000e+01
2013-11-25      18  5.436000e+01
2013-11-26      18  5.451000e+01
2013-11-27      18  5.437000e+01
2013-11-28      18  5.377000e+01
2013-11-29      18  5.385000e+01
2013-11-30      18  5.190000e+01
2013-12-01      18  5.381000e+01
...            ...           ...
2014-10-04   34173  3.222750e+08
2014-10-05   34173  3.008000e+08
2014-10-06   34173  2.425000e+08
2014-10-07   34173  2.213333e+08
2014-10-08   34173  2.109096e+08
2014-10-09   34173  1.930000e+08
2014-10-10   34173  1.634286e+08
2014-10-11   34173  1.402800e+08
2014-10-12   34173  1.431000e+08
2014-10-13   34173  8.800002e+07
2014-10-14   34173  1.065000e+08
2014-10-15   34173  1.038000e+08
2014-10-16   34173  8.100000e+07
2014-10-17   34173  6.382500e+07
2014-10-18   34173  1.100000e+08
2014-10-19   34173  1.013333e+08
2014-10-20   34173  1.285000e+08
2014-10-21   34173  1.010540e+08
2014-10-22   34173  9.475858e+07
2014-10-23   34173  1.227750e+08
2014-10-24   34173  8.602000e+07
2014-10-25   34173  9.133334e+07
2014-10-26   34173  7.576666e+07
2014-10-27   34173  8.025000e+07
2014-10-28   34173  7.366666e+07
2014-10-29   34173  9.333334e+07
2014-10-30   34173  8.233340e+07
2014-10-31   34173  6.900009e+07
2014-11-01   34173  7.966670e+07
2014-11-02   34173  9.140000e+07

[2698884 rows x 2 columns]
>>> rdf.loc['interpolated_price'] = tsgi.loc['avgprice']
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 1194, in __getitem__
    return self._getitem_axis(key, axis=0)
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 1337, in _getitem_axis
    self._has_valid_type(key, axis)
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 1299, in _has_valid_type
    error()
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 1286, in error
    (key, self.obj._get_axis_name(axis)))
KeyError: 'the label [avgprice] is not in the [index]'
>>> rdf.loc[:,'interpolated_price'] = tsgi.loc[:,'avgprice']
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 121, in __setitem__
    self._setitem_with_indexer(indexer, value)
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 249, in _setitem_with_indexer
    self._setitem_with_indexer(new_indexer, value)
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 348, in _setitem_with_indexer
    value = self._align_series(indexer, value)
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 561, in _align_series
    return ser.reindex(new_ix).values
  File "D:\Anaconda\lib\site-packages\pandas\core\series.py", line 2136, in reindex
    return super(Series, self).reindex(index=index, **kwargs)
  File "D:\Anaconda\lib\site-packages\pandas\core\generic.py", line 1721, in reindex
    method, fill_value, copy).__finalize__(self)
  File "D:\Anaconda\lib\site-packages\pandas\core\generic.py", line 1739, in _reindex_axes
    allow_dups=False)
  File "D:\Anaconda\lib\site-packages\pandas\core\generic.py", line 1824, in _reindex_with_indexers
    copy=copy)
  File "D:\Anaconda\lib\site-packages\pandas\core\internals.py", line 3107, in reindex_indexer
    raise ValueError("cannot reindex from a duplicate axis")
ValueError: cannot reindex from a duplicate axis
>>> pd.merge(rdf, tsgi, copy=False)
          itemid price_date    volume      avgprice  interpolated_price
0             18 2013-11-02  39381609  4.512000e+01                 NaN
1             18 2013-11-03  42961573  4.506000e+01                 NaN
2             18 2013-11-04  12704806  4.905000e+01                 NaN
3             18 2013-11-05  49553044  5.000000e+01                 NaN
4             18 2013-11-05  49553044  5.000000e+01                 NaN
5             18 2014-08-02  34183234  5.000000e+01                 NaN
6             18 2014-08-02  34183234  5.000000e+01                 NaN
7             18 2013-11-06  13980435  4.604000e+01                 NaN
8             18 2013-11-07  18976154  4.930000e+01                 NaN
9             18 2013-11-08  16608642  4.941000e+01                 NaN
10            18 2013-11-09  15067572  4.946000e+01                 NaN
11            18 2013-11-10  18090347  4.995000e+01                 NaN
12            18 2013-11-11  20436689  4.650000e+01                 NaN
13            18 2013-11-12  15752480  5.046000e+01                 NaN
14            18 2013-11-13   9454508  5.081000e+01                 NaN
15            18 2013-11-14  16649091  5.001000e+01                 NaN
16            18 2013-11-14  16649091  5.001000e+01                 NaN
17            18 2013-12-18  11194571  5.001000e+01                 NaN
18            18 2013-12-18  11194571  5.001000e+01                 NaN
19            18 2013-11-15   9675592  5.199000e+01                 NaN
20            18 2013-11-15   9675592  5.199000e+01                 NaN
21            18 2014-07-25  17808385  5.199000e+01                 NaN
22            18 2014-07-25  17808385  5.199000e+01                 NaN
23            18 2013-11-16  17230584  4.516000e+01                 NaN
24            18 2013-11-17  33862768  5.500000e+01                 NaN
25            18 2013-11-17  33862768  5.500000e+01                 NaN
26            18 2013-11-17  33862768  5.500000e+01                 NaN
27            18 2013-11-17  33862768  5.500000e+01                 NaN
28            18 2013-11-17  33862768  5.500000e+01                 NaN
29            18 2013-11-17  33862768  5.500000e+01                 NaN
...          ...        ...       ...           ...                 ...
45917292   34173 2014-10-03         4  3.437500e+08                 NaN
45917293   34173 2014-10-05         5  3.008000e+08                 NaN
45917294   34173 2014-10-06         4  2.425000e+08                 NaN
45917295   34173 2014-10-07         3  2.213333e+08                 NaN
45917296   34173 2014-10-08        10  2.109096e+08                 NaN
45917297   34173 2014-10-09         5  1.930000e+08                 NaN
45917298   34173 2014-10-10         7  1.634286e+08                 NaN
45917299   34173 2014-10-11         5  1.402800e+08                 NaN
45917300   34173 2014-10-12         5  1.431000e+08                 NaN
45917301   34173 2014-10-13         7  8.800002e+07                 NaN
45917302   34173 2014-10-14         6  1.065000e+08                 NaN
45917303   34173 2014-10-15         5  1.038000e+08                 NaN
45917304   34173 2014-10-16         3  8.100000e+07                 NaN
45917305   34173 2014-10-17         4  6.382500e+07                 NaN
45917306   34173 2014-10-18         6  1.100000e+08                 NaN
45917307   34173 2014-10-19         3  1.013333e+08                 NaN
45917308   34173 2014-10-20         2  1.285000e+08                 NaN
45917309   34173 2014-10-21         2  1.010540e+08                 NaN
45917310   34173 2014-10-22         7  9.475858e+07                 NaN
45917311   34173 2014-10-23         4  1.227750e+08                 NaN
45917312   34173 2014-10-24         5  8.602000e+07                 NaN
45917313   34173 2014-10-25         3  9.133334e+07                 NaN
45917314   34173 2014-10-26         6  7.576666e+07                 NaN
45917315   34173 2014-10-27         4  8.025000e+07                 NaN
45917316   34173 2014-10-28         3  7.366666e+07                 NaN
45917317   34173 2014-10-29         6  9.333334e+07                 NaN
45917318   34173 2014-10-30         3  8.233340e+07                 NaN
45917319   34173 2014-10-31         8  6.900009e+07                 NaN
45917320   34173 2014-11-01         3  7.966670e+07                 NaN
45917321   34173 2014-11-02         5  9.140000e+07                 NaN

[45917322 rows x 5 columns]
>>> rdf = s.V.raw_data_filled
>>> rdf
         itemid price_date    volume      avgprice  interpolated_price
0            18 2013-11-02  39381609  4.512000e+01                 NaN
1            18 2013-11-03  42961573  4.506000e+01                 NaN
2            18 2013-11-04  12704806  4.905000e+01                 NaN
3            18 2013-11-05  49553044  5.000000e+01                 NaN
4            18 2013-11-06  13980435  4.604000e+01                 NaN
5            18 2013-11-07  18976154  4.930000e+01                 NaN
6            18 2013-11-08  16608642  4.941000e+01                 NaN
7            18 2013-11-09  15067572  4.946000e+01                 NaN
8            18 2013-11-10  18090347  4.995000e+01                 NaN
9            18 2013-11-11  20436689  4.650000e+01                 NaN
10           18 2013-11-12  15752480  5.046000e+01                 NaN
11           18 2013-11-13   9454508  5.081000e+01                 NaN
12           18 2013-11-14  16649091  5.001000e+01                 NaN
13           18 2013-11-15   9675592  5.199000e+01                 NaN
14           18 2013-11-16  17230584  4.516000e+01                 NaN
15           18 2013-11-17  33862768  5.500000e+01                 NaN
16           18 2013-11-18  30822756  5.250000e+01                 NaN
17           18 2013-11-19  11289062  5.395000e+01                 NaN
18           18 2013-11-20  29608770  5.413000e+01                 NaN
19           18 2013-11-21  15104457  5.422000e+01                 NaN
20           18 2013-11-22  46956539  5.424000e+01                 NaN
21           18 2013-11-23  17279149  5.455000e+01                 NaN
22           18 2013-11-24  22230750  5.437000e+01                 NaN
23           18 2013-11-25  21320555  5.436000e+01                 NaN
24           18 2013-11-26  14662851  5.451000e+01                 NaN
25           18 2013-11-27  30840049  5.437000e+01                 NaN
26           18 2013-11-28  11619466  5.377000e+01                 NaN
27           18 2013-11-29  41791215  5.385000e+01                 NaN
28           18 2013-11-30  18739456  5.190000e+01                 NaN
29           18 2013-12-01  25650792  5.381000e+01                 NaN
...         ...        ...       ...           ...                 ...
2698854   34173 2014-10-04         0           NaN                 NaN
2698855   34173 2014-10-05         5  3.008000e+08                 NaN
2698856   34173 2014-10-06         4  2.425000e+08                 NaN
2698857   34173 2014-10-07         3  2.213333e+08                 NaN
2698858   34173 2014-10-08        10  2.109096e+08                 NaN
2698859   34173 2014-10-09         5  1.930000e+08                 NaN
2698860   34173 2014-10-10         7  1.634286e+08                 NaN
2698861   34173 2014-10-11         5  1.402800e+08                 NaN
2698862   34173 2014-10-12         5  1.431000e+08                 NaN
2698863   34173 2014-10-13         7  8.800002e+07                 NaN
2698864   34173 2014-10-14         6  1.065000e+08                 NaN
2698865   34173 2014-10-15         5  1.038000e+08                 NaN
2698866   34173 2014-10-16         3  8.100000e+07                 NaN
2698867   34173 2014-10-17         4  6.382500e+07                 NaN
2698868   34173 2014-10-18         6  1.100000e+08                 NaN
2698869   34173 2014-10-19         3  1.013333e+08                 NaN
2698870   34173 2014-10-20         2  1.285000e+08                 NaN
2698871   34173 2014-10-21         2  1.010540e+08                 NaN
2698872   34173 2014-10-22         7  9.475858e+07                 NaN
2698873   34173 2014-10-23         4  1.227750e+08                 NaN
2698874   34173 2014-10-24         5  8.602000e+07                 NaN
2698875   34173 2014-10-25         3  9.133334e+07                 NaN
2698876   34173 2014-10-26         6  7.576666e+07                 NaN
2698877   34173 2014-10-27         4  8.025000e+07                 NaN
2698878   34173 2014-10-28         3  7.366666e+07                 NaN
2698879   34173 2014-10-29         6  9.333334e+07                 NaN
2698880   34173 2014-10-30         3  8.233340e+07                 NaN
2698881   34173 2014-10-31         8  6.900009e+07                 NaN
2698882   34173 2014-11-01         3  7.966670e+07                 NaN
2698883   34173 2014-11-02         5  9.140000e+07                 NaN

[2698884 rows x 5 columns]
>>> rdf = s.V.raw_data
>>> rdf
         itemid price_date    volume      avgprice
0            18 2013-11-02  39381609  4.512000e+01
1            18 2013-11-03  42961573  4.506000e+01
2            18 2013-11-04  12704806  4.905000e+01
3            18 2013-11-05  49553044  5.000000e+01
4            18 2013-11-06  13980435  4.604000e+01
5            18 2013-11-07  18976154  4.930000e+01
6            18 2013-11-08  16608642  4.941000e+01
7            18 2013-11-09  15067572  4.946000e+01
8            18 2013-11-10  18090347  4.995000e+01
9            18 2013-11-11  20436689  4.650000e+01
10           18 2013-11-12  15752480  5.046000e+01
11           18 2013-11-13   9454508  5.081000e+01
12           18 2013-11-14  16649091  5.001000e+01
13           18 2013-11-15   9675592  5.199000e+01
14           18 2013-11-16  17230584  4.516000e+01
15           18 2013-11-17  33862768  5.500000e+01
16           18 2013-11-18  30822756  5.250000e+01
17           18 2013-11-19  11289062  5.395000e+01
18           18 2013-11-20  29608770  5.413000e+01
19           18 2013-11-21  15104457  5.422000e+01
20           18 2013-11-22  46956539  5.424000e+01
21           18 2013-11-23  17279149  5.455000e+01
22           18 2013-11-24  22230750  5.437000e+01
23           18 2013-11-25  21320555  5.436000e+01
24           18 2013-11-26  14662851  5.451000e+01
25           18 2013-11-27  30840049  5.437000e+01
26           18 2013-11-28  11619466  5.377000e+01
27           18 2013-11-29  41791215  5.385000e+01
28           18 2013-11-30  18739456  5.190000e+01
29           18 2013-12-01  25650792  5.381000e+01
...         ...        ...       ...           ...
1880441   34173 2014-10-03         4  3.437500e+08
1880442   34173 2014-10-05         5  3.008000e+08
1880443   34173 2014-10-06         4  2.425000e+08
1880444   34173 2014-10-07         3  2.213333e+08
1880445   34173 2014-10-08        10  2.109096e+08
1880446   34173 2014-10-09         5  1.930000e+08
1880447   34173 2014-10-10         7  1.634286e+08
1880448   34173 2014-10-11         5  1.402800e+08
1880449   34173 2014-10-12         5  1.431000e+08
1880450   34173 2014-10-13         7  8.800002e+07
1880451   34173 2014-10-14         6  1.065000e+08
1880452   34173 2014-10-15         5  1.038000e+08
1880453   34173 2014-10-16         3  8.100000e+07
1880454   34173 2014-10-17         4  6.382500e+07
1880455   34173 2014-10-18         6  1.100000e+08
1880456   34173 2014-10-19         3  1.013333e+08
1880457   34173 2014-10-20         2  1.285000e+08
1880458   34173 2014-10-21         2  1.010540e+08
1880459   34173 2014-10-22         7  9.475858e+07
1880460   34173 2014-10-23         4  1.227750e+08
1880461   34173 2014-10-24         5  8.602000e+07
1880462   34173 2014-10-25         3  9.133334e+07
1880463   34173 2014-10-26         6  7.576666e+07
1880464   34173 2014-10-27         4  8.025000e+07
1880465   34173 2014-10-28         3  7.366666e+07
1880466   34173 2014-10-29         6  9.333334e+07
1880467   34173 2014-10-30         3  8.233340e+07
1880468   34173 2014-10-31         8  6.900009e+07
1880469   34173 2014-11-01         3  7.966670e+07
1880470   34173 2014-11-02         5  9.140000e+07

[1880471 rows x 4 columns]
>>> rd = rdf
>>> rdf = None
>>> rdf = pd.ordered_merge(rd[rd.itemid.isin(s.V.convert.index)], s.V.expected_dates, on='price_date',left_by='itemid')
>>> rdf.fillna({'volume':0}, inplace=True)
         itemid price_date    volume      avgprice
0            18 2013-11-02  39381609  4.512000e+01
1            18 2013-11-03  42961573  4.506000e+01
2            18 2013-11-04  12704806  4.905000e+01
3            18 2013-11-05  49553044  5.000000e+01
4            18 2013-11-06  13980435  4.604000e+01
5            18 2013-11-07  18976154  4.930000e+01
6            18 2013-11-08  16608642  4.941000e+01
7            18 2013-11-09  15067572  4.946000e+01
8            18 2013-11-10  18090347  4.995000e+01
9            18 2013-11-11  20436689  4.650000e+01
10           18 2013-11-12  15752480  5.046000e+01
11           18 2013-11-13   9454508  5.081000e+01
12           18 2013-11-14  16649091  5.001000e+01
13           18 2013-11-15   9675592  5.199000e+01
14           18 2013-11-16  17230584  4.516000e+01
15           18 2013-11-17  33862768  5.500000e+01
16           18 2013-11-18  30822756  5.250000e+01
17           18 2013-11-19  11289062  5.395000e+01
18           18 2013-11-20  29608770  5.413000e+01
19           18 2013-11-21  15104457  5.422000e+01
20           18 2013-11-22  46956539  5.424000e+01
21           18 2013-11-23  17279149  5.455000e+01
22           18 2013-11-24  22230750  5.437000e+01
23           18 2013-11-25  21320555  5.436000e+01
24           18 2013-11-26  14662851  5.451000e+01
25           18 2013-11-27  30840049  5.437000e+01
26           18 2013-11-28  11619466  5.377000e+01
27           18 2013-11-29  41791215  5.385000e+01
28           18 2013-11-30  18739456  5.190000e+01
29           18 2013-12-01  25650792  5.381000e+01
...         ...        ...       ...           ...
2698854   34173 2014-10-04         0           NaN
2698855   34173 2014-10-05         5  3.008000e+08
2698856   34173 2014-10-06         4  2.425000e+08
2698857   34173 2014-10-07         3  2.213333e+08
2698858   34173 2014-10-08        10  2.109096e+08
2698859   34173 2014-10-09         5  1.930000e+08
2698860   34173 2014-10-10         7  1.634286e+08
2698861   34173 2014-10-11         5  1.402800e+08
2698862   34173 2014-10-12         5  1.431000e+08
2698863   34173 2014-10-13         7  8.800002e+07
2698864   34173 2014-10-14         6  1.065000e+08
2698865   34173 2014-10-15         5  1.038000e+08
2698866   34173 2014-10-16         3  8.100000e+07
2698867   34173 2014-10-17         4  6.382500e+07
2698868   34173 2014-10-18         6  1.100000e+08
2698869   34173 2014-10-19         3  1.013333e+08
2698870   34173 2014-10-20         2  1.285000e+08
2698871   34173 2014-10-21         2  1.010540e+08
2698872   34173 2014-10-22         7  9.475858e+07
2698873   34173 2014-10-23         4  1.227750e+08
2698874   34173 2014-10-24         5  8.602000e+07
2698875   34173 2014-10-25         3  9.133334e+07
2698876   34173 2014-10-26         6  7.576666e+07
2698877   34173 2014-10-27         4  8.025000e+07
2698878   34173 2014-10-28         3  7.366666e+07
2698879   34173 2014-10-29         6  9.333334e+07
2698880   34173 2014-10-30         3  8.233340e+07
2698881   34173 2014-10-31         8  6.900009e+07
2698882   34173 2014-11-01         3  7.966670e+07
2698883   34173 2014-11-02         5  9.140000e+07

[2698884 rows x 4 columns]
>>> rdf.loc[:,'intprice'] = None
>>> rdf
         itemid price_date    volume      avgprice intprice
0            18 2013-11-02  39381609  4.512000e+01     None
1            18 2013-11-03  42961573  4.506000e+01     None
2            18 2013-11-04  12704806  4.905000e+01     None
3            18 2013-11-05  49553044  5.000000e+01     None
4            18 2013-11-06  13980435  4.604000e+01     None
5            18 2013-11-07  18976154  4.930000e+01     None
6            18 2013-11-08  16608642  4.941000e+01     None
7            18 2013-11-09  15067572  4.946000e+01     None
8            18 2013-11-10  18090347  4.995000e+01     None
9            18 2013-11-11  20436689  4.650000e+01     None
10           18 2013-11-12  15752480  5.046000e+01     None
11           18 2013-11-13   9454508  5.081000e+01     None
12           18 2013-11-14  16649091  5.001000e+01     None
13           18 2013-11-15   9675592  5.199000e+01     None
14           18 2013-11-16  17230584  4.516000e+01     None
15           18 2013-11-17  33862768  5.500000e+01     None
16           18 2013-11-18  30822756  5.250000e+01     None
17           18 2013-11-19  11289062  5.395000e+01     None
18           18 2013-11-20  29608770  5.413000e+01     None
19           18 2013-11-21  15104457  5.422000e+01     None
20           18 2013-11-22  46956539  5.424000e+01     None
21           18 2013-11-23  17279149  5.455000e+01     None
22           18 2013-11-24  22230750  5.437000e+01     None
23           18 2013-11-25  21320555  5.436000e+01     None
24           18 2013-11-26  14662851  5.451000e+01     None
25           18 2013-11-27  30840049  5.437000e+01     None
26           18 2013-11-28  11619466  5.377000e+01     None
27           18 2013-11-29  41791215  5.385000e+01     None
28           18 2013-11-30  18739456  5.190000e+01     None
29           18 2013-12-01  25650792  5.381000e+01     None
...         ...        ...       ...           ...      ...
2698854   34173 2014-10-04         0           NaN     None
2698855   34173 2014-10-05         5  3.008000e+08     None
2698856   34173 2014-10-06         4  2.425000e+08     None
2698857   34173 2014-10-07         3  2.213333e+08     None
2698858   34173 2014-10-08        10  2.109096e+08     None
2698859   34173 2014-10-09         5  1.930000e+08     None
2698860   34173 2014-10-10         7  1.634286e+08     None
2698861   34173 2014-10-11         5  1.402800e+08     None
2698862   34173 2014-10-12         5  1.431000e+08     None
2698863   34173 2014-10-13         7  8.800002e+07     None
2698864   34173 2014-10-14         6  1.065000e+08     None
2698865   34173 2014-10-15         5  1.038000e+08     None
2698866   34173 2014-10-16         3  8.100000e+07     None
2698867   34173 2014-10-17         4  6.382500e+07     None
2698868   34173 2014-10-18         6  1.100000e+08     None
2698869   34173 2014-10-19         3  1.013333e+08     None
2698870   34173 2014-10-20         2  1.285000e+08     None
2698871   34173 2014-10-21         2  1.010540e+08     None
2698872   34173 2014-10-22         7  9.475858e+07     None
2698873   34173 2014-10-23         4  1.227750e+08     None
2698874   34173 2014-10-24         5  8.602000e+07     None
2698875   34173 2014-10-25         3  9.133334e+07     None
2698876   34173 2014-10-26         6  7.576666e+07     None
2698877   34173 2014-10-27         4  8.025000e+07     None
2698878   34173 2014-10-28         3  7.366666e+07     None
2698879   34173 2014-10-29         6  9.333334e+07     None
2698880   34173 2014-10-30         3  8.233340e+07     None
2698881   34173 2014-10-31         8  6.900009e+07     None
2698882   34173 2014-11-01         3  7.966670e+07     None
2698883   34173 2014-11-02         5  9.140000e+07     None

[2698884 rows x 5 columns]
>>> # rdf.groupby('itemid').apply(lambda x: x.loc[:,'intprice'] = x.loc[:,'avgprice'].interpolate())
... 
>>> def f(x): x.loc[:,'intprice'] = x.loc[:,'avgprice'].interpolate()
... 
>>> rdf.groupby('itemid').apply(f)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 658, in apply
    return self._python_apply_general(f)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 665, in _python_apply_general
    not_indexed_same=mutated)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 2807, in _wrap_applied_output
    v = next(v for v in values if v is not None)
StopIteration
>>> rdf
         itemid price_date    volume      avgprice intprice
0            18 2013-11-02  39381609  4.512000e+01     None
1            18 2013-11-03  42961573  4.506000e+01     None
2            18 2013-11-04  12704806  4.905000e+01     None
3            18 2013-11-05  49553044  5.000000e+01     None
4            18 2013-11-06  13980435  4.604000e+01     None
5            18 2013-11-07  18976154  4.930000e+01     None
6            18 2013-11-08  16608642  4.941000e+01     None
7            18 2013-11-09  15067572  4.946000e+01     None
8            18 2013-11-10  18090347  4.995000e+01     None
9            18 2013-11-11  20436689  4.650000e+01     None
10           18 2013-11-12  15752480  5.046000e+01     None
11           18 2013-11-13   9454508  5.081000e+01     None
12           18 2013-11-14  16649091  5.001000e+01     None
13           18 2013-11-15   9675592  5.199000e+01     None
14           18 2013-11-16  17230584  4.516000e+01     None
15           18 2013-11-17  33862768  5.500000e+01     None
16           18 2013-11-18  30822756  5.250000e+01     None
17           18 2013-11-19  11289062  5.395000e+01     None
18           18 2013-11-20  29608770  5.413000e+01     None
19           18 2013-11-21  15104457  5.422000e+01     None
20           18 2013-11-22  46956539  5.424000e+01     None
21           18 2013-11-23  17279149  5.455000e+01     None
22           18 2013-11-24  22230750  5.437000e+01     None
23           18 2013-11-25  21320555  5.436000e+01     None
24           18 2013-11-26  14662851  5.451000e+01     None
25           18 2013-11-27  30840049  5.437000e+01     None
26           18 2013-11-28  11619466  5.377000e+01     None
27           18 2013-11-29  41791215  5.385000e+01     None
28           18 2013-11-30  18739456  5.190000e+01     None
29           18 2013-12-01  25650792  5.381000e+01     None
...         ...        ...       ...           ...      ...
2698854   34173 2014-10-04         0           NaN     None
2698855   34173 2014-10-05         5  3.008000e+08     None
2698856   34173 2014-10-06         4  2.425000e+08     None
2698857   34173 2014-10-07         3  2.213333e+08     None
2698858   34173 2014-10-08        10  2.109096e+08     None
2698859   34173 2014-10-09         5  1.930000e+08     None
2698860   34173 2014-10-10         7  1.634286e+08     None
2698861   34173 2014-10-11         5  1.402800e+08     None
2698862   34173 2014-10-12         5  1.431000e+08     None
2698863   34173 2014-10-13         7  8.800002e+07     None
2698864   34173 2014-10-14         6  1.065000e+08     None
2698865   34173 2014-10-15         5  1.038000e+08     None
2698866   34173 2014-10-16         3  8.100000e+07     None
2698867   34173 2014-10-17         4  6.382500e+07     None
2698868   34173 2014-10-18         6  1.100000e+08     None
2698869   34173 2014-10-19         3  1.013333e+08     None
2698870   34173 2014-10-20         2  1.285000e+08     None
2698871   34173 2014-10-21         2  1.010540e+08     None
2698872   34173 2014-10-22         7  9.475858e+07     None
2698873   34173 2014-10-23         4  1.227750e+08     None
2698874   34173 2014-10-24         5  8.602000e+07     None
2698875   34173 2014-10-25         3  9.133334e+07     None
2698876   34173 2014-10-26         6  7.576666e+07     None
2698877   34173 2014-10-27         4  8.025000e+07     None
2698878   34173 2014-10-28         3  7.366666e+07     None
2698879   34173 2014-10-29         6  9.333334e+07     None
2698880   34173 2014-10-30         3  8.233340e+07     None
2698881   34173 2014-10-31         8  6.900009e+07     None
2698882   34173 2014-11-01         3  7.966670e+07     None
2698883   34173 2014-11-02         5  9.140000e+07     None

[2698884 rows x 5 columns]
>>> def f(x):
... 	intprice = x['avgprice'].interpolate()
... 	x.loc[:,'intprice'] = intprice
... 
>>> rdf.groupby('itemid').apply(f)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 658, in apply
    return self._python_apply_general(f)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 665, in _python_apply_general
    not_indexed_same=mutated)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 2807, in _wrap_applied_output
    v = next(v for v in values if v is not None)
StopIteration
>>> rdfg = rdf.groupby('itemid')
>>> rdfg
<pandas.core.groupby.DataFrameGroupBy object at 0x000000005F54AB00>
>>> rdfg.apply(f)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 658, in apply
    return self._python_apply_general(f)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 665, in _python_apply_general
    not_indexed_same=mutated)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 2807, in _wrap_applied_output
    v = next(v for v in values if v is not None)
StopIteration
>>> rdfg.get_group(12345)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 592, in get_group
    inds = self._get_index(name)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 444, in _get_index
    return self.indices[name]
KeyError: 12345
>>> rdfg.get_group(34171)
         itemid price_date  volume   avgprice intprice
2697786   34171 2013-11-02       0        NaN     None
2697787   34171 2013-11-03       0        NaN     None
2697788   34171 2013-11-04       0        NaN     None
2697789   34171 2013-11-05       0        NaN     None
2697790   34171 2013-11-06       0        NaN     None
2697791   34171 2013-11-07       0        NaN     None
2697792   34171 2013-11-08       0        NaN     None
2697793   34171 2013-11-09       0        NaN     None
2697794   34171 2013-11-10       0        NaN     None
2697795   34171 2013-11-11       0        NaN     None
2697796   34171 2013-11-12       0        NaN     None
2697797   34171 2013-11-13       0        NaN     None
2697798   34171 2013-11-14       0        NaN     None
2697799   34171 2013-11-15       0        NaN     None
2697800   34171 2013-11-16       0        NaN     None
2697801   34171 2013-11-17       0        NaN     None
2697802   34171 2013-11-18       0        NaN     None
2697803   34171 2013-11-19       0        NaN     None
2697804   34171 2013-11-20       0        NaN     None
2697805   34171 2013-11-21       0        NaN     None
2697806   34171 2013-11-22       0        NaN     None
2697807   34171 2013-11-23       0        NaN     None
2697808   34171 2013-11-24       0        NaN     None
2697809   34171 2013-11-25       0        NaN     None
2697810   34171 2013-11-26       0        NaN     None
2697811   34171 2013-11-27       0        NaN     None
2697812   34171 2013-11-28       0        NaN     None
2697813   34171 2013-11-29       0        NaN     None
2697814   34171 2013-11-30       0        NaN     None
2697815   34171 2013-12-01       0        NaN     None
...         ...        ...     ...        ...      ...
2698122   34171 2014-10-04       0        NaN     None
2698123   34171 2014-10-05       2  200000000     None
2698124   34171 2014-10-06       0        NaN     None
2698125   34171 2014-10-07       0        NaN     None
2698126   34171 2014-10-08       0        NaN     None
2698127   34171 2014-10-09       1  230000000     None
2698128   34171 2014-10-10       0        NaN     None
2698129   34171 2014-10-11       1  240000000     None
2698130   34171 2014-10-12       0        NaN     None
2698131   34171 2014-10-13       0        NaN     None
2698132   34171 2014-10-14       0        NaN     None
2698133   34171 2014-10-15       0        NaN     None
2698134   34171 2014-10-16       0        NaN     None
2698135   34171 2014-10-17       0        NaN     None
2698136   34171 2014-10-18       2  189027136     None
2698137   34171 2014-10-19       0        NaN     None
2698138   34171 2014-10-20       0        NaN     None
2698139   34171 2014-10-21       0        NaN     None
2698140   34171 2014-10-22       0        NaN     None
2698141   34171 2014-10-23       0        NaN     None
2698142   34171 2014-10-24       0        NaN     None
2698143   34171 2014-10-25       0        NaN     None
2698144   34171 2014-10-26       0        NaN     None
2698145   34171 2014-10-27       0        NaN     None
2698146   34171 2014-10-28       1  239000000     None
2698147   34171 2014-10-29       0        NaN     None
2698148   34171 2014-10-30       0        NaN     None
2698149   34171 2014-10-31       0        NaN     None
2698150   34171 2014-11-01       0        NaN     None
2698151   34171 2014-11-02       1  238500000     None

[366 rows x 5 columns]
>>> rdfg.get_group(34171).loc['avgprice']
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 1194, in __getitem__
    return self._getitem_axis(key, axis=0)
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 1337, in _getitem_axis
    self._has_valid_type(key, axis)
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 1299, in _has_valid_type
    error()
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 1286, in error
    (key, self.obj._get_axis_name(axis)))
KeyError: 'the label [avgprice] is not in the [index]'
>>> rdfg.get_group(34171).loc[:,'avgprice']
2697786   NaN
2697787   NaN
2697788   NaN
2697789   NaN
2697790   NaN
2697791   NaN
2697792   NaN
2697793   NaN
2697794   NaN
2697795   NaN
2697796   NaN
2697797   NaN
2697798   NaN
2697799   NaN
2697800   NaN
...
2698137          NaN
2698138          NaN
2698139          NaN
2698140          NaN
2698141          NaN
2698142          NaN
2698143          NaN
2698144          NaN
2698145          NaN
2698146    239000000
2698147          NaN
2698148          NaN
2698149          NaN
2698150          NaN
2698151    238500000
Name: avgprice, Length: 366, dtype: float64
>>> rdfg.get_group(34171).loc[:,'avgprice'].interpolate()
2697786   NaN
2697787   NaN
2697788   NaN
2697789   NaN
2697790   NaN
2697791   NaN
2697792   NaN
2697793   NaN
2697794   NaN
2697795   NaN
2697796   NaN
2697797   NaN
2697798   NaN
2697799   NaN
2697800   NaN
...
2698137    194024422.4
2698138    199021708.8
2698139    204018995.2
2698140    209016281.6
2698141    214013568.0
2698142    219010854.4
2698143    224008140.8
2698144    229005427.2
2698145    234002713.6
2698146    239000000.0
2698147    238900000.0
2698148    238800000.0
2698149    238700000.0
2698150    238600000.0
2698151    238500000.0
Name: avgprice, Length: 366, dtype: float64
>>> def f(x):
... 	intprice = x.loc[:,'avgprice'].interpolate()
... 	x.loc[:,'intprice'] = intprice
... 
>>> rdfg.apply(f)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 658, in apply
    return self._python_apply_general(f)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 665, in _python_apply_general
    not_indexed_same=mutated)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 2807, in _wrap_applied_output
    v = next(v for v in values if v is not None)
StopIteration
>>> q = rdfg.get_group(34171)
>>> q
         itemid price_date  volume   avgprice intprice
2697786   34171 2013-11-02       0        NaN     None
2697787   34171 2013-11-03       0        NaN     None
2697788   34171 2013-11-04       0        NaN     None
2697789   34171 2013-11-05       0        NaN     None
2697790   34171 2013-11-06       0        NaN     None
2697791   34171 2013-11-07       0        NaN     None
2697792   34171 2013-11-08       0        NaN     None
2697793   34171 2013-11-09       0        NaN     None
2697794   34171 2013-11-10       0        NaN     None
2697795   34171 2013-11-11       0        NaN     None
2697796   34171 2013-11-12       0        NaN     None
2697797   34171 2013-11-13       0        NaN     None
2697798   34171 2013-11-14       0        NaN     None
2697799   34171 2013-11-15       0        NaN     None
2697800   34171 2013-11-16       0        NaN     None
2697801   34171 2013-11-17       0        NaN     None
2697802   34171 2013-11-18       0        NaN     None
2697803   34171 2013-11-19       0        NaN     None
2697804   34171 2013-11-20       0        NaN     None
2697805   34171 2013-11-21       0        NaN     None
2697806   34171 2013-11-22       0        NaN     None
2697807   34171 2013-11-23       0        NaN     None
2697808   34171 2013-11-24       0        NaN     None
2697809   34171 2013-11-25       0        NaN     None
2697810   34171 2013-11-26       0        NaN     None
2697811   34171 2013-11-27       0        NaN     None
2697812   34171 2013-11-28       0        NaN     None
2697813   34171 2013-11-29       0        NaN     None
2697814   34171 2013-11-30       0        NaN     None
2697815   34171 2013-12-01       0        NaN     None
...         ...        ...     ...        ...      ...
2698122   34171 2014-10-04       0        NaN     None
2698123   34171 2014-10-05       2  200000000     None
2698124   34171 2014-10-06       0        NaN     None
2698125   34171 2014-10-07       0        NaN     None
2698126   34171 2014-10-08       0        NaN     None
2698127   34171 2014-10-09       1  230000000     None
2698128   34171 2014-10-10       0        NaN     None
2698129   34171 2014-10-11       1  240000000     None
2698130   34171 2014-10-12       0        NaN     None
2698131   34171 2014-10-13       0        NaN     None
2698132   34171 2014-10-14       0        NaN     None
2698133   34171 2014-10-15       0        NaN     None
2698134   34171 2014-10-16       0        NaN     None
2698135   34171 2014-10-17       0        NaN     None
2698136   34171 2014-10-18       2  189027136     None
2698137   34171 2014-10-19       0        NaN     None
2698138   34171 2014-10-20       0        NaN     None
2698139   34171 2014-10-21       0        NaN     None
2698140   34171 2014-10-22       0        NaN     None
2698141   34171 2014-10-23       0        NaN     None
2698142   34171 2014-10-24       0        NaN     None
2698143   34171 2014-10-25       0        NaN     None
2698144   34171 2014-10-26       0        NaN     None
2698145   34171 2014-10-27       0        NaN     None
2698146   34171 2014-10-28       1  239000000     None
2698147   34171 2014-10-29       0        NaN     None
2698148   34171 2014-10-30       0        NaN     None
2698149   34171 2014-10-31       0        NaN     None
2698150   34171 2014-11-01       0        NaN     None
2698151   34171 2014-11-02       1  238500000     None

[366 rows x 5 columns]
>>> q.loc[:,'intprice'] = q.loc[:,'avgprice']
D:\Anaconda\lib\site-packages\pandas\core\indexing.py:415: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  self.obj[item] = s
>>> q
         itemid price_date  volume   avgprice   intprice
2697786   34171 2013-11-02       0        NaN        NaN
2697787   34171 2013-11-03       0        NaN        NaN
2697788   34171 2013-11-04       0        NaN        NaN
2697789   34171 2013-11-05       0        NaN        NaN
2697790   34171 2013-11-06       0        NaN        NaN
2697791   34171 2013-11-07       0        NaN        NaN
2697792   34171 2013-11-08       0        NaN        NaN
2697793   34171 2013-11-09       0        NaN        NaN
2697794   34171 2013-11-10       0        NaN        NaN
2697795   34171 2013-11-11       0        NaN        NaN
2697796   34171 2013-11-12       0        NaN        NaN
2697797   34171 2013-11-13       0        NaN        NaN
2697798   34171 2013-11-14       0        NaN        NaN
2697799   34171 2013-11-15       0        NaN        NaN
2697800   34171 2013-11-16       0        NaN        NaN
2697801   34171 2013-11-17       0        NaN        NaN
2697802   34171 2013-11-18       0        NaN        NaN
2697803   34171 2013-11-19       0        NaN        NaN
2697804   34171 2013-11-20       0        NaN        NaN
2697805   34171 2013-11-21       0        NaN        NaN
2697806   34171 2013-11-22       0        NaN        NaN
2697807   34171 2013-11-23       0        NaN        NaN
2697808   34171 2013-11-24       0        NaN        NaN
2697809   34171 2013-11-25       0        NaN        NaN
2697810   34171 2013-11-26       0        NaN        NaN
2697811   34171 2013-11-27       0        NaN        NaN
2697812   34171 2013-11-28       0        NaN        NaN
2697813   34171 2013-11-29       0        NaN        NaN
2697814   34171 2013-11-30       0        NaN        NaN
2697815   34171 2013-12-01       0        NaN        NaN
...         ...        ...     ...        ...        ...
2698122   34171 2014-10-04       0        NaN        NaN
2698123   34171 2014-10-05       2  200000000  200000000
2698124   34171 2014-10-06       0        NaN        NaN
2698125   34171 2014-10-07       0        NaN        NaN
2698126   34171 2014-10-08       0        NaN        NaN
2698127   34171 2014-10-09       1  230000000  230000000
2698128   34171 2014-10-10       0        NaN        NaN
2698129   34171 2014-10-11       1  240000000  240000000
2698130   34171 2014-10-12       0        NaN        NaN
2698131   34171 2014-10-13       0        NaN        NaN
2698132   34171 2014-10-14       0        NaN        NaN
2698133   34171 2014-10-15       0        NaN        NaN
2698134   34171 2014-10-16       0        NaN        NaN
2698135   34171 2014-10-17       0        NaN        NaN
2698136   34171 2014-10-18       2  189027136  189027136
2698137   34171 2014-10-19       0        NaN        NaN
2698138   34171 2014-10-20       0        NaN        NaN
2698139   34171 2014-10-21       0        NaN        NaN
2698140   34171 2014-10-22       0        NaN        NaN
2698141   34171 2014-10-23       0        NaN        NaN
2698142   34171 2014-10-24       0        NaN        NaN
2698143   34171 2014-10-25       0        NaN        NaN
2698144   34171 2014-10-26       0        NaN        NaN
2698145   34171 2014-10-27       0        NaN        NaN
2698146   34171 2014-10-28       1  239000000  239000000
2698147   34171 2014-10-29       0        NaN        NaN
2698148   34171 2014-10-30       0        NaN        NaN
2698149   34171 2014-10-31       0        NaN        NaN
2698150   34171 2014-11-01       0        NaN        NaN
2698151   34171 2014-11-02       1  238500000  238500000

[366 rows x 5 columns]
>>> rdf
         itemid price_date    volume      avgprice intprice
0            18 2013-11-02  39381609  4.512000e+01     None
1            18 2013-11-03  42961573  4.506000e+01     None
2            18 2013-11-04  12704806  4.905000e+01     None
3            18 2013-11-05  49553044  5.000000e+01     None
4            18 2013-11-06  13980435  4.604000e+01     None
5            18 2013-11-07  18976154  4.930000e+01     None
6            18 2013-11-08  16608642  4.941000e+01     None
7            18 2013-11-09  15067572  4.946000e+01     None
8            18 2013-11-10  18090347  4.995000e+01     None
9            18 2013-11-11  20436689  4.650000e+01     None
10           18 2013-11-12  15752480  5.046000e+01     None
11           18 2013-11-13   9454508  5.081000e+01     None
12           18 2013-11-14  16649091  5.001000e+01     None
13           18 2013-11-15   9675592  5.199000e+01     None
14           18 2013-11-16  17230584  4.516000e+01     None
15           18 2013-11-17  33862768  5.500000e+01     None
16           18 2013-11-18  30822756  5.250000e+01     None
17           18 2013-11-19  11289062  5.395000e+01     None
18           18 2013-11-20  29608770  5.413000e+01     None
19           18 2013-11-21  15104457  5.422000e+01     None
20           18 2013-11-22  46956539  5.424000e+01     None
21           18 2013-11-23  17279149  5.455000e+01     None
22           18 2013-11-24  22230750  5.437000e+01     None
23           18 2013-11-25  21320555  5.436000e+01     None
24           18 2013-11-26  14662851  5.451000e+01     None
25           18 2013-11-27  30840049  5.437000e+01     None
26           18 2013-11-28  11619466  5.377000e+01     None
27           18 2013-11-29  41791215  5.385000e+01     None
28           18 2013-11-30  18739456  5.190000e+01     None
29           18 2013-12-01  25650792  5.381000e+01     None
...         ...        ...       ...           ...      ...
2698854   34173 2014-10-04         0           NaN     None
2698855   34173 2014-10-05         5  3.008000e+08     None
2698856   34173 2014-10-06         4  2.425000e+08     None
2698857   34173 2014-10-07         3  2.213333e+08     None
2698858   34173 2014-10-08        10  2.109096e+08     None
2698859   34173 2014-10-09         5  1.930000e+08     None
2698860   34173 2014-10-10         7  1.634286e+08     None
2698861   34173 2014-10-11         5  1.402800e+08     None
2698862   34173 2014-10-12         5  1.431000e+08     None
2698863   34173 2014-10-13         7  8.800002e+07     None
2698864   34173 2014-10-14         6  1.065000e+08     None
2698865   34173 2014-10-15         5  1.038000e+08     None
2698866   34173 2014-10-16         3  8.100000e+07     None
2698867   34173 2014-10-17         4  6.382500e+07     None
2698868   34173 2014-10-18         6  1.100000e+08     None
2698869   34173 2014-10-19         3  1.013333e+08     None
2698870   34173 2014-10-20         2  1.285000e+08     None
2698871   34173 2014-10-21         2  1.010540e+08     None
2698872   34173 2014-10-22         7  9.475858e+07     None
2698873   34173 2014-10-23         4  1.227750e+08     None
2698874   34173 2014-10-24         5  8.602000e+07     None
2698875   34173 2014-10-25         3  9.133334e+07     None
2698876   34173 2014-10-26         6  7.576666e+07     None
2698877   34173 2014-10-27         4  8.025000e+07     None
2698878   34173 2014-10-28         3  7.366666e+07     None
2698879   34173 2014-10-29         6  9.333334e+07     None
2698880   34173 2014-10-30         3  8.233340e+07     None
2698881   34173 2014-10-31         8  6.900009e+07     None
2698882   34173 2014-11-01         3  7.966670e+07     None
2698883   34173 2014-11-02         5  9.140000e+07     None

[2698884 rows x 5 columns]
>>> rdf.loc[:,'intprice'] = rdf.loc[:,'avgprice']
>>> rdf.groupby('itemid').apply(lambda x: x.loc[:,'intprice'].interpolate(inplace=True))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 658, in apply
    return self._python_apply_general(f)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 665, in _python_apply_general
    not_indexed_same=mutated)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 2807, in _wrap_applied_output
    v = next(v for v in values if v is not None)
StopIteration
>>> rdf.groupby('itemid').apply(lambda x: x['intprice'].interpolate(inplace=True))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 658, in apply
    return self._python_apply_general(f)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 665, in _python_apply_general
    not_indexed_same=mutated)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 2807, in _wrap_applied_output
    v = next(v for v in values if v is not None)
StopIteration
>>> RDF
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'RDF' is not defined
>>> rdf
         itemid price_date    volume      avgprice      intprice
0            18 2013-11-02  39381609  4.512000e+01  4.512000e+01
1            18 2013-11-03  42961573  4.506000e+01  4.506000e+01
2            18 2013-11-04  12704806  4.905000e+01  4.905000e+01
3            18 2013-11-05  49553044  5.000000e+01  5.000000e+01
4            18 2013-11-06  13980435  4.604000e+01  4.604000e+01
5            18 2013-11-07  18976154  4.930000e+01  4.930000e+01
6            18 2013-11-08  16608642  4.941000e+01  4.941000e+01
7            18 2013-11-09  15067572  4.946000e+01  4.946000e+01
8            18 2013-11-10  18090347  4.995000e+01  4.995000e+01
9            18 2013-11-11  20436689  4.650000e+01  4.650000e+01
10           18 2013-11-12  15752480  5.046000e+01  5.046000e+01
11           18 2013-11-13   9454508  5.081000e+01  5.081000e+01
12           18 2013-11-14  16649091  5.001000e+01  5.001000e+01
13           18 2013-11-15   9675592  5.199000e+01  5.199000e+01
14           18 2013-11-16  17230584  4.516000e+01  4.516000e+01
15           18 2013-11-17  33862768  5.500000e+01  5.500000e+01
16           18 2013-11-18  30822756  5.250000e+01  5.250000e+01
17           18 2013-11-19  11289062  5.395000e+01  5.395000e+01
18           18 2013-11-20  29608770  5.413000e+01  5.413000e+01
19           18 2013-11-21  15104457  5.422000e+01  5.422000e+01
20           18 2013-11-22  46956539  5.424000e+01  5.424000e+01
21           18 2013-11-23  17279149  5.455000e+01  5.455000e+01
22           18 2013-11-24  22230750  5.437000e+01  5.437000e+01
23           18 2013-11-25  21320555  5.436000e+01  5.436000e+01
24           18 2013-11-26  14662851  5.451000e+01  5.451000e+01
25           18 2013-11-27  30840049  5.437000e+01  5.437000e+01
26           18 2013-11-28  11619466  5.377000e+01  5.377000e+01
27           18 2013-11-29  41791215  5.385000e+01  5.385000e+01
28           18 2013-11-30  18739456  5.190000e+01  5.190000e+01
29           18 2013-12-01  25650792  5.381000e+01  5.381000e+01
...         ...        ...       ...           ...           ...
2698854   34173 2014-10-04         0           NaN           NaN
2698855   34173 2014-10-05         5  3.008000e+08  3.008000e+08
2698856   34173 2014-10-06         4  2.425000e+08  2.425000e+08
2698857   34173 2014-10-07         3  2.213333e+08  2.213333e+08
2698858   34173 2014-10-08        10  2.109096e+08  2.109096e+08
2698859   34173 2014-10-09         5  1.930000e+08  1.930000e+08
2698860   34173 2014-10-10         7  1.634286e+08  1.634286e+08
2698861   34173 2014-10-11         5  1.402800e+08  1.402800e+08
2698862   34173 2014-10-12         5  1.431000e+08  1.431000e+08
2698863   34173 2014-10-13         7  8.800002e+07  8.800002e+07
2698864   34173 2014-10-14         6  1.065000e+08  1.065000e+08
2698865   34173 2014-10-15         5  1.038000e+08  1.038000e+08
2698866   34173 2014-10-16         3  8.100000e+07  8.100000e+07
2698867   34173 2014-10-17         4  6.382500e+07  6.382500e+07
2698868   34173 2014-10-18         6  1.100000e+08  1.100000e+08
2698869   34173 2014-10-19         3  1.013333e+08  1.013333e+08
2698870   34173 2014-10-20         2  1.285000e+08  1.285000e+08
2698871   34173 2014-10-21         2  1.010540e+08  1.010540e+08
2698872   34173 2014-10-22         7  9.475858e+07  9.475858e+07
2698873   34173 2014-10-23         4  1.227750e+08  1.227750e+08
2698874   34173 2014-10-24         5  8.602000e+07  8.602000e+07
2698875   34173 2014-10-25         3  9.133334e+07  9.133334e+07
2698876   34173 2014-10-26         6  7.576666e+07  7.576666e+07
2698877   34173 2014-10-27         4  8.025000e+07  8.025000e+07
2698878   34173 2014-10-28         3  7.366666e+07  7.366666e+07
2698879   34173 2014-10-29         6  9.333334e+07  9.333334e+07
2698880   34173 2014-10-30         3  8.233340e+07  8.233340e+07
2698881   34173 2014-10-31         8  6.900009e+07  6.900009e+07
2698882   34173 2014-11-01         3  7.966670e+07  7.966670e+07
2698883   34173 2014-11-02         5  9.140000e+07  9.140000e+07

[2698884 rows x 5 columns]
>>> rdfi = rdf.groupby('itemid').apply(lambda x: x['intprice'].interpolate(inplace=True))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 658, in apply
    return self._python_apply_general(f)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 665, in _python_apply_general
    not_indexed_same=mutated)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 2807, in _wrap_applied_output
    v = next(v for v in values if v is not None)
StopIteration
>>> help(rdf.interpolate)
Help on method interpolate in module pandas.core.generic:

interpolate(self, method='linear', axis=0, limit=None, inplace=False, downcast=None, **kwargs) method of pandas.core.frame.DataFrame instance
    Interpolate values according to different methods.
    
    Parameters
    ----------
    method : {'linear', 'time', 'index', 'values', 'nearest', 'zero',
              'slinear', 'quadratic', 'cubic', 'barycentric', 'krogh',
              'polynomial', 'spline' 'piecewise_polynomial', 'pchip'}
    
        * 'linear': ignore the index and treat the values as equally
          spaced. default
        * 'time': interpolation works on daily and higher resolution
          data to interpolate given length of interval
        * 'index', 'values': use the actual numerical values of the index
        * 'nearest', 'zero', 'slinear', 'quadratic', 'cubic',
          'barycentric', 'polynomial' is passed to
          `scipy.interpolate.interp1d` with the order given both
          'polynomial' and 'spline' requre that you also specify and order
          (int) e.g. df.interpolate(method='polynomial', order=4)
        * 'krogh', 'piecewise_polynomial', 'spline', and 'pchip' are all
          wrappers around the scipy interpolation methods of similar
          names. See the scipy documentation for more on their behavior:
          http://docs.scipy.org/doc/scipy/reference/interpolate.html#univariate-interpolation
          http://docs.scipy.org/doc/scipy/reference/tutorial/interpolate.html
    
    axis : {0, 1}, default 0
        * 0: fill column-by-column
        * 1: fill row-by-row
    limit : int, default None.
        Maximum number of consecutive NaNs to fill.
    inplace : bool, default False
        Update the NDFrame in place if possible.
    downcast : optional, 'infer' or None, defaults to None
        Downcast dtypes if possible.
    
    Returns
    -------
    Series or DataFrame of same shape interpolated at the NaNs
    
    See Also
    --------
    reindex, replace, fillna
    
    Examples
    --------
    
    # Filling in NaNs:
    >>> s = pd.Series([0, 1, np.nan, 3])
    >>> s.interpolate()
    0    0
    1    1
    2    2
    3    3
    dtype: float64

>>> dir(V)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'V' is not defined
>>> s.V.raw_data_filled
         itemid price_date    volume      avgprice  interpolated_price
0            18 2013-11-02  39381609  4.512000e+01                 NaN
1            18 2013-11-03  42961573  4.506000e+01                 NaN
2            18 2013-11-04  12704806  4.905000e+01                 NaN
3            18 2013-11-05  49553044  5.000000e+01                 NaN
4            18 2013-11-06  13980435  4.604000e+01                 NaN
5            18 2013-11-07  18976154  4.930000e+01                 NaN
6            18 2013-11-08  16608642  4.941000e+01                 NaN
7            18 2013-11-09  15067572  4.946000e+01                 NaN
8            18 2013-11-10  18090347  4.995000e+01                 NaN
9            18 2013-11-11  20436689  4.650000e+01                 NaN
10           18 2013-11-12  15752480  5.046000e+01                 NaN
11           18 2013-11-13   9454508  5.081000e+01                 NaN
12           18 2013-11-14  16649091  5.001000e+01                 NaN
13           18 2013-11-15   9675592  5.199000e+01                 NaN
14           18 2013-11-16  17230584  4.516000e+01                 NaN
15           18 2013-11-17  33862768  5.500000e+01                 NaN
16           18 2013-11-18  30822756  5.250000e+01                 NaN
17           18 2013-11-19  11289062  5.395000e+01                 NaN
18           18 2013-11-20  29608770  5.413000e+01                 NaN
19           18 2013-11-21  15104457  5.422000e+01                 NaN
20           18 2013-11-22  46956539  5.424000e+01                 NaN
21           18 2013-11-23  17279149  5.455000e+01                 NaN
22           18 2013-11-24  22230750  5.437000e+01                 NaN
23           18 2013-11-25  21320555  5.436000e+01                 NaN
24           18 2013-11-26  14662851  5.451000e+01                 NaN
25           18 2013-11-27  30840049  5.437000e+01                 NaN
26           18 2013-11-28  11619466  5.377000e+01                 NaN
27           18 2013-11-29  41791215  5.385000e+01                 NaN
28           18 2013-11-30  18739456  5.190000e+01                 NaN
29           18 2013-12-01  25650792  5.381000e+01                 NaN
...         ...        ...       ...           ...                 ...
2698854   34173 2014-10-04         0           NaN                 NaN
2698855   34173 2014-10-05         5  3.008000e+08                 NaN
2698856   34173 2014-10-06         4  2.425000e+08                 NaN
2698857   34173 2014-10-07         3  2.213333e+08                 NaN
2698858   34173 2014-10-08        10  2.109096e+08                 NaN
2698859   34173 2014-10-09         5  1.930000e+08                 NaN
2698860   34173 2014-10-10         7  1.634286e+08                 NaN
2698861   34173 2014-10-11         5  1.402800e+08                 NaN
2698862   34173 2014-10-12         5  1.431000e+08                 NaN
2698863   34173 2014-10-13         7  8.800002e+07                 NaN
2698864   34173 2014-10-14         6  1.065000e+08                 NaN
2698865   34173 2014-10-15         5  1.038000e+08                 NaN
2698866   34173 2014-10-16         3  8.100000e+07                 NaN
2698867   34173 2014-10-17         4  6.382500e+07                 NaN
2698868   34173 2014-10-18         6  1.100000e+08                 NaN
2698869   34173 2014-10-19         3  1.013333e+08                 NaN
2698870   34173 2014-10-20         2  1.285000e+08                 NaN
2698871   34173 2014-10-21         2  1.010540e+08                 NaN
2698872   34173 2014-10-22         7  9.475858e+07                 NaN
2698873   34173 2014-10-23         4  1.227750e+08                 NaN
2698874   34173 2014-10-24         5  8.602000e+07                 NaN
2698875   34173 2014-10-25         3  9.133334e+07                 NaN
2698876   34173 2014-10-26         6  7.576666e+07                 NaN
2698877   34173 2014-10-27         4  8.025000e+07                 NaN
2698878   34173 2014-10-28         3  7.366666e+07                 NaN
2698879   34173 2014-10-29         6  9.333334e+07                 NaN
2698880   34173 2014-10-30         3  8.233340e+07                 NaN
2698881   34173 2014-10-31         8  6.900009e+07                 NaN
2698882   34173 2014-11-01         3  7.966670e+07                 NaN
2698883   34173 2014-11-02         5  9.140000e+07                 NaN

[2698884 rows x 5 columns]
>>> s.V.raw_data_filled.interpolated_price = s.V.raw_data.avgprice.interpolate()
>>> s.V
<stat_script.AttrLogger object at 0x000000000DD1C400>
>>> s.V.raw_data_filled
         itemid price_date    volume      avgprice  interpolated_price
0            18 2013-11-02  39381609  4.512000e+01               45.12
1            18 2013-11-03  42961573  4.506000e+01               45.06
2            18 2013-11-04  12704806  4.905000e+01               49.05
3            18 2013-11-05  49553044  5.000000e+01               50.00
4            18 2013-11-06  13980435  4.604000e+01               46.04
5            18 2013-11-07  18976154  4.930000e+01               49.30
6            18 2013-11-08  16608642  4.941000e+01               49.41
7            18 2013-11-09  15067572  4.946000e+01               49.46
8            18 2013-11-10  18090347  4.995000e+01               49.95
9            18 2013-11-11  20436689  4.650000e+01               46.50
10           18 2013-11-12  15752480  5.046000e+01               50.46
11           18 2013-11-13   9454508  5.081000e+01               50.81
12           18 2013-11-14  16649091  5.001000e+01               50.01
13           18 2013-11-15   9675592  5.199000e+01               51.99
14           18 2013-11-16  17230584  4.516000e+01               45.16
15           18 2013-11-17  33862768  5.500000e+01               55.00
16           18 2013-11-18  30822756  5.250000e+01               52.50
17           18 2013-11-19  11289062  5.395000e+01               53.95
18           18 2013-11-20  29608770  5.413000e+01               54.13
19           18 2013-11-21  15104457  5.422000e+01               54.22
20           18 2013-11-22  46956539  5.424000e+01               54.24
21           18 2013-11-23  17279149  5.455000e+01               54.55
22           18 2013-11-24  22230750  5.437000e+01               54.37
23           18 2013-11-25  21320555  5.436000e+01               54.36
24           18 2013-11-26  14662851  5.451000e+01               54.51
25           18 2013-11-27  30840049  5.437000e+01               54.37
26           18 2013-11-28  11619466  5.377000e+01               53.77
27           18 2013-11-29  41791215  5.385000e+01               53.85
28           18 2013-11-30  18739456  5.190000e+01               51.90
29           18 2013-12-01  25650792  5.381000e+01               53.81
...         ...        ...       ...           ...                 ...
2698854   34173 2014-10-04         0           NaN                 NaN
2698855   34173 2014-10-05         5  3.008000e+08                 NaN
2698856   34173 2014-10-06         4  2.425000e+08                 NaN
2698857   34173 2014-10-07         3  2.213333e+08                 NaN
2698858   34173 2014-10-08        10  2.109096e+08                 NaN
2698859   34173 2014-10-09         5  1.930000e+08                 NaN
2698860   34173 2014-10-10         7  1.634286e+08                 NaN
2698861   34173 2014-10-11         5  1.402800e+08                 NaN
2698862   34173 2014-10-12         5  1.431000e+08                 NaN
2698863   34173 2014-10-13         7  8.800002e+07                 NaN
2698864   34173 2014-10-14         6  1.065000e+08                 NaN
2698865   34173 2014-10-15         5  1.038000e+08                 NaN
2698866   34173 2014-10-16         3  8.100000e+07                 NaN
2698867   34173 2014-10-17         4  6.382500e+07                 NaN
2698868   34173 2014-10-18         6  1.100000e+08                 NaN
2698869   34173 2014-10-19         3  1.013333e+08                 NaN
2698870   34173 2014-10-20         2  1.285000e+08                 NaN
2698871   34173 2014-10-21         2  1.010540e+08                 NaN
2698872   34173 2014-10-22         7  9.475858e+07                 NaN
2698873   34173 2014-10-23         4  1.227750e+08                 NaN
2698874   34173 2014-10-24         5  8.602000e+07                 NaN
2698875   34173 2014-10-25         3  9.133334e+07                 NaN
2698876   34173 2014-10-26         6  7.576666e+07                 NaN
2698877   34173 2014-10-27         4  8.025000e+07                 NaN
2698878   34173 2014-10-28         3  7.366666e+07                 NaN
2698879   34173 2014-10-29         6  9.333334e+07                 NaN
2698880   34173 2014-10-30         3  8.233340e+07                 NaN
2698881   34173 2014-10-31         8  6.900009e+07                 NaN
2698882   34173 2014-11-01         3  7.966670e+07                 NaN
2698883   34173 2014-11-02         5  9.140000e+07                 NaN

[2698884 rows x 5 columns]
>>> s.V.raw_data_filled.interpolated_price = NaN
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'NaN' is not defined
>>> s.V.raw_data_filled.interpolated_price = float('NaN')
>>> s.V.raw_data_filled
         itemid price_date    volume      avgprice  interpolated_price
0            18 2013-11-02  39381609  4.512000e+01                 NaN
1            18 2013-11-03  42961573  4.506000e+01                 NaN
2            18 2013-11-04  12704806  4.905000e+01                 NaN
3            18 2013-11-05  49553044  5.000000e+01                 NaN
4            18 2013-11-06  13980435  4.604000e+01                 NaN
5            18 2013-11-07  18976154  4.930000e+01                 NaN
6            18 2013-11-08  16608642  4.941000e+01                 NaN
7            18 2013-11-09  15067572  4.946000e+01                 NaN
8            18 2013-11-10  18090347  4.995000e+01                 NaN
9            18 2013-11-11  20436689  4.650000e+01                 NaN
10           18 2013-11-12  15752480  5.046000e+01                 NaN
11           18 2013-11-13   9454508  5.081000e+01                 NaN
12           18 2013-11-14  16649091  5.001000e+01                 NaN
13           18 2013-11-15   9675592  5.199000e+01                 NaN
14           18 2013-11-16  17230584  4.516000e+01                 NaN
15           18 2013-11-17  33862768  5.500000e+01                 NaN
16           18 2013-11-18  30822756  5.250000e+01                 NaN
17           18 2013-11-19  11289062  5.395000e+01                 NaN
18           18 2013-11-20  29608770  5.413000e+01                 NaN
19           18 2013-11-21  15104457  5.422000e+01                 NaN
20           18 2013-11-22  46956539  5.424000e+01                 NaN
21           18 2013-11-23  17279149  5.455000e+01                 NaN
22           18 2013-11-24  22230750  5.437000e+01                 NaN
23           18 2013-11-25  21320555  5.436000e+01                 NaN
24           18 2013-11-26  14662851  5.451000e+01                 NaN
25           18 2013-11-27  30840049  5.437000e+01                 NaN
26           18 2013-11-28  11619466  5.377000e+01                 NaN
27           18 2013-11-29  41791215  5.385000e+01                 NaN
28           18 2013-11-30  18739456  5.190000e+01                 NaN
29           18 2013-12-01  25650792  5.381000e+01                 NaN
...         ...        ...       ...           ...                 ...
2698854   34173 2014-10-04         0           NaN                 NaN
2698855   34173 2014-10-05         5  3.008000e+08                 NaN
2698856   34173 2014-10-06         4  2.425000e+08                 NaN
2698857   34173 2014-10-07         3  2.213333e+08                 NaN
2698858   34173 2014-10-08        10  2.109096e+08                 NaN
2698859   34173 2014-10-09         5  1.930000e+08                 NaN
2698860   34173 2014-10-10         7  1.634286e+08                 NaN
2698861   34173 2014-10-11         5  1.402800e+08                 NaN
2698862   34173 2014-10-12         5  1.431000e+08                 NaN
2698863   34173 2014-10-13         7  8.800002e+07                 NaN
2698864   34173 2014-10-14         6  1.065000e+08                 NaN
2698865   34173 2014-10-15         5  1.038000e+08                 NaN
2698866   34173 2014-10-16         3  8.100000e+07                 NaN
2698867   34173 2014-10-17         4  6.382500e+07                 NaN
2698868   34173 2014-10-18         6  1.100000e+08                 NaN
2698869   34173 2014-10-19         3  1.013333e+08                 NaN
2698870   34173 2014-10-20         2  1.285000e+08                 NaN
2698871   34173 2014-10-21         2  1.010540e+08                 NaN
2698872   34173 2014-10-22         7  9.475858e+07                 NaN
2698873   34173 2014-10-23         4  1.227750e+08                 NaN
2698874   34173 2014-10-24         5  8.602000e+07                 NaN
2698875   34173 2014-10-25         3  9.133334e+07                 NaN
2698876   34173 2014-10-26         6  7.576666e+07                 NaN
2698877   34173 2014-10-27         4  8.025000e+07                 NaN
2698878   34173 2014-10-28         3  7.366666e+07                 NaN
2698879   34173 2014-10-29         6  9.333334e+07                 NaN
2698880   34173 2014-10-30         3  8.233340e+07                 NaN
2698881   34173 2014-10-31         8  6.900009e+07                 NaN
2698882   34173 2014-11-01         3  7.966670e+07                 NaN
2698883   34173 2014-11-02         5  9.140000e+07                 NaN

[2698884 rows x 5 columns]
>>> s.V.raw_data_filled.groupby('itemid')
<pandas.core.groupby.DataFrameGroupBy object at 0x000000002A9845C0>
>>> g = s.V.raw_data_filled.groupby('itemid')
>>> help(g.applymap)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 504, in __getattr__
    return self._make_wrapper(attr)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 519, in _make_wrapper
    raise AttributeError(msg)
AttributeError: Cannot access callable attribute 'applymap' of 'DataFrameGroupBy' objects, try using the 'apply' method
>>> help(s.V.raw_data.applymap)
Help on method applymap in module pandas.core.frame:

applymap(self, func) method of pandas.core.frame.DataFrame instance
    Apply a function to a DataFrame that is intended to operate
    elementwise, i.e. like doing map(func, series) for each series in the
    DataFrame
    
    Parameters
    ----------
    func : function
        Python function, returns a single value from a single value
    
    Returns
    -------
    applied : DataFrame
    
    See also
    --------
    DataFrame.apply : For operations on rows/columns

>>> help(s.V.raw_data.apply)
Help on method apply in module pandas.core.frame:

apply(self, func, axis=0, broadcast=False, raw=False, reduce=None, args=(), **kwds) method of pandas.core.frame.DataFrame instance
    Applies function along input axis of DataFrame.
    
    Objects passed to functions are Series objects having index
    either the DataFrame's index (axis=0) or the columns (axis=1).
    Return type depends on whether passed function aggregates, or the
    reduce argument if the DataFrame is empty.
    
    Parameters
    ----------
    func : function
        Function to apply to each column/row
    axis : {0, 1}
        * 0 : apply function to each column
        * 1 : apply function to each row
    broadcast : boolean, default False
        For aggregation functions, return object of same size with values
        propagated
    reduce : boolean or None, default None
        Try to apply reduction procedures. If the DataFrame is empty,
        apply will use reduce to determine whether the result should be a
        Series or a DataFrame. If reduce is None (the default), apply's
        return value will be guessed by calling func an empty Series (note:
        while guessing, exceptions raised by func will be ignored). If
        reduce is True a Series will always be returned, and if False a
        DataFrame will always be returned.
    raw : boolean, default False
        If False, convert each row or column into a Series. If raw=True the
        passed function will receive ndarray objects instead. If you are
        just applying a NumPy reduction function this will achieve much
        better performance
    args : tuple
        Positional arguments to pass to function in addition to the
        array/series
    Additional keyword arguments will be passed as keywords to the function
    
    Notes
    -----
    In the current implementation apply calls func twice on the
    first column/row to decide whether it can take a fast or slow
    code path. This can lead to unexpected behavior if func has
    side-effects, as they will take effect twice for the first
    column/row.
    
    Examples
    --------
    >>> df.apply(numpy.sqrt) # returns DataFrame
    >>> df.apply(numpy.sum, axis=0) # equiv to df.sum(0)
    >>> df.apply(numpy.sum, axis=1) # equiv to df.sum(1)
    
    See also
    --------
    DataFrame.applymap: For elementwise operations
    
    Returns
    -------
    applied : Series or DataFrame

>>> help(g.apply)
Help on method apply in module pandas.core.groupby:

apply(self, func, *args, **kwargs) method of pandas.core.groupby.DataFrameGroupBy instance
    Apply function and combine results together in an intelligent way. The
    split-apply-combine combination rules attempt to be as common sense
    based as possible. For example:
    
    case 1:
    group DataFrame
    apply aggregation function (f(chunk) -> Series)
    yield DataFrame, with group axis having group labels
    
    case 2:
    group DataFrame
    apply transform function ((f(chunk) -> DataFrame with same indexes)
    yield DataFrame with resulting chunks glued together
    
    case 3:
    group Series
    apply function with f(chunk) -> DataFrame
    yield DataFrame with result of chunks glued together
    
    Parameters
    ----------
    func : function
    
    Notes
    -----
    See online documentation for full exposition on how to use apply.
    
    In the current implementation apply calls func twice on the
    first group to decide whether it can take a fast or slow code
    path. This can lead to unexpected behavior if func has
    side-effects, as they will take effect twice for the first
    group.
    
    
    See also
    --------
    aggregate, transform
    
    Returns
    -------
    applied : type depending on grouped object and function

>>> s.V.raw_data.index
Int64Index([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...], dtype='int64')
>>> s.V.raw_data.columns
Index([u'itemid', u'price_date', u'volume', u'avgprice'], dtype='object')
>>> r = s.V.raw_data
>>> g = r.set_index('price_date').groupby('itemid')
>>> g
<pandas.core.groupby.DataFrameGroupBy object at 0x00000000706A7D30>
>>> help(g.resample)
Help on method resample in module pandas.core.groupby:

resample(self, rule, how=None, axis=0, fill_method=None, closed=None, label=None, convention='start', kind=None, loffset=None, limit=None, base=0) method of pandas.core.groupby.DataFrameGroupBy instance
    Convenience method for frequency conversion and resampling of regular
    time-series data.
    
    Parameters
    ----------
    rule : string
        the offset string or object representing target conversion
    how : string
        method for down- or re-sampling, default to 'mean' for
        downsampling
    axis : int, optional, default 0
    fill_method : string, default None
        fill_method for upsampling
    closed : {'right', 'left'}
        Which side of bin interval is closed
    label : {'right', 'left'}
        Which bin edge label to label bucket with
    convention : {'start', 'end', 's', 'e'}
    kind : "period"/"timestamp"
    loffset : timedelta
        Adjust the resampled time labels
    limit : int, default None
        Maximum size gap to when reindexing with fill_method
    base : int, default 0
        For frequencies that evenly subdivide 1 day, the "origin" of the
        aggregated intervals. For example, for '5min' frequency, base could
        range from 0 through 4. Defaults to 0

>>> g.resample('D', fill_method='interpolate')
Empty DataFrame
Columns: []
Index: []
>>> g
<pandas.core.groupby.DataFrameGroupBy object at 0x00000000706A7D30>
>>> g.get_group(34)
            avgprice       volume
price_date                       
2013-11-02      4.75  29112987907
2013-11-03      4.78  36693361984
2013-11-04      4.78  23069079781
2013-11-05      4.80  26005580179
2013-11-06      4.79  23654600552
2013-11-07      4.81  24645749948
2013-11-08      4.80  24397879623
2013-11-09      4.83  31235106425
2013-11-10      4.81  30529126145
2013-11-11      4.80  22698778748
2013-11-12      4.86  22413630385
2013-11-13      4.87  24357785596
2013-11-14      4.78  22898083113
2013-11-15      4.83  25930441847
2013-11-16      4.84  29777622031
2013-11-17      4.81  25492688514
2013-11-18      4.84  23267308672
2013-11-19      4.82  18702274437
2013-11-20      4.83  29861761354
2013-11-21      4.81  21055486896
2013-11-22      4.80  15471884772
2013-11-23      4.79  24830596182
2013-11-24      4.80  27364596015
2013-11-25      4.76  17866574436
2013-11-26      4.76  19727693721
2013-11-27      4.76  18264210919
2013-11-28      4.76  23969141777
2013-11-29      4.76  23008027938
2013-11-30      4.76  26238246428
2013-12-01      4.76  23291661308
...              ...          ...
2014-10-04      5.46  11964839000
2014-10-05      5.48  12179560833
2014-10-06      5.53  11558176515
2014-10-07      5.55  15251307675
2014-10-08      5.51  10235833952
2014-10-09      5.53  13070837708
2014-10-10      5.49  12875202112
2014-10-11      5.51  10122357991
2014-10-12      5.58  12374422863
2014-10-13      5.57  10307106850
2014-10-14      5.53  10308307822
2014-10-15      5.55  12071957971
2014-10-16      5.47   7649868427
2014-10-17      5.46  11259645249
2014-10-18      5.51  12925536177
2014-10-19      5.48  13866506798
2014-10-20      5.53  11430195304
2014-10-21      5.50   8655125843
2014-10-22      5.50   9166774536
2014-10-23      5.54  11889511146
2014-10-24      5.56  11449260792
2014-10-25      5.60  10979265898
2014-10-26      5.66  13986878657
2014-10-27      5.71  14510989613
2014-10-28      5.65  13256462532
2014-10-29      5.48  11246050970
2014-10-30      5.62  14610354056
2014-10-31      5.50  16935147479
2014-11-01      5.50  10705199830
2014-11-02      5.49  12214346718

[366 rows x 2 columns]
>>> g.get_group(31400)
              avgprice  volume
price_date                    
2013-11-03  1002080.12       2
2013-11-04  1001539.56       4
2013-11-06  2062499.75       8
2013-11-07  3000994.50       2
2013-11-10  3000000.00       1
2013-11-19  3499993.25       2
2013-11-22  1001984.81       1
2013-11-26  3489899.00       1
2013-11-27  3489899.00       1
2013-11-28  2069950.00       2
2013-12-01  3489900.00       1
2013-12-03  3498895.25       1
2013-12-07  3498895.25       2
2013-12-11  3495000.00       2
2013-12-12  3499996.75       2
2013-12-15  3499998.00       1
2013-12-17  3499998.00       1
2013-12-21  3400000.00       1
2013-12-23  3400000.00       1
2013-12-24  2574999.50       4
2013-12-25  3499999.00       3
2013-12-28  3499999.00       1
2013-12-30  3500000.00       2
2013-12-31  4250000.00       1
2014-01-02  4250000.00       1
2014-01-11   700000.00       2
2014-01-16  1849500.00       4
2014-01-23  3800000.00       1
2014-01-26  3300000.00       1
2014-01-31  3800000.00       1
...                ...     ...
2014-08-20  6899998.50       2
2014-08-21  6899999.00       1
2014-08-24  6747500.00       1
2014-08-26  6748499.00       2
2014-08-27  6748500.00       1
2014-08-28  6748500.00       1
2014-09-02  6600000.00       1
2014-09-03  6600000.00       1
2014-09-06  6600000.00       2
2014-09-08  6599999.00       3
2014-09-11   150001.02       1
2014-09-14  6699994.00       1
2014-09-16  6699993.00       1
2014-09-18  4000000.00       1
2014-09-21  3750000.00       1
2014-09-22  5666333.00       3
2014-09-25  6500000.00       1
2014-09-28  6499973.50       3
2014-09-30  6489979.00       3
2014-10-05  6489975.00       2
2014-10-06  6489975.00       1
2014-10-08  6429333.00       6
2014-10-09  6487983.00       1
2014-10-10  6487983.00       1
2014-10-12  6487979.00       1
2014-10-14  6487979.00       3
2014-10-19  6487960.00      11
2014-10-20  2262000.75       3
2014-10-25  6378000.00       2
2014-10-27  6372498.00       1

[118 rows x 2 columns]
>>> s = g.get_group(31400)
>>> s.resample('d')
              avgprice  volume
price_date                    
2013-11-03  1002080.12       2
2013-11-04  1001539.56       4
2013-11-05         NaN     NaN
2013-11-06  2062499.75       8
2013-11-07  3000994.50       2
2013-11-08         NaN     NaN
2013-11-09         NaN     NaN
2013-11-10  3000000.00       1
2013-11-11         NaN     NaN
2013-11-12         NaN     NaN
2013-11-13         NaN     NaN
2013-11-14         NaN     NaN
2013-11-15         NaN     NaN
2013-11-16         NaN     NaN
2013-11-17         NaN     NaN
2013-11-18         NaN     NaN
2013-11-19  3499993.25       2
2013-11-20         NaN     NaN
2013-11-21         NaN     NaN
2013-11-22  1001984.81       1
2013-11-23         NaN     NaN
2013-11-24         NaN     NaN
2013-11-25         NaN     NaN
2013-11-26  3489899.00       1
2013-11-27  3489899.00       1
2013-11-28  2069950.00       2
2013-11-29         NaN     NaN
2013-11-30         NaN     NaN
2013-12-01  3489900.00       1
2013-12-02         NaN     NaN
...                ...     ...
2014-09-28  6499973.50       3
2014-09-29         NaN     NaN
2014-09-30  6489979.00       3
2014-10-01         NaN     NaN
2014-10-02         NaN     NaN
2014-10-03         NaN     NaN
2014-10-04         NaN     NaN
2014-10-05  6489975.00       2
2014-10-06  6489975.00       1
2014-10-07         NaN     NaN
2014-10-08  6429333.00       6
2014-10-09  6487983.00       1
2014-10-10  6487983.00       1
2014-10-11         NaN     NaN
2014-10-12  6487979.00       1
2014-10-13         NaN     NaN
2014-10-14  6487979.00       3
2014-10-15         NaN     NaN
2014-10-16         NaN     NaN
2014-10-17         NaN     NaN
2014-10-18         NaN     NaN
2014-10-19  6487960.00      11
2014-10-20  2262000.75       3
2014-10-21         NaN     NaN
2014-10-22         NaN     NaN
2014-10-23         NaN     NaN
2014-10-24         NaN     NaN
2014-10-25  6378000.00       2
2014-10-26         NaN     NaN
2014-10-27  6372498.00       1

[359 rows x 2 columns]
>>> s
              avgprice  volume
price_date                    
2013-11-03  1002080.12       2
2013-11-04  1001539.56       4
2013-11-06  2062499.75       8
2013-11-07  3000994.50       2
2013-11-10  3000000.00       1
2013-11-19  3499993.25       2
2013-11-22  1001984.81       1
2013-11-26  3489899.00       1
2013-11-27  3489899.00       1
2013-11-28  2069950.00       2
2013-12-01  3489900.00       1
2013-12-03  3498895.25       1
2013-12-07  3498895.25       2
2013-12-11  3495000.00       2
2013-12-12  3499996.75       2
2013-12-15  3499998.00       1
2013-12-17  3499998.00       1
2013-12-21  3400000.00       1
2013-12-23  3400000.00       1
2013-12-24  2574999.50       4
2013-12-25  3499999.00       3
2013-12-28  3499999.00       1
2013-12-30  3500000.00       2
2013-12-31  4250000.00       1
2014-01-02  4250000.00       1
2014-01-11   700000.00       2
2014-01-16  1849500.00       4
2014-01-23  3800000.00       1
2014-01-26  3300000.00       1
2014-01-31  3800000.00       1
...                ...     ...
2014-08-20  6899998.50       2
2014-08-21  6899999.00       1
2014-08-24  6747500.00       1
2014-08-26  6748499.00       2
2014-08-27  6748500.00       1
2014-08-28  6748500.00       1
2014-09-02  6600000.00       1
2014-09-03  6600000.00       1
2014-09-06  6600000.00       2
2014-09-08  6599999.00       3
2014-09-11   150001.02       1
2014-09-14  6699994.00       1
2014-09-16  6699993.00       1
2014-09-18  4000000.00       1
2014-09-21  3750000.00       1
2014-09-22  5666333.00       3
2014-09-25  6500000.00       1
2014-09-28  6499973.50       3
2014-09-30  6489979.00       3
2014-10-05  6489975.00       2
2014-10-06  6489975.00       1
2014-10-08  6429333.00       6
2014-10-09  6487983.00       1
2014-10-10  6487983.00       1
2014-10-12  6487979.00       1
2014-10-14  6487979.00       3
2014-10-19  6487960.00      11
2014-10-20  2262000.75       3
2014-10-25  6378000.00       2
2014-10-27  6372498.00       1

[118 rows x 2 columns]
>>> s.resample('d', fill_method='interpolate')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\generic.py", line 2980, in resample
    return sampler.resample(self).__finalize__(self)
  File "D:\Anaconda\lib\site-packages\pandas\tseries\resample.py", line 85, in resample
    rs = self._resample_timestamps()
  File "D:\Anaconda\lib\site-packages\pandas\tseries\resample.py", line 318, in _resample_timestamps
    limit=self.limit)
  File "D:\Anaconda\lib\site-packages\pandas\core\generic.py", line 2284, in fillna
    method = com._clean_fill_method(method)
  File "D:\Anaconda\lib\site-packages\pandas\core\common.py", line 2597, in _clean_fill_method
    raise ValueError(msg)
ValueError: Invalid fill method. Expecting pad (ffill) or backfill (bfill). Got interpolate
>>> 
>>> r = s.V.raw_data_filled
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\generic.py", line 1936, in __getattr__
    (type(self).__name__, name))
AttributeError: 'DataFrame' object has no attribute 'V'
>>> modules()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'modules' is not defined
>>> globals()
{'gg': <pandas.core.groupby.DataFrameGroupBy object at 0x0000000002A48DD8>, 'tsgi':             itemid      avgprice
price_date                      
2013-11-02      18  4.512000e+01
2013-11-03      18  4.506000e+01
2013-11-04      18  4.905000e+01
2013-11-05      18  5.000000e+01
2013-11-06      18  4.604000e+01
2013-11-07      18  4.930000e+01
2013-11-08      18  4.941000e+01
2013-11-09      18  4.946000e+01
2013-11-10      18  4.995000e+01
2013-11-11      18  4.650000e+01
2013-11-12      18  5.046000e+01
2013-11-13      18  5.081000e+01
2013-11-14      18  5.001000e+01
2013-11-15      18  5.199000e+01
2013-11-16      18  4.516000e+01
2013-11-17      18  5.500000e+01
2013-11-18      18  5.250000e+01
2013-11-19      18  5.395000e+01
2013-11-20      18  5.413000e+01
2013-11-21      18  5.422000e+01
2013-11-22      18  5.424000e+01
2013-11-23      18  5.455000e+01
2013-11-24      18  5.437000e+01
2013-11-25      18  5.436000e+01
2013-11-26      18  5.451000e+01
2013-11-27      18  5.437000e+01
2013-11-28      18  5.377000e+01
2013-11-29      18  5.385000e+01
2013-11-30      18  5.190000e+01
2013-12-01      18  5.381000e+01
...            ...           ...
2014-10-04   34173  3.222750e+08
2014-10-05   34173  3.008000e+08
2014-10-06   34173  2.425000e+08
2014-10-07   34173  2.213333e+08
2014-10-08   34173  2.109096e+08
2014-10-09   34173  1.930000e+08
2014-10-10   34173  1.634286e+08
2014-10-11   34173  1.402800e+08
2014-10-12   34173  1.431000e+08
2014-10-13   34173  8.800002e+07
2014-10-14   34173  1.065000e+08
2014-10-15   34173  1.038000e+08
2014-10-16   34173  8.100000e+07
2014-10-17   34173  6.382500e+07
2014-10-18   34173  1.100000e+08
2014-10-19   34173  1.013333e+08
2014-10-20   34173  1.285000e+08
2014-10-21   34173  1.010540e+08
2014-10-22   34173  9.475858e+07
2014-10-23   34173  1.227750e+08
2014-10-24   34173  8.602000e+07
2014-10-25   34173  9.133334e+07
2014-10-26   34173  7.576666e+07
2014-10-27   34173  8.025000e+07
2014-10-28   34173  7.366666e+07
2014-10-29   34173  9.333334e+07
2014-10-30   34173  8.233340e+07
2014-10-31   34173  6.900009e+07
2014-11-01   34173  7.966670e+07
2014-11-02   34173  9.140000e+07

[2698884 rows x 2 columns], 'trit':       itemid price_date       volume  avgprice
1830      34 2013-11-02  29112987907      4.75
1831      34 2013-11-03  36693361984      4.78
1832      34 2013-11-04  23069079781      4.78
1833      34 2013-11-05  26005580179      4.80
1834      34 2013-11-06  23654600552      4.79
1835      34 2013-11-07  24645749948      4.81
1836      34 2013-11-08  24397879623      4.80
1837      34 2013-11-09  31235106425      4.83
1838      34 2013-11-10  30529126145      4.81
1839      34 2013-11-11  22698778748      4.80
1840      34 2013-11-12  22413630385      4.86
1841      34 2013-11-13  24357785596      4.87
1842      34 2013-11-14  22898083113      4.78
1843      34 2013-11-15  25930441847      4.83
1844      34 2013-11-16  29777622031      4.84
1845      34 2013-11-17  25492688514      4.81
1846      34 2013-11-18  23267308672      4.84
1847      34 2013-11-19  18702274437      4.82
1848      34 2013-11-20  29861761354      4.83
1849      34 2013-11-21  21055486896      4.81
1850      34 2013-11-22  15471884772      4.80
1851      34 2013-11-23  24830596182      4.79
1852      34 2013-11-24  27364596015      4.80
1853      34 2013-11-25  17866574436      4.76
1854      34 2013-11-26  19727693721      4.76
1855      34 2013-11-27  18264210919      4.76
1856      34 2013-11-28  23969141777      4.76
1857      34 2013-11-29  23008027938      4.76
1858      34 2013-11-30  26238246428      4.76
1859      34 2013-12-01  23291661308      4.76
...      ...        ...          ...       ...
2166      34 2014-10-04  11964839000      5.46
2167      34 2014-10-05  12179560833      5.48
2168      34 2014-10-06  11558176515      5.53
2169      34 2014-10-07  15251307675      5.55
2170      34 2014-10-08  10235833952      5.51
2171      34 2014-10-09  13070837708      5.53
2172      34 2014-10-10  12875202112      5.49
2173      34 2014-10-11  10122357991      5.51
2174      34 2014-10-12  12374422863      5.58
2175      34 2014-10-13  10307106850      5.57
2176      34 2014-10-14  10308307822      5.53
2177      34 2014-10-15  12071957971      5.55
2178      34 2014-10-16   7649868427      5.47
2179      34 2014-10-17  11259645249      5.46
2180      34 2014-10-18  12925536177      5.51
2181      34 2014-10-19  13866506798      5.48
2182      34 2014-10-20  11430195304      5.53
2183      34 2014-10-21   8655125843      5.50
2184      34 2014-10-22   9166774536      5.50
2185      34 2014-10-23  11889511146      5.54
2186      34 2014-10-24  11449260792      5.56
2187      34 2014-10-25  10979265898      5.60
2188      34 2014-10-26  13986878657      5.66
2189      34 2014-10-27  14510989613      5.71
2190      34 2014-10-28  13256462532      5.65
2191      34 2014-10-29  11246050970      5.48
2192      34 2014-10-30  14610354056      5.62
2193      34 2014-10-31  16935147479      5.50
2194      34 2014-11-01  10705199830      5.50
2195      34 2014-11-02  12214346718      5.49

[366 rows x 4 columns], 'tsg': <pandas.core.groupby.DataFrameGroupBy object at 0x0000000062468FD0>, 'r_s': [-2.5, -2.0, -1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0, 2.5], 'ts':             itemid      avgprice
price_date                      
2013-11-02      18  4.512000e+01
2013-11-03      18  4.506000e+01
2013-11-04      18  4.905000e+01
2013-11-05      18  5.000000e+01
2013-11-06      18  4.604000e+01
2013-11-07      18  4.930000e+01
2013-11-08      18  4.941000e+01
2013-11-09      18  4.946000e+01
2013-11-10      18  4.995000e+01
2013-11-11      18  4.650000e+01
2013-11-12      18  5.046000e+01
2013-11-13      18  5.081000e+01
2013-11-14      18  5.001000e+01
2013-11-15      18  5.199000e+01
2013-11-16      18  4.516000e+01
2013-11-17      18  5.500000e+01
2013-11-18      18  5.250000e+01
2013-11-19      18  5.395000e+01
2013-11-20      18  5.413000e+01
2013-11-21      18  5.422000e+01
2013-11-22      18  5.424000e+01
2013-11-23      18  5.455000e+01
2013-11-24      18  5.437000e+01
2013-11-25      18  5.436000e+01
2013-11-26      18  5.451000e+01
2013-11-27      18  5.437000e+01
2013-11-28      18  5.377000e+01
2013-11-29      18  5.385000e+01
2013-11-30      18  5.190000e+01
2013-12-01      18  5.381000e+01
...            ...           ...
2014-10-04   34173           NaN
2014-10-05   34173  3.008000e+08
2014-10-06   34173  2.425000e+08
2014-10-07   34173  2.213333e+08
2014-10-08   34173  2.109096e+08
2014-10-09   34173  1.930000e+08
2014-10-10   34173  1.634286e+08
2014-10-11   34173  1.402800e+08
2014-10-12   34173  1.431000e+08
2014-10-13   34173  8.800002e+07
2014-10-14   34173  1.065000e+08
2014-10-15   34173  1.038000e+08
2014-10-16   34173  8.100000e+07
2014-10-17   34173  6.382500e+07
2014-10-18   34173  1.100000e+08
2014-10-19   34173  1.013333e+08
2014-10-20   34173  1.285000e+08
2014-10-21   34173  1.010540e+08
2014-10-22   34173  9.475858e+07
2014-10-23   34173  1.227750e+08
2014-10-24   34173  8.602000e+07
2014-10-25   34173  9.133334e+07
2014-10-26   34173  7.576666e+07
2014-10-27   34173  8.025000e+07
2014-10-28   34173  7.366666e+07
2014-10-29   34173  9.333334e+07
2014-10-30   34173  8.233340e+07
2014-10-31   34173  6.900009e+07
2014-11-01   34173  7.966670e+07
2014-11-02   34173  9.140000e+07

[2698884 rows x 2 columns], '__package__': None, 'rd':          itemid price_date    volume      avgprice
0            18 2013-11-02  39381609  4.512000e+01
1            18 2013-11-03  42961573  4.506000e+01
2            18 2013-11-04  12704806  4.905000e+01
3            18 2013-11-05  49553044  5.000000e+01
4            18 2013-11-06  13980435  4.604000e+01
5            18 2013-11-07  18976154  4.930000e+01
6            18 2013-11-08  16608642  4.941000e+01
7            18 2013-11-09  15067572  4.946000e+01
8            18 2013-11-10  18090347  4.995000e+01
9            18 2013-11-11  20436689  4.650000e+01
10           18 2013-11-12  15752480  5.046000e+01
11           18 2013-11-13   9454508  5.081000e+01
12           18 2013-11-14  16649091  5.001000e+01
13           18 2013-11-15   9675592  5.199000e+01
14           18 2013-11-16  17230584  4.516000e+01
15           18 2013-11-17  33862768  5.500000e+01
16           18 2013-11-18  30822756  5.250000e+01
17           18 2013-11-19  11289062  5.395000e+01
18           18 2013-11-20  29608770  5.413000e+01
19           18 2013-11-21  15104457  5.422000e+01
20           18 2013-11-22  46956539  5.424000e+01
21           18 2013-11-23  17279149  5.455000e+01
22           18 2013-11-24  22230750  5.437000e+01
23           18 2013-11-25  21320555  5.436000e+01
24           18 2013-11-26  14662851  5.451000e+01
25           18 2013-11-27  30840049  5.437000e+01
26           18 2013-11-28  11619466  5.377000e+01
27           18 2013-11-29  41791215  5.385000e+01
28           18 2013-11-30  18739456  5.190000e+01
29           18 2013-12-01  25650792  5.381000e+01
...         ...        ...       ...           ...
1880441   34173 2014-10-03         4  3.437500e+08
1880442   34173 2014-10-05         5  3.008000e+08
1880443   34173 2014-10-06         4  2.425000e+08
1880444   34173 2014-10-07         3  2.213333e+08
1880445   34173 2014-10-08        10  2.109096e+08
1880446   34173 2014-10-09         5  1.930000e+08
1880447   34173 2014-10-10         7  1.634286e+08
1880448   34173 2014-10-11         5  1.402800e+08
1880449   34173 2014-10-12         5  1.431000e+08
1880450   34173 2014-10-13         7  8.800002e+07
1880451   34173 2014-10-14         6  1.065000e+08
1880452   34173 2014-10-15         5  1.038000e+08
1880453   34173 2014-10-16         3  8.100000e+07
1880454   34173 2014-10-17         4  6.382500e+07
1880455   34173 2014-10-18         6  1.100000e+08
1880456   34173 2014-10-19         3  1.013333e+08
1880457   34173 2014-10-20         2  1.285000e+08
1880458   34173 2014-10-21         2  1.010540e+08
1880459   34173 2014-10-22         7  9.475858e+07
1880460   34173 2014-10-23         4  1.227750e+08
1880461   34173 2014-10-24         5  8.602000e+07
1880462   34173 2014-10-25         3  9.133334e+07
1880463   34173 2014-10-26         6  7.576666e+07
1880464   34173 2014-10-27         4  8.025000e+07
1880465   34173 2014-10-28         3  7.366666e+07
1880466   34173 2014-10-29         6  9.333334e+07
1880467   34173 2014-10-30         3  8.233340e+07
1880468   34173 2014-10-31         8  6.900009e+07
1880469   34173 2014-11-01         3  7.966670e+07
1880470   34173 2014-11-02         5  9.140000e+07

[1880471 rows x 4 columns], 'rdfg': <pandas.core.groupby.DataFrameGroupBy object at 0x000000005F54AB00>, 'sig': 2.5, 'pd': <module 'pandas' from 'D:\Anaconda\lib\site-packages\pandas\__init__.pyc'>, '__doc__': None, 'norm': <scipy.stats._continuous_distns.norm_gen object at 0x000000000DA18198>, '__warningregistry__': {('\nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy', <class 'pandas.core.common.SettingWithCopyWarning'>, 1): True}, '__builtins__': {'bytearray': <type 'bytearray'>, 'IndexError': <type 'exceptions.IndexError'>, 'all': <built-in function all>, 'help': Type help() for interactive help, or help(object) for help about object., 'vars': <built-in function vars>, 'SyntaxError': <type 'exceptions.SyntaxError'>, 'unicode': <type 'unicode'>, 'UnicodeDecodeError': <type 'exceptions.UnicodeDecodeError'>, 'memoryview': <type 'memoryview'>, 'isinstance': <built-in function isinstance>, 'copyright': Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'NameError': <type 'exceptions.NameError'>, 'BytesWarning': <type 'exceptions.BytesWarning'>, 'dict': <type 'dict'>, 'input': <built-in function input>, 'oct': <built-in function oct>, 'bin': <built-in function bin>, 'SystemExit': <type 'exceptions.SystemExit'>, 'StandardError': <type 'exceptions.StandardError'>, 'format': <built-in function format>, 'repr': <built-in function repr>, 'sorted': <built-in function sorted>, 'False': False, 'RuntimeWarning': <type 'exceptions.RuntimeWarning'>, 'list': <type 'list'>, 'iter': <built-in function iter>, 'reload': <built-in function reload>, 'Warning': <type 'exceptions.Warning'>, '__package__': None, 'round': <built-in function round>, 'dir': <built-in function dir>, 'cmp': <built-in function cmp>, 'set': <type 'set'>, 'bytes': <type 'str'>, 'reduce': <built-in function reduce>, 'intern': <built-in function intern>, 'issubclass': <built-in function issubclass>, 'Ellipsis': Ellipsis, 'EOFError': <type 'exceptions.EOFError'>, 'locals': <built-in function locals>, 'BufferError': <type 'exceptions.BufferError'>, 'slice': <type 'slice'>, 'FloatingPointError': <type 'exceptions.FloatingPointError'>, 'sum': <built-in function sum>, 'getattr': <built-in function getattr>, 'abs': <built-in function abs>, 'exit': Use exit() or Ctrl-Z plus Return to exit, 'print': <built-in function print>, 'True': True, 'FutureWarning': <type 'exceptions.FutureWarning'>, 'ImportWarning': <type 'exceptions.ImportWarning'>, 'None': None, 'hash': <built-in function hash>, 'ReferenceError': <type 'exceptions.ReferenceError'>, 'len': <built-in function len>, 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'frozenset': <type 'frozenset'>, '__name__': '__builtin__', 'ord': <built-in function ord>, 'super': <type 'super'>, '_': None, 'TypeError': <type 'exceptions.TypeError'>, 'license': See http://www.python.org/psf/license/, 'KeyboardInterrupt': <type 'exceptions.KeyboardInterrupt'>, 'UserWarning': <type 'exceptions.UserWarning'>, 'filter': <built-in function filter>, 'range': <built-in function range>, 'staticmethod': <type 'staticmethod'>, 'SystemError': <type 'exceptions.SystemError'>, 'BaseException': <type 'exceptions.BaseException'>, 'pow': <built-in function pow>, 'RuntimeError': <type 'exceptions.RuntimeError'>, 'float': <type 'float'>, 'MemoryError': <type 'exceptions.MemoryError'>, 'StopIteration': <type 'exceptions.StopIteration'>, 'globals': <built-in function globals>, 'divmod': <built-in function divmod>, 'enumerate': <type 'enumerate'>, 'apply': <built-in function apply>, 'LookupError': <type 'exceptions.LookupError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-Z plus Return to exit, 'basestring': <type 'basestring'>, 'UnicodeError': <type 'exceptions.UnicodeError'>, 'zip': <built-in function zip>, 'hex': <built-in function hex>, 'long': <type 'long'>, 'next': <built-in function next>, 'ImportError': <type 'exceptions.ImportError'>, 'chr': <built-in function chr>, 'xrange': <type 'xrange'>, 'type': <type 'type'>, '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", 'Exception': <type 'exceptions.Exception'>, 'tuple': <type 'tuple'>, 'UnicodeTranslateError': <type 'exceptions.UnicodeTranslateError'>, 'reversed': <type 'reversed'>, 'UnicodeEncodeError': <type 'exceptions.UnicodeEncodeError'>, 'IOError': <type 'exceptions.IOError'>, 'hasattr': <built-in function hasattr>, 'delattr': <built-in function delattr>, 'setattr': <built-in function setattr>, 'raw_input': <built-in function raw_input>, 'SyntaxWarning': <type 'exceptions.SyntaxWarning'>, 'compile': <built-in function compile>, 'ArithmeticError': <type 'exceptions.ArithmeticError'>, 'str': <type 'str'>, 'property': <type 'property'>, 'GeneratorExit': <type 'exceptions.GeneratorExit'>, 'int': <type 'int'>, '__import__': <built-in function __import__>, 'KeyError': <type 'exceptions.KeyError'>, 'coerce': <built-in function coerce>, 'PendingDeprecationWarning': <type 'exceptions.PendingDeprecationWarning'>, 'file': <type 'file'>, 'EnvironmentError': <type 'exceptions.EnvironmentError'>, 'unichr': <built-in function unichr>, 'id': <built-in function id>, 'OSError': <type 'exceptions.OSError'>, 'DeprecationWarning': <type 'exceptions.DeprecationWarning'>, 'min': <built-in function min>, 'UnicodeWarning': <type 'exceptions.UnicodeWarning'>, 'execfile': <built-in function execfile>, 'any': <built-in function any>, 'complex': <type 'complex'>, 'bool': <type 'bool'>, 'ValueError': <type 'exceptions.ValueError'>, 'NotImplemented': NotImplemented, 'map': <built-in function map>, 'buffer': <type 'buffer'>, 'max': <built-in function max>, 'object': <type 'object'>, 'TabError': <type 'exceptions.TabError'>, 'callable': <built-in function callable>, 'ZeroDivisionError': <type 'exceptions.ZeroDivisionError'>, 'eval': <built-in function eval>, '__debug__': True, 'IndentationError': <type 'exceptions.IndentationError'>, 'AssertionError': <type 'exceptions.AssertionError'>, 'classmethod': <type 'classmethod'>, 'UnboundLocalError': <type 'exceptions.UnboundLocalError'>, 'NotImplementedError': <type 'exceptions.NotImplementedError'>, 'AttributeError': <type 'exceptions.AttributeError'>, 'OverflowError': <type 'exceptions.OverflowError'>, 'WindowsError': <type 'exceptions.WindowsError'>}, '__name__': '__main__', 'r':          itemid price_date    volume      avgprice
0            18 2013-11-02  39381609  4.512000e+01
1            18 2013-11-03  42961573  4.506000e+01
2            18 2013-11-04  12704806  4.905000e+01
3            18 2013-11-05  49553044  5.000000e+01
4            18 2013-11-06  13980435  4.604000e+01
5            18 2013-11-07  18976154  4.930000e+01
6            18 2013-11-08  16608642  4.941000e+01
7            18 2013-11-09  15067572  4.946000e+01
8            18 2013-11-10  18090347  4.995000e+01
9            18 2013-11-11  20436689  4.650000e+01
10           18 2013-11-12  15752480  5.046000e+01
11           18 2013-11-13   9454508  5.081000e+01
12           18 2013-11-14  16649091  5.001000e+01
13           18 2013-11-15   9675592  5.199000e+01
14           18 2013-11-16  17230584  4.516000e+01
15           18 2013-11-17  33862768  5.500000e+01
16           18 2013-11-18  30822756  5.250000e+01
17           18 2013-11-19  11289062  5.395000e+01
18           18 2013-11-20  29608770  5.413000e+01
19           18 2013-11-21  15104457  5.422000e+01
20           18 2013-11-22  46956539  5.424000e+01
21           18 2013-11-23  17279149  5.455000e+01
22           18 2013-11-24  22230750  5.437000e+01
23           18 2013-11-25  21320555  5.436000e+01
24           18 2013-11-26  14662851  5.451000e+01
25           18 2013-11-27  30840049  5.437000e+01
26           18 2013-11-28  11619466  5.377000e+01
27           18 2013-11-29  41791215  5.385000e+01
28           18 2013-11-30  18739456  5.190000e+01
29           18 2013-12-01  25650792  5.381000e+01
...         ...        ...       ...           ...
1880441   34173 2014-10-03         4  3.437500e+08
1880442   34173 2014-10-05         5  3.008000e+08
1880443   34173 2014-10-06         4  2.425000e+08
1880444   34173 2014-10-07         3  2.213333e+08
1880445   34173 2014-10-08        10  2.109096e+08
1880446   34173 2014-10-09         5  1.930000e+08
1880447   34173 2014-10-10         7  1.634286e+08
1880448   34173 2014-10-11         5  1.402800e+08
1880449   34173 2014-10-12         5  1.431000e+08
1880450   34173 2014-10-13         7  8.800002e+07
1880451   34173 2014-10-14         6  1.065000e+08
1880452   34173 2014-10-15         5  1.038000e+08
1880453   34173 2014-10-16         3  8.100000e+07
1880454   34173 2014-10-17         4  6.382500e+07
1880455   34173 2014-10-18         6  1.100000e+08
1880456   34173 2014-10-19         3  1.013333e+08
1880457   34173 2014-10-20         2  1.285000e+08
1880458   34173 2014-10-21         2  1.010540e+08
1880459   34173 2014-10-22         7  9.475858e+07
1880460   34173 2014-10-23         4  1.227750e+08
1880461   34173 2014-10-24         5  8.602000e+07
1880462   34173 2014-10-25         3  9.133334e+07
1880463   34173 2014-10-26         6  7.576666e+07
1880464   34173 2014-10-27         4  8.025000e+07
1880465   34173 2014-10-28         3  7.366666e+07
1880466   34173 2014-10-29         6  9.333334e+07
1880467   34173 2014-10-30         3  8.233340e+07
1880468   34173 2014-10-31         8  6.900009e+07
1880469   34173 2014-11-01         3  7.966670e+07
1880470   34173 2014-11-02         5  9.140000e+07

[1880471 rows x 4 columns], 'qs': [0.0062096653257761323, 0.022750131948179195, 0.066807201268858071, 0.15865525393145707, 0.30853753872598688, 0.5, 0.69146246127401312, 0.84134474606854293, 0.93319279873114191, 0.97724986805182079, 0.99379033467422384], 'g': <pandas.core.groupby.DataFrameGroupBy object at 0x00000000706A7D30>, 'f': <function f at 0x0000000091A0F4A8>, 'l': [Int64Index([18, 19, 20, 21, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, ...], dtype='int64'), Index([u'SN2P5', u'SN2P0', u'SN1P5', u'SN1P0', u'SN0P5', u'S0P0', u'S0P5', u'S1P0', u'S1P5', u'S2P0', u'S2P5'], dtype='object')], 'q':          itemid price_date  volume   avgprice   intprice
2697786   34171 2013-11-02       0        NaN        NaN
2697787   34171 2013-11-03       0        NaN        NaN
2697788   34171 2013-11-04       0        NaN        NaN
2697789   34171 2013-11-05       0        NaN        NaN
2697790   34171 2013-11-06       0        NaN        NaN
2697791   34171 2013-11-07       0        NaN        NaN
2697792   34171 2013-11-08       0        NaN        NaN
2697793   34171 2013-11-09       0        NaN        NaN
2697794   34171 2013-11-10       0        NaN        NaN
2697795   34171 2013-11-11       0        NaN        NaN
2697796   34171 2013-11-12       0        NaN        NaN
2697797   34171 2013-11-13       0        NaN        NaN
2697798   34171 2013-11-14       0        NaN        NaN
2697799   34171 2013-11-15       0        NaN        NaN
2697800   34171 2013-11-16       0        NaN        NaN
2697801   34171 2013-11-17       0        NaN        NaN
2697802   34171 2013-11-18       0        NaN        NaN
2697803   34171 2013-11-19       0        NaN        NaN
2697804   34171 2013-11-20       0        NaN        NaN
2697805   34171 2013-11-21       0        NaN        NaN
2697806   34171 2013-11-22       0        NaN        NaN
2697807   34171 2013-11-23       0        NaN        NaN
2697808   34171 2013-11-24       0        NaN        NaN
2697809   34171 2013-11-25       0        NaN        NaN
2697810   34171 2013-11-26       0        NaN        NaN
2697811   34171 2013-11-27       0        NaN        NaN
2697812   34171 2013-11-28       0        NaN        NaN
2697813   34171 2013-11-29       0        NaN        NaN
2697814   34171 2013-11-30       0        NaN        NaN
2697815   34171 2013-12-01       0        NaN        NaN
...         ...        ...     ...        ...        ...
2698122   34171 2014-10-04       0        NaN        NaN
2698123   34171 2014-10-05       2  200000000  200000000
2698124   34171 2014-10-06       0        NaN        NaN
2698125   34171 2014-10-07       0        NaN        NaN
2698126   34171 2014-10-08       0        NaN        NaN
2698127   34171 2014-10-09       1  230000000  230000000
2698128   34171 2014-10-10       0        NaN        NaN
2698129   34171 2014-10-11       1  240000000  240000000
2698130   34171 2014-10-12       0        NaN        NaN
2698131   34171 2014-10-13       0        NaN        NaN
2698132   34171 2014-10-14       0        NaN        NaN
2698133   34171 2014-10-15       0        NaN        NaN
2698134   34171 2014-10-16       0        NaN        NaN
2698135   34171 2014-10-17       0        NaN        NaN
2698136   34171 2014-10-18       2  189027136  189027136
2698137   34171 2014-10-19       0        NaN        NaN
2698138   34171 2014-10-20       0        NaN        NaN
2698139   34171 2014-10-21       0        NaN        NaN
2698140   34171 2014-10-22       0        NaN        NaN
2698141   34171 2014-10-23       0        NaN        NaN
2698142   34171 2014-10-24       0        NaN        NaN
2698143   34171 2014-10-25       0        NaN        NaN
2698144   34171 2014-10-26       0        NaN        NaN
2698145   34171 2014-10-27       0        NaN        NaN
2698146   34171 2014-10-28       1  239000000  239000000
2698147   34171 2014-10-29       0        NaN        NaN
2698148   34171 2014-10-30       0        NaN        NaN
2698149   34171 2014-10-31       0        NaN        NaN
2698150   34171 2014-11-01       0        NaN        NaN
2698151   34171 2014-11-02       1  238500000  238500000

[366 rows x 5 columns], 's':               avgprice  volume
price_date                    
2013-11-03  1002080.12       2
2013-11-04  1001539.56       4
2013-11-06  2062499.75       8
2013-11-07  3000994.50       2
2013-11-10  3000000.00       1
2013-11-19  3499993.25       2
2013-11-22  1001984.81       1
2013-11-26  3489899.00       1
2013-11-27  3489899.00       1
2013-11-28  2069950.00       2
2013-12-01  3489900.00       1
2013-12-03  3498895.25       1
2013-12-07  3498895.25       2
2013-12-11  3495000.00       2
2013-12-12  3499996.75       2
2013-12-15  3499998.00       1
2013-12-17  3499998.00       1
2013-12-21  3400000.00       1
2013-12-23  3400000.00       1
2013-12-24  2574999.50       4
2013-12-25  3499999.00       3
2013-12-28  3499999.00       1
2013-12-30  3500000.00       2
2013-12-31  4250000.00       1
2014-01-02  4250000.00       1
2014-01-11   700000.00       2
2014-01-16  1849500.00       4
2014-01-23  3800000.00       1
2014-01-26  3300000.00       1
2014-01-31  3800000.00       1
...                ...     ...
2014-08-20  6899998.50       2
2014-08-21  6899999.00       1
2014-08-24  6747500.00       1
2014-08-26  6748499.00       2
2014-08-27  6748500.00       1
2014-08-28  6748500.00       1
2014-09-02  6600000.00       1
2014-09-03  6600000.00       1
2014-09-06  6600000.00       2
2014-09-08  6599999.00       3
2014-09-11   150001.02       1
2014-09-14  6699994.00       1
2014-09-16  6699993.00       1
2014-09-18  4000000.00       1
2014-09-21  3750000.00       1
2014-09-22  5666333.00       3
2014-09-25  6500000.00       1
2014-09-28  6499973.50       3
2014-09-30  6489979.00       3
2014-10-05  6489975.00       2
2014-10-06  6489975.00       1
2014-10-08  6429333.00       6
2014-10-09  6487983.00       1
2014-10-10  6487983.00       1
2014-10-12  6487979.00       1
2014-10-14  6487979.00       3
2014-10-19  6487960.00      11
2014-10-20  2262000.75       3
2014-10-25  6378000.00       2
2014-10-27  6372498.00       1

[118 rows x 2 columns], 'rdf':          itemid price_date    volume      avgprice      intprice
0            18 2013-11-02  39381609  4.512000e+01  4.512000e+01
1            18 2013-11-03  42961573  4.506000e+01  4.506000e+01
2            18 2013-11-04  12704806  4.905000e+01  4.905000e+01
3            18 2013-11-05  49553044  5.000000e+01  5.000000e+01
4            18 2013-11-06  13980435  4.604000e+01  4.604000e+01
5            18 2013-11-07  18976154  4.930000e+01  4.930000e+01
6            18 2013-11-08  16608642  4.941000e+01  4.941000e+01
7            18 2013-11-09  15067572  4.946000e+01  4.946000e+01
8            18 2013-11-10  18090347  4.995000e+01  4.995000e+01
9            18 2013-11-11  20436689  4.650000e+01  4.650000e+01
10           18 2013-11-12  15752480  5.046000e+01  5.046000e+01
11           18 2013-11-13   9454508  5.081000e+01  5.081000e+01
12           18 2013-11-14  16649091  5.001000e+01  5.001000e+01
13           18 2013-11-15   9675592  5.199000e+01  5.199000e+01
14           18 2013-11-16  17230584  4.516000e+01  4.516000e+01
15           18 2013-11-17  33862768  5.500000e+01  5.500000e+01
16           18 2013-11-18  30822756  5.250000e+01  5.250000e+01
17           18 2013-11-19  11289062  5.395000e+01  5.395000e+01
18           18 2013-11-20  29608770  5.413000e+01  5.413000e+01
19           18 2013-11-21  15104457  5.422000e+01  5.422000e+01
20           18 2013-11-22  46956539  5.424000e+01  5.424000e+01
21           18 2013-11-23  17279149  5.455000e+01  5.455000e+01
22           18 2013-11-24  22230750  5.437000e+01  5.437000e+01
23           18 2013-11-25  21320555  5.436000e+01  5.436000e+01
24           18 2013-11-26  14662851  5.451000e+01  5.451000e+01
25           18 2013-11-27  30840049  5.437000e+01  5.437000e+01
26           18 2013-11-28  11619466  5.377000e+01  5.377000e+01
27           18 2013-11-29  41791215  5.385000e+01  5.385000e+01
28           18 2013-11-30  18739456  5.190000e+01  5.190000e+01
29           18 2013-12-01  25650792  5.381000e+01  5.381000e+01
...         ...        ...       ...           ...           ...
2698854   34173 2014-10-04         0           NaN           NaN
2698855   34173 2014-10-05         5  3.008000e+08  3.008000e+08
2698856   34173 2014-10-06         4  2.425000e+08  2.425000e+08
2698857   34173 2014-10-07         3  2.213333e+08  2.213333e+08
2698858   34173 2014-10-08        10  2.109096e+08  2.109096e+08
2698859   34173 2014-10-09         5  1.930000e+08  1.930000e+08
2698860   34173 2014-10-10         7  1.634286e+08  1.634286e+08
2698861   34173 2014-10-11         5  1.402800e+08  1.402800e+08
2698862   34173 2014-10-12         5  1.431000e+08  1.431000e+08
2698863   34173 2014-10-13         7  8.800002e+07  8.800002e+07
2698864   34173 2014-10-14         6  1.065000e+08  1.065000e+08
2698865   34173 2014-10-15         5  1.038000e+08  1.038000e+08
2698866   34173 2014-10-16         3  8.100000e+07  8.100000e+07
2698867   34173 2014-10-17         4  6.382500e+07  6.382500e+07
2698868   34173 2014-10-18         6  1.100000e+08  1.100000e+08
2698869   34173 2014-10-19         3  1.013333e+08  1.013333e+08
2698870   34173 2014-10-20         2  1.285000e+08  1.285000e+08
2698871   34173 2014-10-21         2  1.010540e+08  1.010540e+08
2698872   34173 2014-10-22         7  9.475858e+07  9.475858e+07
2698873   34173 2014-10-23         4  1.227750e+08  1.227750e+08
2698874   34173 2014-10-24         5  8.602000e+07  8.602000e+07
2698875   34173 2014-10-25         3  9.133334e+07  9.133334e+07
2698876   34173 2014-10-26         6  7.576666e+07  7.576666e+07
2698877   34173 2014-10-27         4  8.025000e+07  8.025000e+07
2698878   34173 2014-10-28         3  7.366666e+07  7.366666e+07
2698879   34173 2014-10-29         6  9.333334e+07  9.333334e+07
2698880   34173 2014-10-30         3  8.233340e+07  8.233340e+07
2698881   34173 2014-10-31         8  6.900009e+07  6.900009e+07
2698882   34173 2014-11-01         3  7.966670e+07  7.966670e+07
2698883   34173 2014-11-02         5  9.140000e+07  9.140000e+07

[2698884 rows x 5 columns], 'l2': Index([u'SN2P5', u'SN2P0', u'SN1P5', u'SN1P0', u'SN0P5', u'S0P0', u'S0P5', u'S1P0', u'S1P5', u'S2P0', u'S2P5'], dtype='object')}
>>> history
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'history' is not defined
>>> history()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'history' is not defined
>>> rdfg.get_group(34171).loc['avgprice']
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 1194, in __getitem__
    return self._getitem_axis(key, axis=0)
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 1337, in _getitem_axis
    self._has_valid_type(key, axis)
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 1299, in _has_valid_type
    error()
  File "D:\Anaconda\lib\site-packages\pandas\core\indexing.py", line 1286, in error
    (key, self.obj._get_axis_name(axis)))
KeyError: 'the label [avgprice] is not in the [index]'
Resetting execution engine
The Python REPL process has exited
>>> import stat_script as s
Fetching item list from SDE: oceanus-1.0-105658
   0.8 Finished calculating convert.
Fetching market data ...
   0.8 Finished calculating raw_query.
  59.1 Finished calculating raw_data.
  59.1 Finished calculating expected_dates.
  87.3 Finished calculating raw_data_filled.
  87.3 Finished calculating market_data_groups.
Crunching Stats
 184.9 Finished calculating stats.
 185.1 Finished calculating market_sigmas.
 185.8 Finished calculating vol_means.
>>> v = s.V
>>> v.raw_data_filled
         itemid price_date    volume      avgprice
0            18 2013-11-02  39381609  4.512000e+01
1            18 2013-11-03  42961573  4.506000e+01
2            18 2013-11-04  12704806  4.905000e+01
3            18 2013-11-05  49553044  5.000000e+01
4            18 2013-11-06  13980435  4.604000e+01
5            18 2013-11-07  18976154  4.930000e+01
6            18 2013-11-08  16608642  4.941000e+01
7            18 2013-11-09  15067572  4.946000e+01
8            18 2013-11-10  18090347  4.995000e+01
9            18 2013-11-11  20436689  4.650000e+01
10           18 2013-11-12  15752480  5.046000e+01
11           18 2013-11-13   9454508  5.081000e+01
12           18 2013-11-14  16649091  5.001000e+01
13           18 2013-11-15   9675592  5.199000e+01
14           18 2013-11-16  17230584  4.516000e+01
15           18 2013-11-17  33862768  5.500000e+01
16           18 2013-11-18  30822756  5.250000e+01
17           18 2013-11-19  11289062  5.395000e+01
18           18 2013-11-20  29608770  5.413000e+01
19           18 2013-11-21  15104457  5.422000e+01
20           18 2013-11-22  46956539  5.424000e+01
21           18 2013-11-23  17279149  5.455000e+01
22           18 2013-11-24  22230750  5.437000e+01
23           18 2013-11-25  21320555  5.436000e+01
24           18 2013-11-26  14662851  5.451000e+01
25           18 2013-11-27  30840049  5.437000e+01
26           18 2013-11-28  11619466  5.377000e+01
27           18 2013-11-29  41791215  5.385000e+01
28           18 2013-11-30  18739456  5.190000e+01
29           18 2013-12-01  25650792  5.381000e+01
...         ...        ...       ...           ...
2698854   34173 2014-10-04         0           NaN
2698855   34173 2014-10-05         5  3.008000e+08
2698856   34173 2014-10-06         4  2.425000e+08
2698857   34173 2014-10-07         3  2.213333e+08
2698858   34173 2014-10-08        10  2.109096e+08
2698859   34173 2014-10-09         5  1.930000e+08
2698860   34173 2014-10-10         7  1.634286e+08
2698861   34173 2014-10-11         5  1.402800e+08
2698862   34173 2014-10-12         5  1.431000e+08
2698863   34173 2014-10-13         7  8.800002e+07
2698864   34173 2014-10-14         6  1.065000e+08
2698865   34173 2014-10-15         5  1.038000e+08
2698866   34173 2014-10-16         3  8.100000e+07
2698867   34173 2014-10-17         4  6.382500e+07
2698868   34173 2014-10-18         6  1.100000e+08
2698869   34173 2014-10-19         3  1.013333e+08
2698870   34173 2014-10-20         2  1.285000e+08
2698871   34173 2014-10-21         2  1.010540e+08
2698872   34173 2014-10-22         7  9.475858e+07
2698873   34173 2014-10-23         4  1.227750e+08
2698874   34173 2014-10-24         5  8.602000e+07
2698875   34173 2014-10-25         3  9.133334e+07
2698876   34173 2014-10-26         6  7.576666e+07
2698877   34173 2014-10-27         4  8.025000e+07
2698878   34173 2014-10-28         3  7.366666e+07
2698879   34173 2014-10-29         6  9.333334e+07
2698880   34173 2014-10-30         3  8.233340e+07
2698881   34173 2014-10-31         8  6.900009e+07
2698882   34173 2014-11-01         3  7.966670e+07
2698883   34173 2014-11-02         5  9.140000e+07

[2698884 rows x 4 columns]
>>> g = v.raw_data_filled.index = v.raw_data_filled['price_date']
>>> g
0    2013-11-02
1    2013-11-03
2    2013-11-04
3    2013-11-05
4    2013-11-06
5    2013-11-07
6    2013-11-08
7    2013-11-09
8    2013-11-10
9    2013-11-11
10   2013-11-12
11   2013-11-13
12   2013-11-14
13   2013-11-15
14   2013-11-16
...
2698869   2014-10-19
2698870   2014-10-20
2698871   2014-10-21
2698872   2014-10-22
2698873   2014-10-23
2698874   2014-10-24
2698875   2014-10-25
2698876   2014-10-26
2698877   2014-10-27
2698878   2014-10-28
2698879   2014-10-29
2698880   2014-10-30
2698881   2014-10-31
2698882   2014-11-01
2698883   2014-11-02
Name: price_date, Length: 2698884, dtype: datetime64[ns]
>>> g = v.raw_data_filled
>>> g
            itemid price_date    volume      avgprice
price_date                                           
2013-11-02      18 2013-11-02  39381609  4.512000e+01
2013-11-03      18 2013-11-03  42961573  4.506000e+01
2013-11-04      18 2013-11-04  12704806  4.905000e+01
2013-11-05      18 2013-11-05  49553044  5.000000e+01
2013-11-06      18 2013-11-06  13980435  4.604000e+01
2013-11-07      18 2013-11-07  18976154  4.930000e+01
2013-11-08      18 2013-11-08  16608642  4.941000e+01
2013-11-09      18 2013-11-09  15067572  4.946000e+01
2013-11-10      18 2013-11-10  18090347  4.995000e+01
2013-11-11      18 2013-11-11  20436689  4.650000e+01
2013-11-12      18 2013-11-12  15752480  5.046000e+01
2013-11-13      18 2013-11-13   9454508  5.081000e+01
2013-11-14      18 2013-11-14  16649091  5.001000e+01
2013-11-15      18 2013-11-15   9675592  5.199000e+01
2013-11-16      18 2013-11-16  17230584  4.516000e+01
2013-11-17      18 2013-11-17  33862768  5.500000e+01
2013-11-18      18 2013-11-18  30822756  5.250000e+01
2013-11-19      18 2013-11-19  11289062  5.395000e+01
2013-11-20      18 2013-11-20  29608770  5.413000e+01
2013-11-21      18 2013-11-21  15104457  5.422000e+01
2013-11-22      18 2013-11-22  46956539  5.424000e+01
2013-11-23      18 2013-11-23  17279149  5.455000e+01
2013-11-24      18 2013-11-24  22230750  5.437000e+01
2013-11-25      18 2013-11-25  21320555  5.436000e+01
2013-11-26      18 2013-11-26  14662851  5.451000e+01
2013-11-27      18 2013-11-27  30840049  5.437000e+01
2013-11-28      18 2013-11-28  11619466  5.377000e+01
2013-11-29      18 2013-11-29  41791215  5.385000e+01
2013-11-30      18 2013-11-30  18739456  5.190000e+01
2013-12-01      18 2013-12-01  25650792  5.381000e+01
...            ...        ...       ...           ...
2014-10-04   34173 2014-10-04         0           NaN
2014-10-05   34173 2014-10-05         5  3.008000e+08
2014-10-06   34173 2014-10-06         4  2.425000e+08
2014-10-07   34173 2014-10-07         3  2.213333e+08
2014-10-08   34173 2014-10-08        10  2.109096e+08
2014-10-09   34173 2014-10-09         5  1.930000e+08
2014-10-10   34173 2014-10-10         7  1.634286e+08
2014-10-11   34173 2014-10-11         5  1.402800e+08
2014-10-12   34173 2014-10-12         5  1.431000e+08
2014-10-13   34173 2014-10-13         7  8.800002e+07
2014-10-14   34173 2014-10-14         6  1.065000e+08
2014-10-15   34173 2014-10-15         5  1.038000e+08
2014-10-16   34173 2014-10-16         3  8.100000e+07
2014-10-17   34173 2014-10-17         4  6.382500e+07
2014-10-18   34173 2014-10-18         6  1.100000e+08
2014-10-19   34173 2014-10-19         3  1.013333e+08
2014-10-20   34173 2014-10-20         2  1.285000e+08
2014-10-21   34173 2014-10-21         2  1.010540e+08
2014-10-22   34173 2014-10-22         7  9.475858e+07
2014-10-23   34173 2014-10-23         4  1.227750e+08
2014-10-24   34173 2014-10-24         5  8.602000e+07
2014-10-25   34173 2014-10-25         3  9.133334e+07
2014-10-26   34173 2014-10-26         6  7.576666e+07
2014-10-27   34173 2014-10-27         4  8.025000e+07
2014-10-28   34173 2014-10-28         3  7.366666e+07
2014-10-29   34173 2014-10-29         6  9.333334e+07
2014-10-30   34173 2014-10-30         3  8.233340e+07
2014-10-31   34173 2014-10-31         8  6.900009e+07
2014-11-01   34173 2014-11-01         3  7.966670e+07
2014-11-02   34173 2014-11-02         5  9.140000e+07

[2698884 rows x 4 columns]
>>> g.groupby('itemid').volume
<pandas.core.groupby.SeriesGroupBy object at 0x000000003EFD9C88>
>>> gf = g.groupby('itemid').volume.fillna
>>> gf
<bound method SeriesGroupBy.fillna of <pandas.core.groupby.SeriesGroupBy object at 0x000000003EFD9588>>
>>> gf = g.groupby('itemid').volume.fillna()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<string>", line 41, in fillna
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 568, in wrapper
    raise ValueError
ValueError
>>> gf = g.groupby('itemid').avgprice
>>> gf
<pandas.core.groupby.SeriesGroupBy object at 0x000000000E14F400>
>>> gf.interpolate(inplace=True)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 504, in __getattr__
    return self._make_wrapper(attr)
  File "D:\Anaconda\lib\site-packages\pandas\core\groupby.py", line 519, in _make_wrapper
    raise AttributeError(msg)
AttributeError: Cannot access callable attribute 'interpolate' of 'SeriesGroupBy' objects, try using the 'apply' method
>>> gf.apply(lambda x: x.interpolate())
price_date
2013-11-02    45.12
2013-11-03    45.06
2013-11-04    49.05
2013-11-05    50.00
2013-11-06    46.04
2013-11-07    49.30
2013-11-08    49.41
2013-11-09    49.46
2013-11-10    49.95
2013-11-11    46.50
2013-11-12    50.46
2013-11-13    50.81
2013-11-14    50.01
2013-11-15    51.99
2013-11-16    45.16
...
2014-10-19    101333336
2014-10-20    128500000
2014-10-21    101054008
2014-10-22     94758576
2014-10-23    122775000
2014-10-24     86020000
2014-10-25     91333336
2014-10-26     75766664
2014-10-27     80250000
2014-10-28     73666664
2014-10-29     93333336
2014-10-30     82333400
2014-10-31     69000088
2014-11-01     79666696
2014-11-02     91400000
Length: 2698884
>>> import pandas as pd
>>> gf
<pandas.core.groupby.SeriesGroupBy object at 0x000000000E14F400>
>>> pd.merge(v.raw_data_filled, gf.apply(lambda x: x.interpolate), copy=False)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\tools\merge.py", line 38, in merge
    copy=copy)
  File "D:\Anaconda\lib\site-packages\pandas\tools\merge.py", line 184, in __init__
    self.join_names) = self._get_merge_keys()
  File "D:\Anaconda\lib\site-packages\pandas\tools\merge.py", line 319, in _get_merge_keys
    self._validate_specification()
  File "D:\Anaconda\lib\site-packages\pandas\tools\merge.py", line 410, in _validate_specification
    if not self.right.columns.is_unique:
  File "D:\Anaconda\lib\site-packages\pandas\core\generic.py", line 1929, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'Series' object has no attribute 'columns'
>>> v.raw_data_filled.append(gf.apply(lambda x: x.interpolate()))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "D:\Anaconda\lib\site-packages\pandas\core\frame.py", line 3761, in append
    raise TypeError('Can only append a Series if '
TypeError: Can only append a Series if ignore_index=True
>>> v.raw_data_filled['i_price'] = gf.apply(lambda x: x.interpolate())
>>> v.raw_data_filled
            itemid price_date    volume      avgprice       i_price
price_date                                                         
2013-11-02      18 2013-11-02  39381609  4.512000e+01  4.512000e+01
2013-11-03      18 2013-11-03  42961573  4.506000e+01  4.506000e+01
2013-11-04      18 2013-11-04  12704806  4.905000e+01  4.905000e+01
2013-11-05      18 2013-11-05  49553044  5.000000e+01  5.000000e+01
2013-11-06      18 2013-11-06  13980435  4.604000e+01  4.604000e+01
2013-11-07      18 2013-11-07  18976154  4.930000e+01  4.930000e+01
2013-11-08      18 2013-11-08  16608642  4.941000e+01  4.941000e+01
2013-11-09      18 2013-11-09  15067572  4.946000e+01  4.946000e+01
2013-11-10      18 2013-11-10  18090347  4.995000e+01  4.995000e+01
2013-11-11      18 2013-11-11  20436689  4.650000e+01  4.650000e+01
2013-11-12      18 2013-11-12  15752480  5.046000e+01  5.046000e+01
2013-11-13      18 2013-11-13   9454508  5.081000e+01  5.081000e+01
2013-11-14      18 2013-11-14  16649091  5.001000e+01  5.001000e+01
2013-11-15      18 2013-11-15   9675592  5.199000e+01  5.199000e+01
2013-11-16      18 2013-11-16  17230584  4.516000e+01  4.516000e+01
2013-11-17      18 2013-11-17  33862768  5.500000e+01  5.500000e+01
2013-11-18      18 2013-11-18  30822756  5.250000e+01  5.250000e+01
2013-11-19      18 2013-11-19  11289062  5.395000e+01  5.395000e+01
2013-11-20      18 2013-11-20  29608770  5.413000e+01  5.413000e+01
2013-11-21      18 2013-11-21  15104457  5.422000e+01  5.422000e+01
2013-11-22      18 2013-11-22  46956539  5.424000e+01  5.424000e+01
2013-11-23      18 2013-11-23  17279149  5.455000e+01  5.455000e+01
2013-11-24      18 2013-11-24  22230750  5.437000e+01  5.437000e+01
2013-11-25      18 2013-11-25  21320555  5.436000e+01  5.436000e+01
2013-11-26      18 2013-11-26  14662851  5.451000e+01  5.451000e+01
2013-11-27      18 2013-11-27  30840049  5.437000e+01  5.437000e+01
2013-11-28      18 2013-11-28  11619466  5.377000e+01  5.377000e+01
2013-11-29      18 2013-11-29  41791215  5.385000e+01  5.385000e+01
2013-11-30      18 2013-11-30  18739456  5.190000e+01  5.190000e+01
2013-12-01      18 2013-12-01  25650792  5.381000e+01  5.381000e+01
...            ...        ...       ...           ...           ...
2014-10-04   34173 2014-10-04         0           NaN  3.222750e+08
2014-10-05   34173 2014-10-05         5  3.008000e+08  3.008000e+08
2014-10-06   34173 2014-10-06         4  2.425000e+08  2.425000e+08
2014-10-07   34173 2014-10-07         3  2.213333e+08  2.213333e+08
2014-10-08   34173 2014-10-08        10  2.109096e+08  2.109096e+08
2014-10-09   34173 2014-10-09         5  1.930000e+08  1.930000e+08
2014-10-10   34173 2014-10-10         7  1.634286e+08  1.634286e+08
2014-10-11   34173 2014-10-11         5  1.402800e+08  1.402800e+08
2014-10-12   34173 2014-10-12         5  1.431000e+08  1.431000e+08
2014-10-13   34173 2014-10-13         7  8.800002e+07  8.800002e+07
2014-10-14   34173 2014-10-14         6  1.065000e+08  1.065000e+08
2014-10-15   34173 2014-10-15         5  1.038000e+08  1.038000e+08
2014-10-16   34173 2014-10-16         3  8.100000e+07  8.100000e+07
2014-10-17   34173 2014-10-17         4  6.382500e+07  6.382500e+07
2014-10-18   34173 2014-10-18         6  1.100000e+08  1.100000e+08
2014-10-19   34173 2014-10-19         3  1.013333e+08  1.013333e+08
2014-10-20   34173 2014-10-20         2  1.285000e+08  1.285000e+08
2014-10-21   34173 2014-10-21         2  1.010540e+08  1.010540e+08
2014-10-22   34173 2014-10-22         7  9.475858e+07  9.475858e+07
2014-10-23   34173 2014-10-23         4  1.227750e+08  1.227750e+08
2014-10-24   34173 2014-10-24         5  8.602000e+07  8.602000e+07
2014-10-25   34173 2014-10-25         3  9.133334e+07  9.133334e+07
2014-10-26   34173 2014-10-26         6  7.576666e+07  7.576666e+07
2014-10-27   34173 2014-10-27         4  8.025000e+07  8.025000e+07
2014-10-28   34173 2014-10-28         3  7.366666e+07  7.366666e+07
2014-10-29   34173 2014-10-29         6  9.333334e+07  9.333334e+07
2014-10-30   34173 2014-10-30         3  8.233340e+07  8.233340e+07
2014-10-31   34173 2014-10-31         8  6.900009e+07  6.900009e+07
2014-11-01   34173 2014-11-01         3  7.966670e+07  7.966670e+07
2014-11-02   34173 2014-11-02         5  9.140000e+07  9.140000e+07

[2698884 rows x 5 columns]
>>> v.raw_data_filled[v.raw_data_filled.itemid == 34171]
            itemid price_date  volume   avgprice       i_price
price_date                                                    
2013-11-02   34171 2013-11-02       0        NaN           NaN
2013-11-03   34171 2013-11-03       0        NaN           NaN
2013-11-04   34171 2013-11-04       0        NaN           NaN
2013-11-05   34171 2013-11-05       0        NaN           NaN
2013-11-06   34171 2013-11-06       0        NaN           NaN
2013-11-07   34171 2013-11-07       0        NaN           NaN
2013-11-08   34171 2013-11-08       0        NaN           NaN
2013-11-09   34171 2013-11-09       0        NaN           NaN
2013-11-10   34171 2013-11-10       0        NaN           NaN
2013-11-11   34171 2013-11-11       0        NaN           NaN
2013-11-12   34171 2013-11-12       0        NaN           NaN
2013-11-13   34171 2013-11-13       0        NaN           NaN
2013-11-14   34171 2013-11-14       0        NaN           NaN
2013-11-15   34171 2013-11-15       0        NaN           NaN
2013-11-16   34171 2013-11-16       0        NaN           NaN
2013-11-17   34171 2013-11-17       0        NaN           NaN
2013-11-18   34171 2013-11-18       0        NaN           NaN
2013-11-19   34171 2013-11-19       0        NaN           NaN
2013-11-20   34171 2013-11-20       0        NaN           NaN
2013-11-21   34171 2013-11-21       0        NaN           NaN
2013-11-22   34171 2013-11-22       0        NaN           NaN
2013-11-23   34171 2013-11-23       0        NaN           NaN
2013-11-24   34171 2013-11-24       0        NaN           NaN
2013-11-25   34171 2013-11-25       0        NaN           NaN
2013-11-26   34171 2013-11-26       0        NaN           NaN
2013-11-27   34171 2013-11-27       0        NaN           NaN
2013-11-28   34171 2013-11-28       0        NaN           NaN
2013-11-29   34171 2013-11-29       0        NaN           NaN
2013-11-30   34171 2013-11-30       0        NaN           NaN
2013-12-01   34171 2013-12-01       0        NaN           NaN
...            ...        ...     ...        ...           ...
2014-10-04   34171 2014-10-04       0        NaN  1.975000e+08
2014-10-05   34171 2014-10-05       2  200000000  2.000000e+08
2014-10-06   34171 2014-10-06       0        NaN  2.075000e+08
2014-10-07   34171 2014-10-07       0        NaN  2.150000e+08
2014-10-08   34171 2014-10-08       0        NaN  2.225000e+08
2014-10-09   34171 2014-10-09       1  230000000  2.300000e+08
2014-10-10   34171 2014-10-10       0        NaN  2.350000e+08
2014-10-11   34171 2014-10-11       1  240000000  2.400000e+08
2014-10-12   34171 2014-10-12       0        NaN  2.327182e+08
2014-10-13   34171 2014-10-13       0        NaN  2.254363e+08
2014-10-14   34171 2014-10-14       0        NaN  2.181545e+08
2014-10-15   34171 2014-10-15       0        NaN  2.108726e+08
2014-10-16   34171 2014-10-16       0        NaN  2.035908e+08
2014-10-17   34171 2014-10-17       0        NaN  1.963090e+08
2014-10-18   34171 2014-10-18       2  189027136  1.890271e+08
2014-10-19   34171 2014-10-19       0        NaN  1.940244e+08
2014-10-20   34171 2014-10-20       0        NaN  1.990217e+08
2014-10-21   34171 2014-10-21       0        NaN  2.040190e+08
2014-10-22   34171 2014-10-22       0        NaN  2.090163e+08
2014-10-23   34171 2014-10-23       0        NaN  2.140136e+08
2014-10-24   34171 2014-10-24       0        NaN  2.190109e+08
2014-10-25   34171 2014-10-25       0        NaN  2.240081e+08
2014-10-26   34171 2014-10-26       0        NaN  2.290054e+08
2014-10-27   34171 2014-10-27       0        NaN  2.340027e+08
2014-10-28   34171 2014-10-28       1  239000000  2.390000e+08
2014-10-29   34171 2014-10-29       0        NaN  2.389000e+08
2014-10-30   34171 2014-10-30       0        NaN  2.388000e+08
2014-10-31   34171 2014-10-31       0        NaN  2.387000e+08
2014-11-01   34171 2014-11-01       0        NaN  2.386000e+08
2014-11-02   34171 2014-11-02       1  238500000  2.385000e+08

[366 rows x 5 columns]
>>> v.raw_data_filled['i_price'] = gf.apply(lambda x: x.interpolate().fillna(method='bfill'))
>>> v.raw_data_filled[v.raw_data_filled.itemid == 34171]
            itemid price_date  volume   avgprice       i_price
price_date                                                    
2013-11-02   34171 2013-11-02       0        NaN  8.600000e+07
2013-11-03   34171 2013-11-03       0        NaN  8.600000e+07
2013-11-04   34171 2013-11-04       0        NaN  8.600000e+07
2013-11-05   34171 2013-11-05       0        NaN  8.600000e+07
2013-11-06   34171 2013-11-06       0        NaN  8.600000e+07
2013-11-07   34171 2013-11-07       0        NaN  8.600000e+07
2013-11-08   34171 2013-11-08       0        NaN  8.600000e+07
2013-11-09   34171 2013-11-09       0        NaN  8.600000e+07
2013-11-10   34171 2013-11-10       0        NaN  8.600000e+07
2013-11-11   34171 2013-11-11       0        NaN  8.600000e+07
2013-11-12   34171 2013-11-12       0        NaN  8.600000e+07
2013-11-13   34171 2013-11-13       0        NaN  8.600000e+07
2013-11-14   34171 2013-11-14       0        NaN  8.600000e+07
2013-11-15   34171 2013-11-15       0        NaN  8.600000e+07
2013-11-16   34171 2013-11-16       0        NaN  8.600000e+07
2013-11-17   34171 2013-11-17       0        NaN  8.600000e+07
2013-11-18   34171 2013-11-18       0        NaN  8.600000e+07
2013-11-19   34171 2013-11-19       0        NaN  8.600000e+07
2013-11-20   34171 2013-11-20       0        NaN  8.600000e+07
2013-11-21   34171 2013-11-21       0        NaN  8.600000e+07
2013-11-22   34171 2013-11-22       0        NaN  8.600000e+07
2013-11-23   34171 2013-11-23       0        NaN  8.600000e+07
2013-11-24   34171 2013-11-24       0        NaN  8.600000e+07
2013-11-25   34171 2013-11-25       0        NaN  8.600000e+07
2013-11-26   34171 2013-11-26       0        NaN  8.600000e+07
2013-11-27   34171 2013-11-27       0        NaN  8.600000e+07
2013-11-28   34171 2013-11-28       0        NaN  8.600000e+07
2013-11-29   34171 2013-11-29       0        NaN  8.600000e+07
2013-11-30   34171 2013-11-30       0        NaN  8.600000e+07
2013-12-01   34171 2013-12-01       0        NaN  8.600000e+07
...            ...        ...     ...        ...           ...
2014-10-04   34171 2014-10-04       0        NaN  1.975000e+08
2014-10-05   34171 2014-10-05       2  200000000  2.000000e+08
2014-10-06   34171 2014-10-06       0        NaN  2.075000e+08
2014-10-07   34171 2014-10-07       0        NaN  2.150000e+08
2014-10-08   34171 2014-10-08       0        NaN  2.225000e+08
2014-10-09   34171 2014-10-09       1  230000000  2.300000e+08
2014-10-10   34171 2014-10-10       0        NaN  2.350000e+08
2014-10-11   34171 2014-10-11       1  240000000  2.400000e+08
2014-10-12   34171 2014-10-12       0        NaN  2.327182e+08
2014-10-13   34171 2014-10-13       0        NaN  2.254363e+08
2014-10-14   34171 2014-10-14       0        NaN  2.181545e+08
2014-10-15   34171 2014-10-15       0        NaN  2.108726e+08
2014-10-16   34171 2014-10-16       0        NaN  2.035908e+08
2014-10-17   34171 2014-10-17       0        NaN  1.963090e+08
2014-10-18   34171 2014-10-18       2  189027136  1.890271e+08
2014-10-19   34171 2014-10-19       0        NaN  1.940244e+08
2014-10-20   34171 2014-10-20       0        NaN  1.990217e+08
2014-10-21   34171 2014-10-21       0        NaN  2.040190e+08
2014-10-22   34171 2014-10-22       0        NaN  2.090163e+08
2014-10-23   34171 2014-10-23       0        NaN  2.140136e+08
2014-10-24   34171 2014-10-24       0        NaN  2.190109e+08
2014-10-25   34171 2014-10-25       0        NaN  2.240081e+08
2014-10-26   34171 2014-10-26       0        NaN  2.290054e+08
2014-10-27   34171 2014-10-27       0        NaN  2.340027e+08
2014-10-28   34171 2014-10-28       1  239000000  2.390000e+08
2014-10-29   34171 2014-10-29       0        NaN  2.389000e+08
2014-10-30   34171 2014-10-30       0        NaN  2.388000e+08
2014-10-31   34171 2014-10-31       0        NaN  2.387000e+08
2014-11-01   34171 2014-11-01       0        NaN  2.386000e+08
2014-11-02   34171 2014-11-02       1  238500000  2.385000e+08

[366 rows x 5 columns]
>>> v.raw_data_filled['i_price'] = gf.apply(lambda x: pd.rolling_mean(x.interpolate().fillna(method='bfill'), 15))
>>> v.raw_data_filled[v.raw_data_filled.itemid == 34171]
            itemid price_date  volume   avgprice       i_price
price_date                                                    
2013-11-02   34171 2013-11-02       0        NaN           NaN
2013-11-03   34171 2013-11-03       0        NaN           NaN
2013-11-04   34171 2013-11-04       0        NaN           NaN
2013-11-05   34171 2013-11-05       0        NaN           NaN
2013-11-06   34171 2013-11-06       0        NaN           NaN
2013-11-07   34171 2013-11-07       0        NaN           NaN
2013-11-08   34171 2013-11-08       0        NaN           NaN
2013-11-09   34171 2013-11-09       0        NaN           NaN
2013-11-10   34171 2013-11-10       0        NaN           NaN
2013-11-11   34171 2013-11-11       0        NaN           NaN
2013-11-12   34171 2013-11-12       0        NaN           NaN
2013-11-13   34171 2013-11-13       0        NaN           NaN
2013-11-14   34171 2013-11-14       0        NaN           NaN
2013-11-15   34171 2013-11-15       0        NaN           NaN
2013-11-16   34171 2013-11-16       0        NaN  8.600000e+07
2013-11-17   34171 2013-11-17       0        NaN  8.600000e+07
2013-11-18   34171 2013-11-18       0        NaN  8.600000e+07
2013-11-19   34171 2013-11-19       0        NaN  8.600000e+07
2013-11-20   34171 2013-11-20       0        NaN  8.600000e+07
2013-11-21   34171 2013-11-21       0        NaN  8.600000e+07
2013-11-22   34171 2013-11-22       0        NaN  8.600000e+07
2013-11-23   34171 2013-11-23       0        NaN  8.600000e+07
2013-11-24   34171 2013-11-24       0        NaN  8.600000e+07
2013-11-25   34171 2013-11-25       0        NaN  8.600000e+07
2013-11-26   34171 2013-11-26       0        NaN  8.600000e+07
2013-11-27   34171 2013-11-27       0        NaN  8.600000e+07
2013-11-28   34171 2013-11-28       0        NaN  8.600000e+07
2013-11-29   34171 2013-11-29       0        NaN  8.600000e+07
2013-11-30   34171 2013-11-30       0        NaN  8.600000e+07
2013-12-01   34171 2013-12-01       0        NaN  8.600000e+07
...            ...        ...     ...        ...           ...
2014-10-04   34171 2014-10-04       0        NaN  1.043333e+08
2014-10-05   34171 2014-10-05       2  200000000  1.119333e+08
2014-10-06   34171 2014-10-06       0        NaN  1.200333e+08
2014-10-07   34171 2014-10-07       0        NaN  1.286333e+08
2014-10-08   34171 2014-10-08       0        NaN  1.377333e+08
2014-10-09   34171 2014-10-09       1  230000000  1.473333e+08
2014-10-10   34171 2014-10-10       0        NaN  1.572667e+08
2014-10-11   34171 2014-10-11       1  240000000  1.675333e+08
2014-10-12   34171 2014-10-12       0        NaN  1.773145e+08
2014-10-13   34171 2014-10-13       0        NaN  1.866103e+08
2014-10-14   34171 2014-10-14       0        NaN  1.954206e+08
2014-10-15   34171 2014-10-15       0        NaN  2.037454e+08
2014-10-16   34171 2014-10-16       0        NaN  2.115848e+08
2014-10-17   34171 2014-10-17       0        NaN  2.153054e+08
2014-10-18   34171 2014-10-18       2  189027136  2.149072e+08
2014-10-19   34171 2014-10-19       0        NaN  2.146755e+08
2014-10-20   34171 2014-10-20       0        NaN  2.146103e+08
2014-10-21   34171 2014-10-21       0        NaN  2.143782e+08
2014-10-22   34171 2014-10-22       0        NaN  2.139793e+08
2014-10-23   34171 2014-10-23       0        NaN  2.134136e+08
2014-10-24   34171 2014-10-24       0        NaN  2.126810e+08
2014-10-25   34171 2014-10-25       0        NaN  2.119482e+08
2014-10-26   34171 2014-10-26       0        NaN  2.112152e+08
2014-10-27   34171 2014-10-27       0        NaN  2.113008e+08
2014-10-28   34171 2014-10-28       1  239000000  2.122051e+08
2014-10-29   34171 2014-10-29       0        NaN  2.135881e+08
2014-10-30   34171 2014-10-30       0        NaN  2.154499e+08
2014-10-31   34171 2014-10-31       0        NaN  2.177905e+08
2014-11-01   34171 2014-11-01       0        NaN  2.206099e+08
2014-11-02   34171 2014-11-02       1  238500000  2.239081e+08

[366 rows x 5 columns]
>>> v.raw_data_filled[v.raw_data_filled.itemid == 34]
            itemid price_date       volume  avgprice   i_price
price_date                                                    
2013-11-02      34 2013-11-02  29112987907      4.75       NaN
2013-11-03      34 2013-11-03  36693361984      4.78       NaN
2013-11-04      34 2013-11-04  23069079781      4.78       NaN
2013-11-05      34 2013-11-05  26005580179      4.80       NaN
2013-11-06      34 2013-11-06  23654600552      4.79       NaN
2013-11-07      34 2013-11-07  24645749948      4.81       NaN
2013-11-08      34 2013-11-08  24397879623      4.80       NaN
2013-11-09      34 2013-11-09  31235106425      4.83       NaN
2013-11-10      34 2013-11-10  30529126145      4.81       NaN
2013-11-11      34 2013-11-11  22698778748      4.80       NaN
2013-11-12      34 2013-11-12  22413630385      4.86       NaN
2013-11-13      34 2013-11-13  24357785596      4.87       NaN
2013-11-14      34 2013-11-14  22898083113      4.78       NaN
2013-11-15      34 2013-11-15  25930441847      4.83       NaN
2013-11-16      34 2013-11-16  29777622031      4.84  4.808667
2013-11-17      34 2013-11-17  25492688514      4.81  4.812667
2013-11-18      34 2013-11-18  23267308672      4.84  4.816667
2013-11-19      34 2013-11-19  18702274437      4.82  4.819333
2013-11-20      34 2013-11-20  29861761354      4.83  4.821333
2013-11-21      34 2013-11-21  21055486896      4.81  4.822667
2013-11-22      34 2013-11-22  15471884772      4.80  4.822000
2013-11-23      34 2013-11-23  24830596182      4.79  4.821333
2013-11-24      34 2013-11-24  27364596015      4.80  4.819333
2013-11-25      34 2013-11-25  17866574436      4.76  4.816000
2013-11-26      34 2013-11-26  19727693721      4.76  4.813333
2013-11-27      34 2013-11-27  18264210919      4.76  4.806667
2013-11-28      34 2013-11-28  23969141777      4.76  4.799333
2013-11-29      34 2013-11-29  23008027938      4.76  4.798000
2013-11-30      34 2013-11-30  26238246428      4.76  4.793333
2013-12-01      34 2013-12-01  23291661308      4.76  4.788000
...            ...        ...          ...       ...       ...
2014-10-04      34 2014-10-04  11964839000      5.46  5.465333
2014-10-05      34 2014-10-05  12179560833      5.48  5.465333
2014-10-06      34 2014-10-06  11558176515      5.53  5.470000
2014-10-07      34 2014-10-07  15251307675      5.55  5.480000
2014-10-08      34 2014-10-08  10235833952      5.51  5.485333
2014-10-09      34 2014-10-09  13070837708      5.53  5.484000
2014-10-10      34 2014-10-10  12875202112      5.49  5.479333
2014-10-11      34 2014-10-11  10122357991      5.51  5.482667
2014-10-12      34 2014-10-12  12374422863      5.58  5.494667
2014-10-13      34 2014-10-13  10307106850      5.57  5.506000
2014-10-14      34 2014-10-14  10308307822      5.53  5.510000
2014-10-15      34 2014-10-15  12071957971      5.55  5.514000
2014-10-16      34 2014-10-16   7649868427      5.47  5.512667
2014-10-17      34 2014-10-17  11259645249      5.46  5.512000
2014-10-18      34 2014-10-18  12925536177      5.51  5.515333
2014-10-19      34 2014-10-19  13866506798      5.48  5.516667
2014-10-20      34 2014-10-20  11430195304      5.53  5.520000
2014-10-21      34 2014-10-21   8655125843      5.50  5.518000
2014-10-22      34 2014-10-22   9166774536      5.50  5.514667
2014-10-23      34 2014-10-23  11889511146      5.54  5.516667
2014-10-24      34 2014-10-24  11449260792      5.56  5.518667
2014-10-25      34 2014-10-25  10979265898      5.60  5.526000
2014-10-26      34 2014-10-26  13986878657      5.66  5.536000
2014-10-27      34 2014-10-27  14510989613      5.71  5.544667
2014-10-28      34 2014-10-28  13256462532      5.65  5.550000
2014-10-29      34 2014-10-29  11246050970      5.48  5.546667
2014-10-30      34 2014-10-30  14610354056      5.62  5.551333
2014-10-31      34 2014-10-31  16935147479      5.50  5.553333
2014-11-01      34 2014-11-01  10705199830      5.50  5.556000
2014-11-02      34 2014-11-02  12214346718      5.49  5.554667

[366 rows x 5 columns]
>>> v.raw_data_filled['i_price'] = gf.apply(lambda x: pd.rolling_mean(x.interpolate().fillna(method='bfill'), 15).fillna(method='bfill'))
>>> v.raw_data_filled[v.raw_data_filled.itemid == 34]
            itemid price_date       volume  avgprice   i_price
price_date                                                    
2013-11-02      34 2013-11-02  29112987907      4.75  4.808667
2013-11-03      34 2013-11-03  36693361984      4.78  4.808667
2013-11-04      34 2013-11-04  23069079781      4.78  4.808667
2013-11-05      34 2013-11-05  26005580179      4.80  4.808667
2013-11-06      34 2013-11-06  23654600552      4.79  4.808667
2013-11-07      34 2013-11-07  24645749948      4.81  4.808667
2013-11-08      34 2013-11-08  24397879623      4.80  4.808667
2013-11-09      34 2013-11-09  31235106425      4.83  4.808667
2013-11-10      34 2013-11-10  30529126145      4.81  4.808667
2013-11-11      34 2013-11-11  22698778748      4.80  4.808667
2013-11-12      34 2013-11-12  22413630385      4.86  4.808667
2013-11-13      34 2013-11-13  24357785596      4.87  4.808667
2013-11-14      34 2013-11-14  22898083113      4.78  4.808667
2013-11-15      34 2013-11-15  25930441847      4.83  4.808667
2013-11-16      34 2013-11-16  29777622031      4.84  4.808667
2013-11-17      34 2013-11-17  25492688514      4.81  4.812667
2013-11-18      34 2013-11-18  23267308672      4.84  4.816667
2013-11-19      34 2013-11-19  18702274437      4.82  4.819333
2013-11-20      34 2013-11-20  29861761354      4.83  4.821333
2013-11-21      34 2013-11-21  21055486896      4.81  4.822667
2013-11-22      34 2013-11-22  15471884772      4.80  4.822000
2013-11-23      34 2013-11-23  24830596182      4.79  4.821333
2013-11-24      34 2013-11-24  27364596015      4.80  4.819333
2013-11-25      34 2013-11-25  17866574436      4.76  4.816000
2013-11-26      34 2013-11-26  19727693721      4.76  4.813333
2013-11-27      34 2013-11-27  18264210919      4.76  4.806667
2013-11-28      34 2013-11-28  23969141777      4.76  4.799333
2013-11-29      34 2013-11-29  23008027938      4.76  4.798000
2013-11-30      34 2013-11-30  26238246428      4.76  4.793333
2013-12-01      34 2013-12-01  23291661308      4.76  4.788000
...            ...        ...          ...       ...       ...
2014-10-04      34 2014-10-04  11964839000      5.46  5.465333
2014-10-05      34 2014-10-05  12179560833      5.48  5.465333
2014-10-06      34 2014-10-06  11558176515      5.53  5.470000
2014-10-07      34 2014-10-07  15251307675      5.55  5.480000
2014-10-08      34 2014-10-08  10235833952      5.51  5.485333
2014-10-09      34 2014-10-09  13070837708      5.53  5.484000
2014-10-10      34 2014-10-10  12875202112      5.49  5.479333
2014-10-11      34 2014-10-11  10122357991      5.51  5.482667
2014-10-12      34 2014-10-12  12374422863      5.58  5.494667
2014-10-13      34 2014-10-13  10307106850      5.57  5.506000
2014-10-14      34 2014-10-14  10308307822      5.53  5.510000
2014-10-15      34 2014-10-15  12071957971      5.55  5.514000
2014-10-16      34 2014-10-16   7649868427      5.47  5.512667
2014-10-17      34 2014-10-17  11259645249      5.46  5.512000
2014-10-18      34 2014-10-18  12925536177      5.51  5.515333
2014-10-19      34 2014-10-19  13866506798      5.48  5.516667
2014-10-20      34 2014-10-20  11430195304      5.53  5.520000
2014-10-21      34 2014-10-21   8655125843      5.50  5.518000
2014-10-22      34 2014-10-22   9166774536      5.50  5.514667
2014-10-23      34 2014-10-23  11889511146      5.54  5.516667
2014-10-24      34 2014-10-24  11449260792      5.56  5.518667
2014-10-25      34 2014-10-25  10979265898      5.60  5.526000
2014-10-26      34 2014-10-26  13986878657      5.66  5.536000
2014-10-27      34 2014-10-27  14510989613      5.71  5.544667
2014-10-28      34 2014-10-28  13256462532      5.65  5.550000
2014-10-29      34 2014-10-29  11246050970      5.48  5.546667
2014-10-30      34 2014-10-30  14610354056      5.62  5.551333
2014-10-31      34 2014-10-31  16935147479      5.50  5.553333
2014-11-01      34 2014-11-01  10705199830      5.50  5.556000
2014-11-02      34 2014-11-02  12214346718      5.49  5.554667

[366 rows x 5 columns]
>>> help(pd.rolling_mean)
Help on function roll_mean in module pandas.algos:

roll_mean(arg, window, min_periods=None, freq=None, center=False, how=None, **kwargs)
    Moving mean.
    
    Parameters
    ----------
    arg : Series, DataFrame
    window : int
        Size of the moving window. This is the number of observations used for
        calculating the statistic.
    min_periods : int, default None
        Minimum number of observations in window required to have a value
        (otherwise result is NA).
    freq : string or DateOffset object, optional (default None)
        Frequency to conform the data to before computing the statistic. Specified
        as a frequency string or DateOffset object.
    center : boolean, default False
        Set the labels at the center of the window.
    how : string, default 'None'
        Method for down- or re-sampling
    
    Returns
    -------
    y : type of input argument
    
    Notes
    -----
    By default, the result is set to the right edge of the window. This can be
    changed to the center of the window by setting ``center=True``.
    
    The `freq` keyword is used to conform time series data to a specified
    frequency by resampling the data. This is done with the default parameters
    of :meth:`~pandas.Series.resample` (i.e. using the `mean`).

>>> import numpy
>>> import numpy as np
>>> v.raw_data_filled[v.raw_data_filled.itemid == 34].plot(style='k')
<matplotlib.axes._subplots.AxesSubplot object at 0x00000000323673C8>
>>> p = v.raw_data_filled[v.raw_data_filled.itemid == 34].plot(style='k')
>>> 
>>> import matplotlib as mp
>>> import matplotlib.pyplot as pp
>>> pp.show(p)
>>> p = v.raw_data_filled[v.raw_data_filled.itemid == 34].loc[:,'i_price'].plot(style='k')
>>> pp.show(p)
>>> p = v.raw_data_filled[v.raw_data_filled.itemid == 34].loc[:,['avgprice','i_price']].plot(style='k')
>>> pp.show(p)
>>> v.raw_data_filled['price_delta'] = v.raw_data_filled['avgprice'] - v.raw_data_filled['i_price']
>>> v.raw_data_filled[v.raw_data_filled.itemid == 34]
            itemid price_date       volume  avgprice   i_price  price_delta
price_date                                                                 
2013-11-02      34 2013-11-02  29112987907      4.75  4.808667    -0.058667
2013-11-03      34 2013-11-03  36693361984      4.78  4.808667    -0.028667
2013-11-04      34 2013-11-04  23069079781      4.78  4.808667    -0.028667
2013-11-05      34 2013-11-05  26005580179      4.80  4.808667    -0.008667
2013-11-06      34 2013-11-06  23654600552      4.79  4.808667    -0.018667
2013-11-07      34 2013-11-07  24645749948      4.81  4.808667     0.001333
2013-11-08      34 2013-11-08  24397879623      4.80  4.808667    -0.008667
2013-11-09      34 2013-11-09  31235106425      4.83  4.808667     0.021333
2013-11-10      34 2013-11-10  30529126145      4.81  4.808667     0.001333
2013-11-11      34 2013-11-11  22698778748      4.80  4.808667    -0.008667
2013-11-12      34 2013-11-12  22413630385      4.86  4.808667     0.051333
2013-11-13      34 2013-11-13  24357785596      4.87  4.808667     0.061333
2013-11-14      34 2013-11-14  22898083113      4.78  4.808667    -0.028667
2013-11-15      34 2013-11-15  25930441847      4.83  4.808667     0.021333
2013-11-16      34 2013-11-16  29777622031      4.84  4.808667     0.031333
2013-11-17      34 2013-11-17  25492688514      4.81  4.812667    -0.002667
2013-11-18      34 2013-11-18  23267308672      4.84  4.816667     0.023333
2013-11-19      34 2013-11-19  18702274437      4.82  4.819333     0.000667
2013-11-20      34 2013-11-20  29861761354      4.83  4.821333     0.008667
2013-11-21      34 2013-11-21  21055486896      4.81  4.822667    -0.012667
2013-11-22      34 2013-11-22  15471884772      4.80  4.822000    -0.022000
2013-11-23      34 2013-11-23  24830596182      4.79  4.821333    -0.031333
2013-11-24      34 2013-11-24  27364596015      4.80  4.819333    -0.019333
2013-11-25      34 2013-11-25  17866574436      4.76  4.816000    -0.056000
2013-11-26      34 2013-11-26  19727693721      4.76  4.813333    -0.053333
2013-11-27      34 2013-11-27  18264210919      4.76  4.806667    -0.046667
2013-11-28      34 2013-11-28  23969141777      4.76  4.799333    -0.039333
2013-11-29      34 2013-11-29  23008027938      4.76  4.798000    -0.038000
2013-11-30      34 2013-11-30  26238246428      4.76  4.793333    -0.033333
2013-12-01      34 2013-12-01  23291661308      4.76  4.788000    -0.028000
...            ...        ...          ...       ...       ...          ...
2014-10-04      34 2014-10-04  11964839000      5.46  5.465333    -0.005333
2014-10-05      34 2014-10-05  12179560833      5.48  5.465333     0.014667
2014-10-06      34 2014-10-06  11558176515      5.53  5.470000     0.060000
2014-10-07      34 2014-10-07  15251307675      5.55  5.480000     0.070000
2014-10-08      34 2014-10-08  10235833952      5.51  5.485333     0.024667
2014-10-09      34 2014-10-09  13070837708      5.53  5.484000     0.046000
2014-10-10      34 2014-10-10  12875202112      5.49  5.479333     0.010667
2014-10-11      34 2014-10-11  10122357991      5.51  5.482667     0.027333
2014-10-12      34 2014-10-12  12374422863      5.58  5.494667     0.085333
2014-10-13      34 2014-10-13  10307106850      5.57  5.506000     0.064000
2014-10-14      34 2014-10-14  10308307822      5.53  5.510000     0.020000
2014-10-15      34 2014-10-15  12071957971      5.55  5.514000     0.036000
2014-10-16      34 2014-10-16   7649868427      5.47  5.512667    -0.042667
2014-10-17      34 2014-10-17  11259645249      5.46  5.512000    -0.052000
2014-10-18      34 2014-10-18  12925536177      5.51  5.515333    -0.005333
2014-10-19      34 2014-10-19  13866506798      5.48  5.516667    -0.036667
2014-10-20      34 2014-10-20  11430195304      5.53  5.520000     0.010000
2014-10-21      34 2014-10-21   8655125843      5.50  5.518000    -0.018000
2014-10-22      34 2014-10-22   9166774536      5.50  5.514667    -0.014667
2014-10-23      34 2014-10-23  11889511146      5.54  5.516667     0.023333
2014-10-24      34 2014-10-24  11449260792      5.56  5.518667     0.041333
2014-10-25      34 2014-10-25  10979265898      5.60  5.526000     0.074000
2014-10-26      34 2014-10-26  13986878657      5.66  5.536000     0.124000
2014-10-27      34 2014-10-27  14510989613      5.71  5.544667     0.165333
2014-10-28      34 2014-10-28  13256462532      5.65  5.550000     0.100000
2014-10-29      34 2014-10-29  11246050970      5.48  5.546667    -0.066667
2014-10-30      34 2014-10-30  14610354056      5.62  5.551333     0.068667
2014-10-31      34 2014-10-31  16935147479      5.50  5.553333    -0.053333
2014-11-01      34 2014-11-01  10705199830      5.50  5.556000    -0.056000
2014-11-02      34 2014-11-02  12214346718      5.49  5.554667    -0.064667

[366 rows x 6 columns]
>>> v.raw_data_filled[v.raw_data_filled.itemid == 34].hist('price_delta', bins=20)
array([[<matplotlib.axes._subplots.AxesSubplot object at 0x000000000E391F28>]], dtype=object)
>>> ph = v.raw_data_filled[v.raw_data_filled.itemid == 34].hist('price_delta', bins=20)
>>> pp.show(ph)
>>> v.raw_data_filled['i_price'] = gf.apply(lambda x: pd.rolling_mean(x.interpolate().fillna(method='bfill'), 10).fillna(method='bfill'))
>>> v.raw_data_filled['price_delta'] = v.raw_data_filled['avgprice'] - v.raw_data_filled['i_price']
>>> ph = v.raw_data_filled[v.raw_data_filled.itemid == 34].hist('price_delta', bins=50)
>>> pp.show(ph)
>>> v.raw_data_filled['i_price'] = gf.apply(lambda x: pd.rolling_mean(x.interpolate().fillna(method='bfill'), 30).fillna(method='bfill'))
>>> v.raw_data_filled['price_delta'] = v.raw_data_filled['avgprice'] - v.raw_data_filled['i_price']
>>> ph = v.raw_data_filled[v.raw_data_filled.itemid == 34].hist('price_delta', bins=50)
>>> pp.show(ph)
>>> ph = v.raw_data_filled[v.raw_data_filled.itemid == 29668].hist('price_delta', bins=50)
>>> pp.show(ph)
Resetting execution engine
The Python REPL process has exited

In [1]: import pandas as pd

In [2]: import stat_script as s
Fetching item list from SDE: oceanus-1.0-105658
   0.3 Finished calculating convert.
Fetching market data ...
   0.3 Finished calculating raw_query.
  48.2 Finished calculating raw_data.
  48.3 Finished calculating expected_dates.
  73.3 Finished calculating raw_data_filled.
  73.3 Finished calculating market_data_groups.
Crunching Stats
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-2-960109fb6cec> in <module>()
----> 1 import stat_script as s

D:\Repos\EVE_MarketAnalyzer\stat_script.py in <module>()
    426         main()
    427 else:
--> 428         main()
    429 
    430         #for region in trunc_region_list.iterkeys():

D:\Repos\EVE_MarketAnalyzer\stat_script.py in main(region)
    390         market_data_groups = fetch_market_data(region=region)
    391         V.market_data_groups = market_data_groups
--> 392         market_sigmas = market_report(market_data_groups, report_sigmas, region=region)
    393         V.market_sigmas = market_sigmas
    394 	flaged_items_vol = volume_sigma_report(

D:\Repos\EVE_MarketAnalyzer\stat_script.py in market_report(data_groups, report_sigmas, region, debug)
    125                 for sigma in report_sigmas
    126 		]
--> 127         stats = data_groups.agg(standard_stats + sigma_stats)
    128         V.stats = stats
    129         # slice the data and rename the columns so it's close to previous data.

D:\Anaconda\lib\site-packages\pandas\core\generic.pyc in __getattr__(self, name)
   1934                 return self[name]
   1935             raise AttributeError("'%s' object has no attribute '%s'" %
-> 1936                                  (type(self).__name__, name))
   1937 
   1938     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'agg'

In [3]: import stat_script as s
Fetching item list from SDE: oceanus-1.0-105658
   0.1 Finished calculating convert.
Fetching market data ...
   0.1 Finished calculating raw_query.
  49.0 Finished calculating raw_data.
  49.0 Finished calculating expected_dates.
  74.5 Finished calculating raw_data_filled.
  74.6 Finished calculating market_data_groups.
Crunching Stats
 193.3 Finished calculating stats.
 193.5 Finished calculating market_sigmas.
 194.2 Finished calculating vol_means.

In [4]: v = s.V

In [5]: v.stats
Out[5]: 
       volume                                                        \
            N         MIN           P10           MED           AVG   
itemid                                                                
18        400     3875802  9.931418e+06  2.082658e+07  2.477212e+07   
19        400           0  2.216000e+02  1.210000e+03  3.527410e+03   
20        400           0  1.297635e+06  2.519967e+06  3.045430e+06   
21        400         854  1.301500e+04  5.407450e+04  7.299616e+04   
22        400        1247  6.220800e+03  2.112150e+04  2.813307e+04   
34        400  6422449079  1.102587e+10  2.210497e+10  2.147218e+10   
35        400  1538021810  2.505883e+09  4.633482e+09  4.584910e+09   
36        400   640981265  9.395832e+08  1.537210e+09  1.559880e+09   
37        400   103925510  1.821330e+08  3.041223e+08  3.094364e+08   
38        400    26201277  6.139673e+07  8.898491e+07  9.018913e+07   
39        400    10148009  2.349299e+07  3.547153e+07  3.811978e+07   
40        400     4775428  1.218125e+07  1.785410e+07  1.953238e+07   
41        400          50  5.333900e+03  7.795400e+04  1.697447e+05   
42        400         273  5.288000e+02  9.585000e+02  2.185375e+03   
43        400        5959  9.990720e+04  6.713175e+05  8.335012e+05   
44        400      199842  7.484268e+05  1.113336e+06  1.180098e+06   
45        400           0  7.391000e+02  1.230000e+03  3.125755e+03   
178       400       13965  6.319730e+04  2.269800e+05  6.001354e+05   
179       400       24019  5.375480e+04  1.628595e+05  6.017023e+05   
180       400           0  4.856340e+04  1.263300e+05  2.085321e+05   
181       400       23513  7.708890e+04  2.137315e+05  4.856736e+05   
182       400       25500  9.639640e+04  2.864355e+05  5.848112e+05   
183       400       67246  2.314859e+05  7.637585e+05  1.778849e+06   
184       400      121667  3.344799e+05  1.062814e+06  2.178004e+06   
185       400           0  6.930824e+05  1.724002e+06  3.159993e+06   
186       400       12650  4.974250e+04  1.969265e+05  3.735301e+05   
187       400           0  5.021640e+04  1.568610e+05  3.096827e+05   
188       400       13224  4.902620e+04  1.763230e+05  3.144795e+05   
189       400       19902  1.172612e+05  4.262900e+05  6.436585e+05   
190       400       46947  1.930516e+05  4.948605e+05  7.302463e+05   
...       ...         ...           ...           ...           ...   
34050     400           0  0.000000e+00  0.000000e+00  1.700000e-01   
34051     400           0  0.000000e+00  0.000000e+00  1.325000e-01   
34056     400           0  0.000000e+00  0.000000e+00  2.075000e-01   
34057     400           0  0.000000e+00  0.000000e+00  1.275000e-01   
34059     400           0  0.000000e+00  0.000000e+00  1.175000e-01   
34061     400           0  0.000000e+00  0.000000e+00  1.275000e-01   
34062     400           0  0.000000e+00  0.000000e+00  8.500000e-02   
34064     400           0  0.000000e+00  0.000000e+00  1.375000e-01   
34065     400           0  0.000000e+00  0.000000e+00  1.950000e-01   
34068     400           0  0.000000e+00  0.000000e+00  1.500000e-01   
34070     400           0  0.000000e+00  0.000000e+00  7.500000e-02   
34072     400           0  0.000000e+00  0.000000e+00  3.500000e-02   
34073     400           0  0.000000e+00  0.000000e+00  1.400000e-01   
34074     400           0  0.000000e+00  0.000000e+00  1.825000e-01   
34118     400           0  0.000000e+00  0.000000e+00  2.625000e-01   
34122     400           0  0.000000e+00  0.000000e+00  3.135000e+00   
34124     400           0  0.000000e+00  0.000000e+00  3.495000e+00   
34126     400           0  0.000000e+00  0.000000e+00  4.275000e-01   
34132     400           0  0.000000e+00  0.000000e+00  3.862500e+00   
34133     400           0  0.000000e+00  0.000000e+00  5.210000e+00   
34156     400           0  0.000000e+00  0.000000e+00  1.125000e-01   
34157     400           0  0.000000e+00  0.000000e+00  5.750000e-02   
34158     400           0  0.000000e+00  0.000000e+00  6.000000e-02   
34159     400           0  0.000000e+00  0.000000e+00  1.125000e-01   
34160     400           0  0.000000e+00  0.000000e+00  2.975000e-01   
34169     400           0  0.000000e+00  0.000000e+00  6.000000e-02   
34170     400           0  0.000000e+00  0.000000e+00  2.000000e-02   
34171     400           0  0.000000e+00  0.000000e+00  2.500000e-02   
34172     400           0  0.000000e+00  0.000000e+00  6.500000e-02   
34173     400           0  0.000000e+00  0.000000e+00  3.775000e-01   

                                                                             \
                 P90          MAX           STD         SN2P5         SN2P0   
itemid                                                                        
18      4.376652e+07    130717578  1.471669e+07  6.037771e+06  7.134352e+06   
19      1.048730e+04        59892  6.094957e+03  4.776565e-01  3.954605e+01   
20      5.367375e+06     17211306  2.106487e+06  6.364759e+05  8.508585e+05   
21      1.520674e+05       439907  6.546319e+04  2.646859e+03  3.895026e+03   
22      5.777210e+04       214052  2.442568e+04  1.588175e+03  2.997117e+03   
34      3.009364e+10  70739309589  7.985222e+09  7.613543e+09  8.544781e+09   
35      6.506676e+09  10138178126  1.560928e+09  1.624541e+09  1.883599e+09   
36      2.141692e+09   3685797317  4.761049e+08  6.956787e+08  7.628769e+08   
37      4.358935e+08    716042085  1.011229e+08  1.282314e+08  1.474527e+08   
38      1.204078e+08    167774017  2.318433e+07  4.133312e+07  4.861984e+07   
39      5.716196e+07    140878739  1.548091e+07  1.412646e+07  1.862756e+07   
40      2.820795e+07     76990015  7.510210e+06  7.818207e+06  9.946344e+06   
41      3.500814e+05      3009350  3.098357e+05  1.258213e+02  2.138651e+02   
42      3.569700e+03        50934  4.981629e+03  3.387766e+02  4.291546e+02   
43      1.817413e+06      3712128  6.676995e+05  1.039924e+04  3.336294e+04   
44      1.684259e+06      3265411  4.042145e+05  5.049656e+05  6.035847e+05   
45      3.122400e+03       337580  1.757067e+04  0.000000e+00  5.220773e+02   
178     1.318030e+06     28965718  1.659674e+06  2.807132e+04  3.752256e+04   
179     1.003069e+06     21651636  2.060098e+06  2.663402e+04  3.142391e+04   
180     4.687295e+05      1701470  2.308019e+05  2.110200e+04  2.821178e+04   
181     1.017938e+06     27276720  1.478773e+06  2.750198e+04  4.188462e+04   
182     1.175175e+06     13927848  1.232957e+06  4.675019e+04  5.653996e+04   
183     2.900414e+06     42620887  4.465564e+06  9.742758e+04  1.403277e+05   
184     4.069795e+06     30690857  3.895389e+06  1.431879e+05  1.907823e+05   
185     6.441231e+06     47690308  4.582728e+06  3.182790e+05  4.153983e+05   
186     9.466780e+05      4441016  4.960091e+05  2.579453e+04  3.070648e+04   
187     6.880935e+05      5000403  4.532166e+05  1.603446e+04  2.218552e+04   
188     6.966447e+05      5264080  4.798435e+05  1.980824e+04  2.801801e+04   
189     1.388386e+06     12653208  8.877348e+05  3.198959e+04  5.030927e+04   
190     1.507344e+06      5959894  7.490370e+05  8.123680e+04  1.235276e+05   
...              ...          ...           ...           ...           ...   
34050   0.000000e+00            5  6.140380e-01  0.000000e+00  0.000000e+00   
34051   0.000000e+00            5  5.619013e-01  0.000000e+00  0.000000e+00   
34056   1.000000e+00            9  8.283472e-01  0.000000e+00  0.000000e+00   
34057   0.000000e+00            5  5.214629e-01  0.000000e+00  0.000000e+00   
34059   0.000000e+00            9  7.483943e-01  0.000000e+00  0.000000e+00   
34061   0.000000e+00            6  5.495441e-01  0.000000e+00  0.000000e+00   
34062   0.000000e+00            4  4.280573e-01  0.000000e+00  0.000000e+00   
34064   0.000000e+00            6  6.119886e-01  0.000000e+00  0.000000e+00   
34065   1.000000e-01            5  6.693992e-01  0.000000e+00  0.000000e+00   
34068   0.000000e+00            8  7.374684e-01  0.000000e+00  0.000000e+00   
34070   0.000000e+00            2  3.075899e-01  0.000000e+00  0.000000e+00   
34072   0.000000e+00            3  2.427392e-01  0.000000e+00  0.000000e+00   
34073   0.000000e+00           10  8.845088e-01  0.000000e+00  0.000000e+00   
34074   1.000000e+00            4  5.958871e-01  0.000000e+00  0.000000e+00   
34118   0.000000e+00           17  1.679478e+00  0.000000e+00  0.000000e+00   
34122   1.400000e+01           66  8.428486e+00  0.000000e+00  0.000000e+00   
34124   1.600000e+01           50  9.122116e+00  0.000000e+00  0.000000e+00   
34126   0.000000e+00           17  1.693196e+00  0.000000e+00  0.000000e+00   
34132   1.500000e+01           93  1.069624e+01  0.000000e+00  0.000000e+00   
34133   2.510000e+01           92  1.321315e+01  0.000000e+00  0.000000e+00   
34156   0.000000e+00            3  4.640929e-01  0.000000e+00  0.000000e+00   
34157   0.000000e+00            2  2.727264e-01  0.000000e+00  0.000000e+00   
34158   0.000000e+00            6  4.145233e-01  0.000000e+00  0.000000e+00   
34159   0.000000e+00            7  6.251566e-01  0.000000e+00  0.000000e+00   
34160   0.000000e+00           12  1.188497e+00  0.000000e+00  0.000000e+00   
34169   0.000000e+00            4  3.265986e-01  0.000000e+00  0.000000e+00   
34170   0.000000e+00            2  1.722620e-01  0.000000e+00  0.000000e+00   
34171   0.000000e+00            2  1.856372e-01  0.000000e+00  0.000000e+00   
34172   0.000000e+00            3  3.256380e-01  0.000000e+00  0.000000e+00   
34173   0.000000e+00           10  1.371019e+00  0.000000e+00  0.000000e+00   

            ...           price_delta                              \
            ...                 SN2P0         SN1P5         SN1P0   
itemid      ...                                                     
18          ...             -3.503843 -2.196150e+00 -1.368747e+00   
19          ...          -1499.610451 -9.365239e+02 -5.733414e+02   
20          ...            -27.289603 -1.732780e+01 -1.074766e+01   
21          ...           -144.846837 -7.457605e+01 -3.353837e+01   
22          ...           -414.600941 -2.242088e+02 -1.185919e+02   
34          ...             -0.175255 -8.200000e-02 -4.712445e-02   
35          ...             -0.369255 -2.366711e-01 -1.350000e-01   
36          ...             -1.458176 -1.080575e+00 -5.711245e-01   
37          ...             -4.093274 -3.304726e+00 -2.219871e+00   
38          ...            -25.660586 -1.763775e+01 -9.759201e+00   
39          ...            -32.966410 -2.418961e+01 -1.676518e+01   
40          ...            -62.729489 -4.951782e+01 -3.715191e+01   
41          ...            -15.069264 -1.186237e+01 -8.785019e+00   
42          ...          -1884.389507 -9.768976e+02 -3.868182e+02   
43          ...            -13.753175 -1.085154e+01 -8.129862e+00   
44          ...           -604.723598 -3.214493e+02 -1.629010e+02   
45          ...            -19.175071 -1.018327e+01 -5.595762e+00   
178         ...             -3.311401 -1.586836e+00 -9.287467e-01   
179         ...             -4.992215 -3.267012e+00 -1.776613e+00   
180         ...             -2.017601 -1.603048e+00 -1.098849e+00   
181         ...             -6.686294 -2.957671e+00 -1.539124e+00   
182         ...             -5.990135 -3.131082e+00 -1.501747e+00   
183         ...            -11.466215 -8.234669e+00 -4.309925e+00   
184         ...             -8.620754 -5.718779e+00 -3.659862e+00   
185         ...             -5.816740 -4.312120e+00 -2.814379e+00   
186         ...             -5.906636 -3.210807e+00 -1.658982e+00   
187         ...             -9.774064 -7.855276e+00 -3.955548e+00   
188         ...            -14.877413 -1.131539e+01 -6.017223e+00   
189         ...            -26.093241 -1.939528e+01 -9.517757e+00   
190         ...            -18.023328 -1.307318e+01 -8.544187e+00   
...         ...                   ...           ...           ...   
34050       ...                   NaN -1.275230e+07 -8.871988e+06   
34051       ...                   NaN -1.723528e+07 -1.377886e+07   
34056       ...                   NaN -1.508237e+08 -1.035767e+08   
34057       ...                   NaN -1.124916e+08 -7.500662e+07   
34059       ...                   NaN -1.476772e+08 -1.206190e+08   
34061       ...                   NaN -1.036010e+08 -8.754014e+07   
34062       ...                   NaN -1.602960e+08 -1.016037e+08   
34064       ...                   NaN -8.199212e+07 -5.395162e+07   
34065       ...                   NaN -6.259454e+07 -4.122806e+07   
34068       ...                   NaN -9.782238e+07 -8.866202e+07   
34070       ...                   NaN -1.334287e+08 -4.840922e+07   
34072       ...                   NaN           NaN -5.654899e+07   
34073       ...                   NaN           NaN -1.281548e+08   
34074       ...      -85096782.030445 -4.172415e+07 -3.178971e+07   
34118       ...                   NaN -4.037062e+08 -3.293377e+08   
34122       ...      -42418225.033489 -3.704489e+07 -7.050101e+06   
34124       ...      -38026975.949021 -2.729473e+07 -1.955785e+07   
34126       ...                   NaN -1.923274e+08 -1.312846e+08   
34132       ...      -25415466.413915 -2.480172e+07 -1.695310e+07   
34133       ...      -11303863.972535 -6.643200e+06 -2.549891e+06   
34156       ...                   NaN -6.170865e+07 -4.339857e+07   
34157       ...                   NaN -1.216409e+08 -9.664834e+07   
34158       ...                   NaN           NaN -5.801298e+07   
34159       ...                   NaN -8.226307e+07 -5.799726e+07   
34160       ...                   NaN -1.055503e+08 -7.145012e+07   
34169       ...                   NaN -4.502264e+07 -3.931486e+07   
34170       ...                   NaN           NaN           NaN   
34171       ...                   NaN           NaN  5.139284e+05   
34172       ...                   NaN -4.320422e+07 -3.818390e+07   
34173       ...                   NaN -9.118069e+07 -6.544970e+07   

                                                                      \
               SN0P5             S0P0             S0P5          S1P0   
itemid                                                                 
18     -4.480111e-01         0.271000         0.977374  1.638249e+00   
19     -2.106540e+02       -31.369000        96.612960  4.087787e+02   
20     -5.173762e+00        -0.164500         4.484206  1.077637e+01   
21     -1.438713e+01        -4.139000         5.565291  4.598193e+01   
22     -7.551174e+01       -33.257000         5.011820  1.400496e+02   
34     -2.100000e-02         0.005000         0.027000  6.724890e-02   
35     -6.367036e-02        -0.016000         0.039000  1.300000e-01   
36     -1.360332e-01         0.139000         0.522011  1.145467e+00   
37     -1.117022e+00        -0.115000         0.741418  1.910867e+00   
38     -5.602814e+00        -0.535000         3.524825  7.714476e+00   
39     -8.833909e+00        -2.933000         3.007853  1.030082e+01   
40     -2.423313e+01       -11.355000         0.869529  1.567924e+01   
41     -5.735111e+00        -3.089000         0.090972  1.364093e+01   
42     -2.211897e+02      -104.092000        -3.946357  4.258619e+02   
43     -4.746011e+00        -1.863000         0.947407  6.153231e+00   
44     -8.093812e+01        -8.129000        61.839665  1.538299e+02   
45     -1.700000e-02         0.001000         0.026809  5.985544e-01   
178    -4.810111e-01        -0.077000         0.218407  6.243734e-01   
179    -8.520776e-01        -0.191000         0.350396  1.072605e+00   
180    -6.980000e-01        -0.142000         0.472979  8.101324e-01   
181    -7.670222e-01        -0.113000         0.405044  1.174871e+00   
182    -7.226925e-01         0.002000         0.301341  9.827423e-01   
183    -2.151000e+00        -0.615000         0.811715  3.668347e+00   
184    -2.082407e+00        -0.553000         1.037352  2.655436e+00   
185    -1.626979e+00        -0.401000         0.465747  2.334690e+00   
186    -8.027147e-01        -0.107000         0.573352  1.298124e+00   
187    -1.819916e+00        -0.472000         1.250515  2.997982e+00   
188    -2.643011e+00        -0.715000         1.556421  5.299587e+00   
189    -4.380100e+00         0.873000         3.287385  6.846779e+00   
190    -3.553343e+00        -0.038000         2.309244  7.011236e+00   
...              ...              ...              ...           ...   
34050  -2.915240e+06   -174128.000000   1596903.948195  2.986672e+06   
34051  -5.563920e+06   -644763.428571    811995.225185  2.355847e+06   
34056  -7.010072e+07 -31205000.000000   9811906.831037  3.984304e+07   
34057  -4.979842e+07 -12325209.600000  22729653.599750  8.015201e+07   
34059  -1.087119e+08 -58754281.600000 -24138308.572505 -1.977870e+06   
34061  -5.527732e+07 -27440212.000000   2535106.540105  3.346264e+07   
34062  -6.064824e+07  -4944739.200000  61626720.535527  7.062557e+07   
34064  -3.036981e+07  -8260000.000000   2954297.646387  5.765397e+06   
34065  -1.817278e+07  -2367084.000000   8548568.159111  2.892440e+07   
34068  -4.918236e+07 -11100000.000000  25606564.392823  8.181242e+07   
34070  -2.029186e+07         0.000000  15458471.041267  3.005385e+07   
34072  -5.517542e+06   6375000.000000  34802559.645020  5.803440e+07   
34073  -1.088223e+08 -48965006.900000 -12825236.460260 -3.436434e+05   
34074  -1.584799e+07  -3496584.800000  16679735.854484  5.233667e+07   
34118  -2.729628e+08 -94658355.200000  16442413.643313  5.977055e+08   
34122  -3.533740e+06   -848066.600000     -9867.034428  6.771216e+05   
34124  -9.164288e+06  -4837306.000000   1369995.320050  4.518810e+06   
34126  -6.686188e+07   5225060.800000  66545534.941749  9.617056e+07   
34132  -8.970593e+06  -5756021.600000  -2669284.323054  1.261248e+07   
34133   2.772457e+06   7968755.200000  14719773.761376  2.258120e+07   
34156  -2.565934e+07         0.000000   7266505.097087  1.745103e+07   
34157  -3.917014e+07 -12750000.000000  16357782.386914  4.104909e+07   
34158  -4.354852e+07 -21450000.000000  -3072520.822690  9.610018e+06   
34159  -4.688975e+07 -14750000.000000   -611178.127766  3.424206e+07   
34160  -4.619024e+07  -8620657.000000   3459682.198141  2.955019e+07   
34169  -3.133493e+07         0.000000  14366015.992012  2.736035e+07   
34170  -6.173716e+06   5600000.000000  24462056.884732           NaN   
34171   7.497535e+06  27093894.400000  48756815.747037  7.254545e+07   
34172  -2.654237e+07  -9901184.533333  -1507599.673802  1.868631e+07   
34173  -2.178377e+07  -8793356.800000  -1233328.989998  2.183186e+07   

                                                     
                S1P5             S2P0          S2P5  
itemid                                               
18      2.456547e+00         4.229284      6.502822  
19      1.208993e+03      2007.218991   3394.905882  
20      2.052271e+01        35.316268     52.780304  
21      8.087470e+01       151.993626    183.049034  
22      2.836566e+02       581.558127    793.381937  
34      1.258904e-01         0.178382      0.201735  
35      2.667808e-01         0.379147      0.586469  
36      2.063356e+00         3.100431      4.735095  
37      3.314781e+00         4.686186      5.597272  
38      1.274864e+01        19.502646     23.394170  
39      2.202121e+01        41.417880     89.179481  
40      2.943616e+01        47.363975     70.454248  
41      2.433801e+01        26.490088     28.926156  
42      8.812652e+02      1423.858589  10044.370378  
43      1.689728e+01        32.156056     45.075400  
44      2.306192e+02       497.144865    964.893136  
45      1.162237e+01        32.836355     56.189640  
178     1.082534e+00         2.144400      4.299551  
179     2.367724e+00         6.311283     12.367748  
180     1.353084e+00         2.106648      5.590197  
181     2.301698e+00         4.787029      7.478244  
182     2.280424e+00         5.769489     15.849126  
183     9.583364e+00        18.914961     25.082175  
184     7.527828e+00        12.472185     23.010877  
185     4.730276e+00         8.462061     21.765787  
186     2.243972e+00         5.963735     13.910286  
187     6.194852e+00        12.751664     17.965837  
188     8.506890e+00        26.792047     40.707488  
189     1.910692e+01        35.699510     44.716053  
190     1.268577e+01        22.133647     39.970922  
...              ...              ...           ...  
34050   3.992373e+06              NaN           NaN  
34051   5.483221e+06              NaN           NaN  
34056   7.156321e+07              NaN           NaN  
34057   9.354427e+07              NaN           NaN  
34059   8.144349e+06              NaN           NaN  
34061   5.735563e+07              NaN           NaN  
34062   9.696809e+07              NaN           NaN  
34064   2.343607e+07              NaN           NaN  
34065   4.875388e+07              NaN           NaN  
34068   1.209325e+08              NaN           NaN  
34070   5.221824e+07              NaN           NaN  
34072            NaN              NaN           NaN  
34073            NaN              NaN           NaN  
34074   7.968139e+07  91306134.814579           NaN  
34118   1.176292e+09              NaN           NaN  
34122   2.623003e+06   7494953.871825           NaN  
34124   2.577789e+07  44697127.878695           NaN  
34126   1.454626e+08              NaN           NaN  
34132   2.937398e+07  38469726.392778           NaN  
34133   2.728506e+07  42923774.996077           NaN  
34156   3.227139e+07              NaN           NaN  
34157   5.194020e+07              NaN           NaN  
34158            NaN              NaN           NaN  
34159   4.398472e+07              NaN           NaN  
34160   1.289805e+08              NaN           NaN  
34169   4.187498e+07              NaN           NaN  
34170            NaN              NaN           NaN  
34171            NaN              NaN           NaN  
34172   2.501305e+07              NaN           NaN  
34173   1.201281e+08              NaN           NaN  

[7377 rows x 57 columns]

In [6]: v.loc[[34, 29668]]
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-6-edf56bd3de6c> in <module>()
----> 1 v.loc[[34, 29668]]

AttributeError: 'AttrLogger' object has no attribute 'loc'

In [7]: v.stats.loc[[34, 29668]]
Out[7]: 
       volume                                                        \
            N         MIN           P10           MED           AVG   
itemid                                                                
34        400  6422449079  1.102587e+10  2.210497e+10  2.147218e+10   
29668     400        1798  2.234100e+03  2.735000e+03  2.818418e+03   

                                                                             \
                 P90          MAX           STD         SN2P5         SN2P0   
itemid                                                                        
34      3.009364e+10  70739309589  7.985222e+09  7.613543e+09  8.544781e+09   
29668   3.492600e+03         6161  5.363317e+02  1.908478e+03  2.009232e+03   

             ...             price_delta                                   \
             ...                   SN2P0            SN1P5           SN1P0   
itemid       ...                                                            
34           ...               -0.175255        -0.082000       -0.047124   
29668        ...        -17143467.130986 -11402992.498265 -4379402.937880   

                                                                    \
               SN0P5         S0P0            S0P5             S1P0   
itemid                                                               
34         -0.021000        0.005        0.027000         0.067249   
29668  -58840.512624  3183091.200  6948768.438615  10426136.917798   

                                                           
                   S1P5             S2P0             S2P5  
itemid                                                     
34             0.125890         0.178382         0.201735  
29668   16843606.243605  23062762.387397  31915408.491362  

[2 rows x 57 columns]

In [8]: v.stats.loc[34]
Out[8]: 
volume       N        4.000000e+02
             MIN      6.422449e+09
             P10      1.102587e+10
             MED      2.210497e+10
             AVG      2.147218e+10
             P90      3.009364e+10
             MAX      7.073931e+10
             STD      7.985222e+09
             SN2P5    7.613543e+09
             SN2P0    8.544781e+09
             SN1P5    1.012901e+10
             SN1P0    1.209747e+10
             SN0P5    1.827262e+10
             S0P0     2.210497e+10
             S0P5     2.513745e+10
             S1P0     2.832446e+10
             S1P5     3.239485e+10
             S2P0     3.766066e+10
             S2P5     4.724180e+10
avgprice     N        4.000000e+02
             MIN      4.720000e+00
             P10      4.760000e+00
             MED      5.285000e+00
             AVG      5.276700e+00
             P90      6.091000e+00
             MAX      6.440000e+00
             STD      4.663215e-01
             SN2P5    4.720000e+00
             SN2P0    4.730000e+00
             SN1P5    4.750000e+00
             SN1P0    4.780000e+00
             SN0P5    4.880000e+00
             S0P0     5.285000e+00
             S0P5     5.468935e+00
             S1P0     5.796966e+00
             S1P5     6.173439e+00
             S2P0     6.238454e+00
             S2P5     6.335670e+00
price_delta  N        3.910000e+02
             MIN     -3.400000e-01
             P10     -6.210000e-02
             MED      6.500000e-03
             AVG      8.317136e-03
             P90      1.120000e-01
             MAX      8.520000e-01
             STD      8.678711e-02
             SN2P5   -2.697823e-01
             SN2P0   -1.752549e-01
             SN1P5   -8.200000e-02
             SN1P0   -4.712445e-02
             SN0P5   -2.100000e-02
             S0P0     5.000000e-03
             S0P5     2.700000e-02
             S1P0     6.724890e-02
             S1P5     1.258904e-01
             S2P0     1.783823e-01
             S2P5     2.017347e-01
Name: 34, Length: 57, dtype: float64

In [9]: v.stats.loc[34].loc(['volume','price_delta'])
Out[9]: <pandas.core.indexing._LocIndexer at 0x1ad70da0>

In [10]: v.stats.loc[34,['volume','price_delta']]
Out[10]: 
volume       N        4.000000e+02
             MIN      6.422449e+09
             P10      1.102587e+10
             MED      2.210497e+10
             AVG      2.147218e+10
             P90      3.009364e+10
             MAX      7.073931e+10
             STD      7.985222e+09
             SN2P5    7.613543e+09
             SN2P0    8.544781e+09
             SN1P5    1.012901e+10
             SN1P0    1.209747e+10
             SN0P5    1.827262e+10
             S0P0     2.210497e+10
             S0P5     2.513745e+10
             S1P0     2.832446e+10
             S1P5     3.239485e+10
             S2P0     3.766066e+10
             S2P5     4.724180e+10
price_delta  N        3.910000e+02
             MIN     -3.400000e-01
             P10     -6.210000e-02
             MED      6.500000e-03
             AVG      8.317136e-03
             P90      1.120000e-01
             MAX      8.520000e-01
             STD      8.678711e-02
             SN2P5   -2.697823e-01
             SN2P0   -1.752549e-01
             SN1P5   -8.200000e-02
             SN1P0   -4.712445e-02
             SN0P5   -2.100000e-02
             S0P0     5.000000e-03
             S0P5     2.700000e-02
             S1P0     6.724890e-02
             S1P5     1.258904e-01
             S2P0     1.783823e-01
             S2P5     2.017347e-01
Name: 34, dtype: float64

In [11]: v.raw_data_filled.groupby('itemid').tail(366)
Out[11]: 
         itemid price_date    volume      avgprice   price_delta
34           18 2013-11-02  39381609  4.512000e+01 -3.133000e+00
35           18 2013-11-03  42961573  4.506000e+01 -2.724000e+00
36           18 2013-11-04  12704806  4.905000e+01  1.261000e+00
37           18 2013-11-05  49553044  5.000000e+01  2.198000e+00
38           18 2013-11-06  13980435  4.604000e+01 -1.374000e+00
39           18 2013-11-07  18976154  4.930000e+01  1.856000e+00
40           18 2013-11-08  16608642  4.941000e+01  1.631000e+00
41           18 2013-11-09  15067572  4.946000e+01  1.734000e+00
42           18 2013-11-10  18090347  4.995000e+01  2.111000e+00
43           18 2013-11-11  20436689  4.650000e+01 -1.489000e+00
44           18 2013-11-12  15752480  5.046000e+01  1.937000e+00
45           18 2013-11-13   9454508  5.081000e+01  1.712000e+00
46           18 2013-11-14  16649091  5.001000e+01  8.160000e-01
47           18 2013-11-15   9675592  5.199000e+01  2.597000e+00
48           18 2013-11-16  17230584  4.516000e+01 -4.145000e+00
49           18 2013-11-17  33862768  5.500000e+01  5.125000e+00
50           18 2013-11-18  30822756  5.250000e+01  2.316000e+00
51           18 2013-11-19  11289062  5.395000e+01  3.317000e+00
52           18 2013-11-20  29608770  5.413000e+01  3.079000e+00
53           18 2013-11-21  15104457  5.422000e+01  2.397000e+00
54           18 2013-11-22  46956539  5.424000e+01  2.039000e+00
55           18 2013-11-23  17279149  5.455000e+01  1.975000e+00
56           18 2013-11-24  22230750  5.437000e+01  1.359000e+00
57           18 2013-11-25  21320555  5.436000e+01  1.112000e+00
58           18 2013-11-26  14662851  5.451000e+01  3.270000e-01
59           18 2013-11-27  30840049  5.437000e+01  2.500000e-01
60           18 2013-11-28  11619466  5.377000e+01 -4.770000e-01
61           18 2013-11-29  41791215  5.385000e+01 -3.870000e-01
62           18 2013-11-30  18739456  5.190000e+01 -2.114000e+00
63           18 2013-12-01  25650792  5.381000e+01 -1.630000e-01
...         ...        ...       ...           ...           ...
2950770   34173 2014-10-04         0           NaN           NaN
2950771   34173 2014-10-05         5  3.008000e+08  1.233259e+08
2950772   34173 2014-10-06         4  2.425000e+08  4.577583e+07
2950773   34173 2014-10-07         3  2.213333e+08  7.475822e+06
2950774   34173 2014-10-08        10  2.109096e+08 -1.903887e+07
2950775   34173 2014-10-09         5  1.930000e+08 -5.124847e+07
2950776   34173 2014-10-10         7  1.634286e+08 -9.216275e+07
2950777   34173 2014-10-11         5  1.402800e+08 -1.132143e+08
2950778   34173 2014-10-12         5  1.431000e+08 -8.503766e+07
2950779   34173 2014-10-13         7  8.800002e+07 -1.145626e+08
2950780   34173 2014-10-14         6  1.065000e+08 -7.448516e+07
2950781   34173 2014-10-15         5  1.038000e+08 -5.748515e+07
2950782   34173 2014-10-16         3  8.100000e+07 -6.413515e+07
2950783   34173 2014-10-17         4  6.382500e+07 -6.555932e+07
2950784   34173 2014-10-18         6  1.100000e+08 -9.293359e+06
2950785   34173 2014-10-19         3  1.013333e+08 -8.793357e+06
2950786   34173 2014-10-20         2  1.285000e+08  2.186616e+07
2950787   34173 2014-10-21         2  1.010540e+08 -1.657228e+06
2950788   34173 2014-10-22         7  9.475858e+07 -3.118518e+06
2950789   34173 2014-10-23         4  1.227750e+08  2.142041e+07
2950790   34173 2014-10-24         5  8.602000e+07 -1.328659e+07
2950791   34173 2014-10-25         3  9.133334e+07 -6.726590e+06
2950792   34173 2014-10-26         6  7.576666e+07 -2.176993e+07
2950793   34173 2014-10-27         4  8.025000e+07 -1.892909e+07
2950794   34173 2014-10-28         3  7.366666e+07 -2.187909e+07
2950795   34173 2014-10-29         6  9.333334e+07 -1.412422e+06
2950796   34173 2014-10-30         3  8.233340e+07 -7.795698e+06
2950797   34173 2014-10-31         8  6.900009e+07 -1.792362e+07
2950798   34173 2014-11-01         3  7.966670e+07 -5.747822e+06
2950799   34173 2014-11-02         5  9.140000e+07  9.122982e+06

[2699982 rows x 5 columns]


In [12]: v.stats.loc[29668,['volume','price_delta']]
Out[12]: 
volume       N             400.000000
             MIN          1798.000000
             P10          2234.100000
             MED          2735.000000
             AVG          2818.417500
             P90          3492.600000
             MAX          6161.000000
             STD           536.331705
             SN2P5        1908.477656
             SN2P0        2009.231908
             SN1P5        2156.497173
             SN1P0        2345.303446
             SN0P5        2537.425912
             S0P0         2735.000000
             S0P5         2969.787044
             S1P0         3253.358644
             S1P5         3714.439267
             S2P0         4085.845395
             S2P5         4640.712010
price_delta  N             391.000000
             MIN     -32959296.000000
             P10      -7989368.960000
             MED       3382576.000000
             AVG       3156840.478772
             P90      16122918.400000
             MAX      40290374.400000
             STD       9484471.510733
             SN2P5   -23190928.548734
             SN2P0   -17143467.130986
             SN1P5   -11402992.498265
             SN1P0    -4379402.937880
             SN0P5      -58840.512624
             S0P0      3183091.200000
             S0P5      6948768.438615
             S1P0     10426136.917798
             S1P5     16843606.243605
             S2P0     23062762.387397
             S2P5     31915408.491362
Name: 29668, dtype: float64

In [13]: 10d = v.market_data_groups.get_group(29668).tail(10).mean()
  File "<ipython-input-13-87e5c6606b24>", line 1
    10d = v.market_data_groups.get_group(29668).tail(10).mean()
      ^
SyntaxError: invalid syntax


In [14]: plex10d = v.market_data_groups.get_group(29668).tail(10).mean()

In [15]: plex10d
Out[15]: 
itemid         2.966800e+04
volume         2.616800e+03
avgprice       8.506878e+08
price_delta    8.038709e+06
dtype: float64

In [16]: plexstats = v.stats.loc[29668,['volume','price_delta']]

In [17]: plexstats = v.stats.loc[29668,['price_delta']]

In [18]: plexstats
Out[18]: 
price_delta  N             391.000000
             MIN     -32959296.000000
             P10      -7989368.960000
             MED       3382576.000000
             AVG       3156840.478772
             P90      16122918.400000
             MAX      40290374.400000
             STD       9484471.510733
             SN2P5   -23190928.548734
             SN2P0   -17143467.130986
             SN1P5   -11402992.498265
             SN1P0    -4379402.937880
             SN0P5      -58840.512624
             S0P0      3183091.200000
             S0P5      6948768.438615
             S1P0     10426136.917798
             S1P5     16843606.243605
             S2P0     23062762.387397
             S2P5     31915408.491362
Name: 29668, dtype: float64

In [19]: plexstats.index.get_level_values(1)
Out[19]: Index([u'N', u'MIN', u'P10', u'MED', u'AVG', u'P90', u'MAX', u'STD', u'SN2P5', u'SN2P0', u'SN1P5', u'SN1P0', u'SN0P5', u'S0P0', u'S0P5', u'S1P0', u'S1P5', u'S2P0', u'S2P5'], dtype='object')

In [20]: labels = plexstats.index.get_level_values(1)[8:]

In [21]: labels
Out[21]: Index([u'SN2P5', u'SN2P0', u'SN1P5', u'SN1P0', u'SN0P5', u'S0P0', u'S0P5', u'S1P0', u'S1P5', u'S2P0', u'S2P5'], dtype='object')

In [22]: labels.insert(5,'S0P0')
Out[22]: Index([u'SN2P5', u'SN2P0', u'SN1P5', u'SN1P0', u'SN0P5', u'S0P0', u'S0P0', u'S0P5', u'S1P0', u'S1P5', u'S2P0', u'S2P5'], dtype='object')

In [23]: ranges = plexstats[('price_delta','SN2P5'):('price_delta','S2P5')]

In [24]: ranges
Out[24]: 
price_delta  SN2P5   -23190928.548734
             SN2P0   -17143467.130986
             SN1P5   -11402992.498265
             SN1P0    -4379402.937880
             SN0P5      -58840.512624
             S0P0      3183091.200000
             S0P5      6948768.438615
             S1P0     10426136.917798
             S1P5     16843606.243605
             S2P0     23062762.387397
             S2P5     31915408.491362
Name: 29668, dtype: float64

In [25]: ranges.iloc[5]
Out[25]: 3183091.2000000477

In [26]: ranges.values
Out[26]: 
array([-23190928.54873447, -17143467.13098551, -11402992.49826542,
        -4379402.93788004,    -58840.51262413,   3183091.20000005,
         6948768.43861548,  10426136.91779765,  16843606.24360512,
        23062762.38739655,  31915408.49136238])

In [27]: ranges.values.tolist()
Out[27]: 
[-23190928.548734467,
 -17143467.130985506,
 -11402992.49826542,
 -4379402.937880044,
 -58840.51262412713,
 3183091.2000000477,
 6948768.438615484,
 10426136.917797647,
 16843606.243605122,
 23062762.387396548,
 31915408.491362378]

In [28]: r = ranges.values.tolist()

In [29]: r.insert(5,0.0)

In [30]: r
Out[30]: 
[-23190928.548734467,
 -17143467.130985506,
 -11402992.49826542,
 -4379402.937880044,
 -58840.51262412713,
 0.0,
 3183091.2000000477,
 6948768.438615484,
 10426136.917797647,
 16843606.243605122,
 23062762.387396548,
 31915408.491362378]

In [31]: pd.cut(plex10d.price_delta, r, labels=labels)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-31-d3ebcbe13c3a> in <module>()
----> 1 pd.cut(plex10d.price_delta, r, labels=labels)

D:\Anaconda\lib\site-packages\pandas\tools\tile.pyc in cut(x, bins, right, labels, retbins, precision, include_lowest)
    111 
    112     res = _bins_to_cuts(x, bins, right=right, labels=labels,retbins=retbins, precision=precision,
--> 113                         include_lowest=include_lowest)
    114     if isinstance(x, Series):
    115         res = Series(res, index=x.index)

D:\Anaconda\lib\site-packages\pandas\tools\tile.pyc in _bins_to_cuts(x, bins, right, labels, retbins, precision, name, include_lowest)
    217 
    218         levels = np.asarray(levels, dtype=object)
--> 219         np.putmask(ids, na_mask, 0)
    220         fac = Categorical(ids - 1, levels, ordered=True, name=name, fastpath=True)
    221     else:

TypeError: putmask() argument 1 must be numpy.ndarray, not numpy.int64

In [32]: plex10d.price_delta
Out[32]: 8038709.1200000169

In [33]: pd.cut([plex10d.price_delta], r, labels=labels)
Out[33]: 
[S1P0]
Categories (11, object): [SN2P5 < SN2P0 < SN1P5 < SN1P0 ... S1P0 < S1P5 < S2P0 < S2P5]

In [34]: plexstats = v.stats.loc[29668,['price_delta']]

In [35]: labels = plexstats.index.get_level_values(1)[8:]

In [36]: labels.insert(5,'S0P0.0')
Out[36]: Index([u'SN2P5', u'SN2P0', u'SN1P5', u'SN1P0', u'SN0P5', u'S0P0.0', u'S0P0', u'S0P5', u'S1P0', u'S1P5', u'S2P0', u'S2P5'], dtype='object')

In [37]: ranges = plexstats[('price_delta','SN2P5'):('price_delta','S2P5')]

In [38]: ranges = plexstats[('price_delta','SN2P5'):('price_delta','S2P5')].values.tolist().insert(5,0.0)

In [39]: ranges

In [40]: ranges = plexstats[('price_delta','SN2P5'):('price_delta','S2P5')].values.tolist()

In [41]: ranges = plexstats[('price_delta','SN2P5'):('price_delta','S2P5')].values.tolist()

In [42]: ranges
Out[42]: 
[-23190928.548734467,
 -17143467.130985506,
 -11402992.49826542,
 -4379402.937880044,
 -58840.51262412713,
 3183091.2000000477,
 6948768.438615484,
 10426136.917797647,
 16843606.243605122,
 23062762.387396548,
 31915408.491362378]

In [43]: ranges.insert(5,0.0)

In [44]: pd.cut([plex10d.price_delta], ranges, labels=labels)
Out[44]: 
[S1P0]
Categories (11, object): [SN2P5 < SN2P0 < SN1P5 < SN1P0 ... S1P0 < S1P5 < S2P0 < S2P5]

In [45]: plexstats = v.stats.loc[29668,['volume','price_delta']]

In [46]: labels = plexstats.index.get_level_values(1)[8:]

In [47]: labels.insert(5,'S0P0')
Out[47]: Index([u'SN2P5', u'SN2P0', u'SN1P5', u'SN1P0', u'SN0P5', u'S0P0', u'S0P0', u'S0P5', u'S1P0', u'S1P5', u'S2P0', u'S2P5', u'N', u'MIN', u'P10', u'MED', u'AVG', u'P90', u'MAX', u'STD', u'SN2P5', u'SN2P0', u'SN1P5', u'SN1P0', u'SN0P5', u'S0P0', u'S0P5', u'S1P0', u'S1P5', u'S2P0', u'S2P5'], dtype='object')

In [48]: ranges = plexstats[('price_delta','SN2P5'):('price_delta','S2P5')]

In [49]: ranges = plexstats[('price_delta','SN2P5'):('price_delta','S2P5')].values.tolist().insert(5,0.0)

In [50]: ranges.insert(5,0.0)
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-50-ed325a99ee8c> in <module>()
----> 1 ranges.insert(5,0.0)

AttributeError: 'NoneType' object has no attribute 'insert'

In [51]: ranges = plexstats[('price_delta','SN2P5'):('price_delta','S2P5')].values.tolist()

In [52]: ranges.insert(5,0.0)

In [53]: pd.cut([plex10d.price_delta], ranges, labels=labels)
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-53-a1e0e93da0a3> in <module>()
----> 1 pd.cut([plex10d.price_delta], ranges, labels=labels)

D:\Anaconda\lib\site-packages\pandas\tools\tile.pyc in cut(x, bins, right, labels, retbins, precision, include_lowest)
    111 
    112     res = _bins_to_cuts(x, bins, right=right, labels=labels,retbins=retbins, precision=precision,
--> 113                         include_lowest=include_lowest)
    114     if isinstance(x, Series):
    115         res = Series(res, index=x.index)

D:\Anaconda\lib\site-packages\pandas\tools\tile.pyc in _bins_to_cuts(x, bins, right, labels, retbins, precision, name, include_lowest)
    212         else:
    213             if len(labels) != len(bins) - 1:
--> 214                 raise ValueError('Bin labels must be one fewer than '
    215                                  'the number of bin edges')
    216             levels = labels

ValueError: Bin labels must be one fewer than the number of bin edges

In [54]: plex10d = v.market_data_groups.get_group(29668).tail(10)

In [55]: plex10d
Out[55]: 
         itemid price_date  volume   avgprice  price_delta
2441190   29668 2014-10-24    2611  844000000    8837497.6
2441191   29668 2014-10-25    2872  837604992     680089.6
2441192   29668 2014-10-26    2537  842798976    4974176.0
2441193   29668 2014-10-27    2361  845000000    5575200.0
2441194   29668 2014-10-28    2422  845000000    3875411.2
2441195   29668 2014-10-29    2499  850004096    6877689.6
2441196   29668 2014-10-30    2619  859030016   13580505.6
2441197   29668 2014-10-31    2602  861000000   13428192.0
2441198   29668 2014-11-01    3040  861499968   12306163.2
2441199   29668 2014-11-02    2605  860939968   10252166.4

In [56]: plex10d = v.market_data_groups.get_group(29668).tail(10).price_delta

In [57]: plex10d
Out[57]: 
2441190     8837497.6
2441191      680089.6
2441192     4974176.0
2441193     5575200.0
2441194     3875411.2
2441195     6877689.6
2441196    13580505.6
2441197    13428192.0
2441198    12306163.2
2441199    10252166.4
Name: price_delta, dtype: float64

In [58]: plex10d = v.market_data_groups.get_group(29668).tail(10)

In [59]: plex10d.price_delta / plex10d.avgprice
Out[59]: 
2441190    0.010471
2441191    0.000812
2441192    0.005902
2441193    0.006598
2441194    0.004586
2441195    0.008091
2441196    0.015809
2441197    0.015596
2441198    0.014285
2441199    0.011908
dtype: float64

In [60]: plex10d.price_delta / plex10d.avgprice * 100
Out[60]: 
2441190    1.047097
2441191    0.081195
2441192    0.590197
2441193    0.659787
2441194    0.458629
2441195    0.809136
2441196    1.580912
2441197    1.559604
2441198    1.428458
2441199    1.190811
dtype: float64

In [61]: plex10d.index = plex10d.price_date

In [62]: plex10d.price_delta / plex10d.avgprice * 100
Out[62]: 
price_date
2014-10-24    1.047097
2014-10-25    0.081195
2014-10-26    0.590197
2014-10-27    0.659787
2014-10-28    0.458629
2014-10-29    0.809136
2014-10-30    1.580912
2014-10-31    1.559604
2014-11-01    1.428458
2014-11-02    1.190811
dtype: float64
Resetting execution engine
The Python REPL process has exited

In [1]: import pandas as pd

In [2]: import stat_script as s
Fetching item list from SDE: oceanus-1.0-105658
   0.3 Finished calculating convert.
Fetching market data ...
   0.3 Finished calculating raw_query.
  49.5 Finished calculating raw_data.
  49.5 Finished calculating expected_dates.
  80.7 Finished calculating raw_data_filled.
  80.9 Finished calculating market_data_groups.
Crunching Stats
 241.5 Finished calculating stats.
 241.7 Finished calculating market_sigmas.
 242.5 Finished calculating vol_means.

In [3]: plex10d = v.market_data_groups.get_group(29668).tail(10).price_delta
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-3-0bb72f3374f3> in <module>()
----> 1 plex10d = v.market_data_groups.get_group(29668).tail(10).price_delta

NameError: name 'v' is not defined

In [4]: plex10d = v.market_data_groups.get_group(29668).tail(10)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-4-4d38a9d0c8cf> in <module>()
----> 1 plex10d = v.market_data_groups.get_group(29668).tail(10)

NameError: name 'v' is not defined

In [5]: v = s.V

In [6]: plex10d = v.market_data_groups.get_group(29668).tail(10)

In [7]: plex10d
Out[7]: 
         itemid price_date  volume   avgprice  price_delta_10   price_delta_30
2441190   29668 2014-10-24    2611  844000000       8837497.6  35415296.000000
2441191   29668 2014-10-25    2872  837604992        680089.6  27600121.600000
2441192   29668 2014-10-26    2537  842798976       4974176.0  31128539.733333
2441193   29668 2014-10-27    2361  845000000       5575200.0  31596230.400000
2441194   29668 2014-10-28    2422  845000000       3875411.2  29953597.866667
2441195   29668 2014-10-29    2499  850004096       6877689.6  33253890.133333
2441196   29668 2014-10-30    2619  859030016      13580505.6  40312142.933333
2441197   29668 2014-10-31    2602  861000000      13428192.0  39945459.200000
2441198   29668 2014-11-01    3040  861499968      12306163.2  38172093.866667
2441199   29668 2014-11-02    2605  860939968      10252166.4  34997427.200000

In [8]: plexstats = v.stats.loc[29668,['volume','price_delta_10', 'price_delta_30']]

In [9]: plexstats
Out[9]: 
volume          N             400.000000
                MIN          1798.000000
                P10          2234.100000
                MED          2735.000000
                AVG          2818.417500
                P90          3492.600000
                MAX          6161.000000
                STD           536.331705
                SN2P5        1908.477656
                SN2P0        2009.231908
                SN1P5        2156.497173
                SN1P0        2345.303446
                SN0P5        2537.425912
                S0P0         2735.000000
                S0P5         2969.787044
                S1P0         3253.358644
                S1P5         3714.439267
                S2P0         4085.845395
                S2P5         4640.712010
price_delta_10  N             391.000000
                MIN     -32959296.000000
                P10      -7989368.960000
                MED       3382576.000000
                AVG       3156840.478772
                P90      16122918.400000
                MAX      40290374.400000
                STD       9484471.510733
                SN2P5   -23190928.548734
                SN2P0   -17143467.130986
                SN1P5   -11402992.498265
                SN1P0    -4379402.937880
                SN0P5      -58840.512624
                S0P0      3183091.200000
                S0P5      6948768.438615
                S1P0     10426136.917798
                S1P5     16843606.243605
                S2P0     23062762.387397
                S2P5     31915408.491362
price_delta_30  N             371.000000
                MIN     -24649525.333333
                P10      -7517346.133333
                MED       8090123.733333
                AVG       9127914.735669
                P90      42313020.373333
                MAX      67359460.266667
                STD      15439970.816218
                SN2P5   -18202593.497678
                SN2P0   -15108590.382784
                SN1P5    -9813902.008339
                SN1P0    -5179952.755853
                SN0P5     -129319.671850
                S0P0      7289070.933333
                S0P5     13293471.376838
                S1P0     25713885.336550
                S1P5     36204712.975368
                S2P0     43919069.140214
                S2P5     52673847.649421
Name: 29668, Length: 57, dtype: float64

In [10]: plex10d = v.market_data_groups.get_group(29668).tail(10).mean

In [11]: plex10d
Out[11]: 
<bound method DataFrame.mean of          itemid price_date  volume   avgprice  price_delta_10   price_delta_30
2441190   29668 2014-10-24    2611  844000000       8837497.6  35415296.000000
2441191   29668 2014-10-25    2872  837604992        680089.6  27600121.600000
2441192   29668 2014-10-26    2537  842798976       4974176.0  31128539.733333
2441193   29668 2014-10-27    2361  845000000       5575200.0  31596230.400000
2441194   29668 2014-10-28    2422  845000000       3875411.2  29953597.866667
2441195   29668 2014-10-29    2499  850004096       6877689.6  33253890.133333
2441196   29668 2014-10-30    2619  859030016      13580505.6  40312142.933333
2441197   29668 2014-10-31    2602  861000000      13428192.0  39945459.200000
2441198   29668 2014-11-01    3040  861499968      12306163.2  38172093.866667
2441199   29668 2014-11-02    2605  860939968      10252166.4  34997427.200000>

In [12]: plex10d = v.market_data_groups.get_group(29668).tail(10)

In [13]: plex10d.mean()
Out[13]: 
itemid            2.966800e+04
volume            2.616800e+03
avgprice          8.506878e+08
price_delta_10    8.038709e+06
price_delta_30    3.423748e+07
dtype: float64

In [14]: plex10d.mean.price_delta_30
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-14-d6c35ada973b> in <module>()
----> 1 plex10d.mean.price_delta_30

AttributeError: 'function' object has no attribute 'price_delta_30'

In [15]: plex10d.mean().price_delta_30
Out[15]: 34237479.893333338

In [16]: v.stats.loc[29668]
Out[16]: 
volume  N         400.000000
        MIN      1798.000000
        P10      2234.100000
        MED      2735.000000
        AVG      2818.417500
        P90      3492.600000
        MAX      6161.000000
        STD       536.331705
        SN2P5    1908.477656
        SN2P0    2009.231908
        SN1P5    2156.497173
        SN1P0    2345.303446
        SN0P5    2537.425912
        S0P0     2735.000000
        S0P5     2969.787044
...
price_delta_30  AVG       9127914.735669
                P90      42313020.373333
                MAX      67359460.266667
                STD      15439970.816218
                SN2P5   -18202593.497678
                SN2P0   -15108590.382784
                SN1P5    -9813902.008339
                SN1P0    -5179952.755853
                SN0P5     -129319.671850
                S0P0      7289070.933333
                S0P5     13293471.376838
                S1P0     25713885.336550
                S1P5     36204712.975368
                S2P0     43919069.140214
                S2P5     52673847.649421
Name: 29668, Length: 76, dtype: float64

In [17]: v.stats.loc[29668, ('price_delta_10')]
Out[17]: 
N             391.000000
MIN     -32959296.000000
P10      -7989368.960000
MED       3382576.000000
AVG       3156840.478772
P90      16122918.400000
MAX      40290374.400000
STD       9484471.510733
SN2P5   -23190928.548734
SN2P0   -17143467.130986
SN1P5   -11402992.498265
SN1P0    -4379402.937880
SN0P5      -58840.512624
S0P0      3183091.200000
S0P5      6948768.438615
S1P0     10426136.917798
S1P5     16843606.243605
S2P0     23062762.387397
S2P5     31915408.491362
Name: 29668, dtype: float64

In [18]: v.stats.loc[29668, 'price_delta_10']
Out[18]: 
N             391.000000
MIN     -32959296.000000
P10      -7989368.960000
MED       3382576.000000
AVG       3156840.478772
P90      16122918.400000
MAX      40290374.400000
STD       9484471.510733
SN2P5   -23190928.548734
SN2P0   -17143467.130986
SN1P5   -11402992.498265
SN1P0    -4379402.937880
SN0P5      -58840.512624
S0P0      3183091.200000
S0P5      6948768.438615
S1P0     10426136.917798
S1P5     16843606.243605
S2P0     23062762.387397
S2P5     31915408.491362
Name: 29668, dtype: float64

In [19]: s = v.stats.loc[29668, 'price_delta_10']

In [20]: s.loc['SN2P5':]
Out[20]: 
SN2P5   -23190928.548734
SN2P0   -17143467.130986
SN1P5   -11402992.498265
SN1P0    -4379402.937880
SN0P5      -58840.512624
S0P0      3183091.200000
S0P5      6948768.438615
S1P0     10426136.917798
S1P5     16843606.243605
S2P0     23062762.387397
S2P5     31915408.491362
Name: 29668, dtype: float64

In [21]: float('-inf')
Out[21]: -inf

In [22]: float('inf')
Out[22]: inf

In [23]: ses = [-2.5,-2.0,-1.5,-1.0,-0.5,0.0,0.01,0.02,0.5,1.0,1.5,2.0,2.5]

In [24]: vs = s.loc['SN2P5']

In [25]: vs = s.loc['SN2P5':].values()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-25-326d52e4f7c5> in <module>()
----> 1 vs = s.loc['SN2P5':].values()

TypeError: 'numpy.ndarray' object is not callable

In [26]: vs = s.loc['SN2P5':]

In [27]: vs
Out[27]: 
SN2P5   -23190928.548734
SN2P0   -17143467.130986
SN1P5   -11402992.498265
SN1P0    -4379402.937880
SN0P5      -58840.512624
S0P0      3183091.200000
S0P5      6948768.438615
S1P0     10426136.917798
S1P5     16843606.243605
S2P0     23062762.387397
S2P5     31915408.491362
Name: 29668, dtype: float64

In [28]: vs.values()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-28-478e824f5726> in <module>()
----> 1 vs.values()

TypeError: 'numpy.ndarray' object is not callable

In [29]: vs.tolist()
Out[29]: 
[-23190928.548734467,
 -17143467.130985506,
 -11402992.498265419,
 -4379402.9378800439,
 -58840.512624127128,
 3183091.2000000477,
 6948768.4386154842,
 10426136.917797647,
 16843606.243605122,
 23062762.387396548,
 31915408.491362378]

In [30]: vs = s.loc['SN2P5':].tolist()

In [31]: vs.insert(0,float('-inf'))

In [32]: vs.insert(-1,float('inf'))

In [33]: vs
Out[33]: 
[-inf,
 -23190928.548734467,
 -17143467.130985506,
 -11402992.498265419,
 -4379402.9378800439,
 -58840.512624127128,
 3183091.2000000477,
 6948768.4386154842,
 10426136.917797647,
 16843606.243605122,
 23062762.387396548,
 inf,
 31915408.491362378]

In [34]: vs = s.loc['SN2P5':].tolist()

In [35]: vs.insert(0,float('-inf'))

In [36]: vs.append(inf)

In [37]: len(vs)
Out[37]: 13

In [38]: len(ses)
Out[38]: 13

In [39]: plex = v.market_data_groups.get_group(29668)

In [40]: plex
Out[40]: 
         itemid price_date  volume   avgprice  price_delta_10   price_delta_30
2440800   29668 2013-09-29    3618  563411520             NaN              NaN
2440801   29668 2013-09-30    3262  565000000             NaN              NaN
2440802   29668 2013-10-01    3018  567950080             NaN              NaN
2440803   29668 2013-10-02    2916  574000000             NaN              NaN
2440804   29668 2013-10-03    2868  581995008             NaN              NaN
2440805   29668 2013-10-04    2662  582249984             NaN              NaN
2440806   29668 2013-10-05    2895  585000000             NaN              NaN
2440807   29668 2013-10-06    3134  585000000             NaN              NaN
2440808   29668 2013-10-07    2659  588320000             NaN              NaN
2440809   29668 2013-10-08    2516  596996992      18004633.6              NaN
2440810   29668 2013-10-09    2710  595600000      13388793.6              NaN
2440811   29668 2013-10-10    2822  596400000      11048793.6              NaN
2440812   29668 2013-10-11    2880  598000000       9643801.6              NaN
2440813   29668 2013-10-12    2972  593000000       2743801.6              NaN
2440814   29668 2013-10-13    3278  596611008       4893209.6              NaN
2440815   29668 2013-10-14    2576  598016000       4721600.0              NaN
2440816   29668 2013-10-15    2343  599875968       5093971.2              NaN
2440817   29668 2013-10-16    2677  599800000       3538003.2              NaN
2440818   29668 2013-10-17    2669  600000000       2570003.2              NaN
2440819   29668 2013-10-18    2813  604720000       6517702.4              NaN
2440820   29668 2013-10-19    3125  608739968       9223673.6              NaN
2440821   29668 2013-10-20    3227  606440960       5920569.6              NaN
2440822   29668 2013-10-21    2584  612000000      10079609.6              NaN
2440823   29668 2013-10-22    2463  612000000       8179609.6              NaN
2440824   29668 2013-10-23    2718  620000000      13840710.4              NaN
2440825   29668 2013-10-24    2885  627398976      18301388.8              NaN
2440826   29668 2013-10-25    2862  630000000      17890009.6              NaN
2440827   29668 2013-10-26    3109  621979968       7651980.8              NaN
2440828   29668 2013-10-27    4084  616270016        315027.2              NaN
2440829   29668 2013-10-28    2977  614748992      -2208896.0  16698144.000000
...         ...        ...     ...        ...             ...              ...
2441170   29668 2014-10-04    3138  780000000     -12214291.2  -8906709.333333
2441171   29668 2014-10-05    2742  785999872      -5314406.4  -3273499.733333
2441172   29668 2014-10-06    2432  789800000      -1211078.4    -96704.000000
2441173   29668 2014-10-07    2185  791800000        908921.6   1176629.333333
2441174   29668 2014-10-08    1908  799899008       8590131.2   8478937.600000
2441175   29668 2014-10-09    1919  799566144       8189651.2   7560401.066667
2441176   29668 2014-10-10    2166  800000000       8623507.2   7727590.400000
2441177   29668 2014-10-11    2519  800500032       8163532.8   8015620.266667
2441178   29668 2014-10-12    2178  805000000      11493497.6  11989597.866667
2441179   29668 2014-10-13    2012  804000128       8343609.6  10487889.066667
2441180   29668 2014-10-14    1909  807208000       8830681.6  13158493.866667
2441181   29668 2014-10-15    2104  819980992      18205561.6  25012119.466667
2441182   29668 2014-10-16    2079  833800000      27624569.6  37367460.266667
2441183   29668 2014-10-17    2204  829000000      19104569.6  31317826.133333
2441184   29668 2014-10-18    2568  828002112      15296371.2  29123737.600000
2441185   29668 2014-10-19    2415  829985920      14238201.6  29774350.933333
2441186   29668 2014-10-20    2121  835798976      16471360.0  34120407.466667
2441187   29668 2014-10-21    2251  839777024      16521708.8  36372554.666667
2441188   29668 2014-10-22    2283  845280000      17996684.8  40061962.666667
2441189   29668 2014-10-23    2301  846000000      14516697.6  39048629.333333
2441190   29668 2014-10-24    2611  844000000       8837497.6  35415296.000000
2441191   29668 2014-10-25    2872  837604992        680089.6  27600121.600000
2441192   29668 2014-10-26    2537  842798976       4974176.0  31128539.733333
2441193   29668 2014-10-27    2361  845000000       5575200.0  31596230.400000
2441194   29668 2014-10-28    2422  845000000       3875411.2  29953597.866667
2441195   29668 2014-10-29    2499  850004096       6877689.6  33253890.133333
2441196   29668 2014-10-30    2619  859030016      13580505.6  40312142.933333
2441197   29668 2014-10-31    2602  861000000      13428192.0  39945459.200000
2441198   29668 2014-11-01    3040  861499968      12306163.2  38172093.866667
2441199   29668 2014-11-02    2605  860939968      10252166.4  34997427.200000

[400 rows x 6 columns]


In [41]: plex.index = plex.price_date

In [42]: plex = plex.tail(366)

In [43]: plex
Out[43]: 
            itemid price_date  volume   avgprice  price_delta_10  \
price_date                                                         
2013-11-02   29668 2013-11-02    4688  578443904     -32959296.0   
2013-11-03   29668 2013-11-03    4037  586406016     -20897888.0   
2013-11-04   29668 2013-11-04    3455  596095936      -7817561.6   
2013-11-05   29668 2013-11-05    3257  604000000       1884499.2   
2013-11-06   29668 2013-11-06    3039  599000000      -1388499.2   
2013-11-07   29668 2013-11-07    2975  594505984      -3858214.4   
2013-11-08   29668 2013-11-08    3092  594999424      -1075916.8   
2013-11-09   29668 2013-11-09    3048  600000000       5524659.2   
2013-11-10   29668 2013-11-10    3074  604984512      10410931.2   
2013-11-11   29668 2013-11-11    2368  609520000      12724422.4   
2013-11-12   29668 2013-11-12    2335  612385024      12195334.4   
2013-11-13   29668 2013-11-13    2278  614499968      11500883.2   
2013-11-14   29668 2013-11-14    2428  617216576      12105427.2   
2013-11-15   29668 2013-11-15    2404  615899968       9598822.4   
2013-11-16   29668 2013-11-16    2673  613472960       5724518.4   
2013-11-17   29668 2013-11-17    2665  613900032       4212185.6   
2013-11-18   29668 2013-11-18    2636  617699968       5742067.2   
2013-11-19   29668 2013-11-19    3027  611000000      -2057900.8   
2013-11-20   29668 2013-11-20    3539  608750016      -4684435.2   
2013-11-21   29668 2013-11-21    3695  605000000      -7982451.2   
2013-11-22   29668 2013-11-22    3118  605000000      -7243948.8   
2013-11-23   29668 2013-11-23    3949  600000000     -10793952.0   
2013-11-24   29668 2013-11-24    3362  600920000      -8244294.4   
2013-11-25   29668 2013-11-25    3074  604499968      -3524326.4   
2013-11-26   29668 2013-11-26    2576  611000000       3223001.6   
2013-11-27   29668 2013-11-27    2832  612179968       4574976.0   
2013-11-28   29668 2013-11-28    3004  611000000       4065004.8   
2013-11-29   29668 2013-11-29    3900  601150016      -4799980.8   
2013-11-30   29668 2013-11-30    4494  597998080      -6876723.2   
2013-12-01   29668 2013-12-01    4086  599431424      -4886521.6   
...            ...        ...     ...        ...             ...   
2014-10-04   29668 2014-10-04    3138  780000000     -12214291.2   
2014-10-05   29668 2014-10-05    2742  785999872      -5314406.4   
2014-10-06   29668 2014-10-06    2432  789800000      -1211078.4   
2014-10-07   29668 2014-10-07    2185  791800000        908921.6   
2014-10-08   29668 2014-10-08    1908  799899008       8590131.2   
2014-10-09   29668 2014-10-09    1919  799566144       8189651.2   
2014-10-10   29668 2014-10-10    2166  800000000       8623507.2   
2014-10-11   29668 2014-10-11    2519  800500032       8163532.8   
2014-10-12   29668 2014-10-12    2178  805000000      11493497.6   
2014-10-13   29668 2014-10-13    2012  804000128       8343609.6   
2014-10-14   29668 2014-10-14    1909  807208000       8830681.6   
2014-10-15   29668 2014-10-15    2104  819980992      18205561.6   
2014-10-16   29668 2014-10-16    2079  833800000      27624569.6   
2014-10-17   29668 2014-10-17    2204  829000000      19104569.6   
2014-10-18   29668 2014-10-18    2568  828002112      15296371.2   
2014-10-19   29668 2014-10-19    2415  829985920      14238201.6   
2014-10-20   29668 2014-10-20    2121  835798976      16471360.0   
2014-10-21   29668 2014-10-21    2251  839777024      16521708.8   
2014-10-22   29668 2014-10-22    2283  845280000      17996684.8   
2014-10-23   29668 2014-10-23    2301  846000000      14516697.6   
2014-10-24   29668 2014-10-24    2611  844000000       8837497.6   
2014-10-25   29668 2014-10-25    2872  837604992        680089.6   
2014-10-26   29668 2014-10-26    2537  842798976       4974176.0   
2014-10-27   29668 2014-10-27    2361  845000000       5575200.0   
2014-10-28   29668 2014-10-28    2422  845000000       3875411.2   
2014-10-29   29668 2014-10-29    2499  850004096       6877689.6   
2014-10-30   29668 2014-10-30    2619  859030016      13580505.6   
2014-10-31   29668 2014-10-31    2602  861000000      13428192.0   
2014-11-01   29668 2014-11-01    3040  861499968      12306163.2   
2014-11-02   29668 2014-11-02    2605  860939968      10252166.4   

             price_delta_30  
price_date                   
2013-11-02 -24649525.333333  
2013-11-03 -16825947.733333  
2013-11-04  -7505892.266667  
2013-11-05   -235161.600000  
2013-11-06  -5591161.600000  
2013-11-07 -10002144.000000  
2013-11-08  -9488684.800000  
2013-11-09  -4608108.800000  
2013-11-10    143586.133333  
2013-11-11   4128407.466667  
2013-11-12   6467630.933333  
2013-11-13   8033109.333333  
2013-11-14  10171697.066667  
2013-11-15   8318423.466667  
2013-11-16   5442316.800000  
2013-11-17   5563387.733333  
2013-11-18   9064657.066667  
2013-11-19   2212721.066667  
2013-11-20     71069.866667  
2013-11-21  -3445612.800000  
2013-11-22  -2945612.800000  
2013-11-23  -7032313.600000  
2013-11-24  -5142980.266667  
2013-11-25   -980345.600000  
2013-11-26   5695353.600000  
2013-11-27   6960955.733333  
2013-11-28   6010587.733333  
2013-11-29  -3344396.800000  
2013-11-30  -6296198.400000  
2013-12-01  -5267234.133333  
...                     ...  
2014-10-04  -8906709.333333  
2014-10-05  -3273499.733333  
2014-10-06    -96704.000000  
2014-10-07   1176629.333333  
2014-10-08   8478937.600000  
2014-10-09   7560401.066667  
2014-10-10   7727590.400000  
2014-10-11   8015620.266667  
2014-10-12  11989597.866667  
2014-10-13  10487889.066667  
2014-10-14  13158493.866667  
2014-10-15  25012119.466667  
2014-10-16  37367460.266667  
2014-10-17  31317826.133333  
2014-10-18  29123737.600000  
2014-10-19  29774350.933333  
2014-10-20  34120407.466667  
2014-10-21  36372554.666667  
2014-10-22  40061962.666667  
2014-10-23  39048629.333333  
2014-10-24  35415296.000000  
2014-10-25  27600121.600000  
2014-10-26  31128539.733333  
2014-10-27  31596230.400000  
2014-10-28  29953597.866667  
2014-10-29  33253890.133333  
2014-10-30  40312142.933333  
2014-10-31  39945459.200000  
2014-11-01  38172093.866667  
2014-11-02  34997427.200000  

[366 rows x 6 columns]

In [44]: del(plex['itemid'])

In [45]: del(plex['price_date'])

In [46]: plex
Out[46]: 
            volume   avgprice  price_delta_10   price_delta_30
price_date                                                    
2013-11-02    4688  578443904     -32959296.0 -24649525.333333
2013-11-03    4037  586406016     -20897888.0 -16825947.733333
2013-11-04    3455  596095936      -7817561.6  -7505892.266667
2013-11-05    3257  604000000       1884499.2   -235161.600000
2013-11-06    3039  599000000      -1388499.2  -5591161.600000
2013-11-07    2975  594505984      -3858214.4 -10002144.000000
2013-11-08    3092  594999424      -1075916.8  -9488684.800000
2013-11-09    3048  600000000       5524659.2  -4608108.800000
2013-11-10    3074  604984512      10410931.2    143586.133333
2013-11-11    2368  609520000      12724422.4   4128407.466667
2013-11-12    2335  612385024      12195334.4   6467630.933333
2013-11-13    2278  614499968      11500883.2   8033109.333333
2013-11-14    2428  617216576      12105427.2  10171697.066667
2013-11-15    2404  615899968       9598822.4   8318423.466667
2013-11-16    2673  613472960       5724518.4   5442316.800000
2013-11-17    2665  613900032       4212185.6   5563387.733333
2013-11-18    2636  617699968       5742067.2   9064657.066667
2013-11-19    3027  611000000      -2057900.8   2212721.066667
2013-11-20    3539  608750016      -4684435.2     71069.866667
2013-11-21    3695  605000000      -7982451.2  -3445612.800000
2013-11-22    3118  605000000      -7243948.8  -2945612.800000
2013-11-23    3949  600000000     -10793952.0  -7032313.600000
2013-11-24    3362  600920000      -8244294.4  -5142980.266667
2013-11-25    3074  604499968      -3524326.4   -980345.600000
2013-11-26    2576  611000000       3223001.6   5695353.600000
2013-11-27    2832  612179968       4574976.0   6960955.733333
2013-11-28    3004  611000000       4065004.8   6010587.733333
2013-11-29    3900  601150016      -4799980.8  -3344396.800000
2013-11-30    4494  597998080      -6876723.2  -6296198.400000
2013-12-01    4086  599431424      -4886521.6  -5267234.133333
...            ...        ...             ...              ...
2014-10-04    3138  780000000     -12214291.2  -8906709.333333
2014-10-05    2742  785999872      -5314406.4  -3273499.733333
2014-10-06    2432  789800000      -1211078.4    -96704.000000
2014-10-07    2185  791800000        908921.6   1176629.333333
2014-10-08    1908  799899008       8590131.2   8478937.600000
2014-10-09    1919  799566144       8189651.2   7560401.066667
2014-10-10    2166  800000000       8623507.2   7727590.400000
2014-10-11    2519  800500032       8163532.8   8015620.266667
2014-10-12    2178  805000000      11493497.6  11989597.866667
2014-10-13    2012  804000128       8343609.6  10487889.066667
2014-10-14    1909  807208000       8830681.6  13158493.866667
2014-10-15    2104  819980992      18205561.6  25012119.466667
2014-10-16    2079  833800000      27624569.6  37367460.266667
2014-10-17    2204  829000000      19104569.6  31317826.133333
2014-10-18    2568  828002112      15296371.2  29123737.600000
2014-10-19    2415  829985920      14238201.6  29774350.933333
2014-10-20    2121  835798976      16471360.0  34120407.466667
2014-10-21    2251  839777024      16521708.8  36372554.666667
2014-10-22    2283  845280000      17996684.8  40061962.666667
2014-10-23    2301  846000000      14516697.6  39048629.333333
2014-10-24    2611  844000000       8837497.6  35415296.000000
2014-10-25    2872  837604992        680089.6  27600121.600000
2014-10-26    2537  842798976       4974176.0  31128539.733333
2014-10-27    2361  845000000       5575200.0  31596230.400000
2014-10-28    2422  845000000       3875411.2  29953597.866667
2014-10-29    2499  850004096       6877689.6  33253890.133333
2014-10-30    2619  859030016      13580505.6  40312142.933333
2014-10-31    2602  861000000      13428192.0  39945459.200000
2014-11-01    3040  861499968      12306163.2  38172093.866667
2014-11-02    2605  860939968      10252166.4  34997427.200000

[366 rows x 4 columns]


In [47]: plex = v.market_data_groups.get_group(29668)

In [48]: plex.index = plex.price_date

In [49]: plex = plex.resample('10Day',closed='right',label='right')
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-49-47fec5f8ad23> in <module>()
----> 1 plex = plex.resample('10Day',closed='right',label='right')

D:\Anaconda\lib\site-packages\pandas\core\generic.pyc in resample(self, rule, how, axis, fill_method, closed, label, convention, kind, loffset, limit, base)
   2977                               axis=axis, kind=kind, loffset=loffset,
   2978                               fill_method=fill_method, convention=convention,
-> 2979                               limit=limit, base=base)
   2980         return sampler.resample(self).__finalize__(self)
   2981 

D:\Anaconda\lib\site-packages\pandas\tseries\resample.pyc in __init__(self, freq, closed, label, how, nperiods, axis, fill_method, limit, loffset, kind, convention, base, **kwargs)
     43                  fill_method=None, limit=None, loffset=None, kind=None,
     44                  convention=None, base=0, **kwargs):
---> 45         freq = to_offset(freq)
     46 
     47         end_types = set(['M', 'A', 'Q', 'BM', 'BA', 'BQ', 'W'])

D:\Anaconda\lib\site-packages\pandas\tseries\frequencies.pyc in to_offset(freqstr)
    316                     delta = delta + offset
    317         except Exception:
--> 318             raise ValueError("Could not evaluate %s" % freqstr)
    319 
    320     if delta is None:

ValueError: Could not evaluate 10Day

In [50]: plex = plex.resample('10D',closed='right',label='right')

In [51]: plex
Out[51]: 
            itemid       volume      avgprice   price_delta_10  \
price_date                                                       
2013-09-29   29668  3618.000000  5.634115e+08              NaN   
2013-10-09   29668  2864.000000  5.822112e+08  15696713.600000   
2013-10-19   29668  2815.500000  5.995163e+08   5999456.000000   
2013-10-29   29668  2973.900000  6.178727e+08   7998531.840000   
2013-11-08   29668  3702.800000  5.960753e+08 -11122694.400000   
2013-11-18   29668  2590.900000  6.119579e+08   8973925.120000   
2013-11-28   29668  3217.600000  6.069350e+08  -3266832.640000   
2013-12-08   29668  3781.300000  6.061040e+08   1184389.120000   
2013-12-18   29668  2608.100000  6.184561e+08   3589482.880000   
2013-12-28   29668  3222.300000  6.100109e+08  -5537785.600000   
2014-01-07   29668  3115.300000  6.038790e+08     25787.520000   
2014-01-17   29668  2695.200000  6.192251e+08   7832128.000000   
2014-01-27   29668  2715.700000  6.364393e+08   7650744.320000   
2014-02-06   29668  3333.200000  6.260553e+08  -6769385.600000   
2014-02-16   29668  3525.100000  6.265829e+08    908028.160000   
2014-02-26   29668  2940.300000  6.338582e+08   3996925.440000   
2014-03-08   29668  3131.600000  6.426273e+08   3791324.160000   
2014-03-18   29668  3106.600000  6.556332e+08   4720707.200000   
2014-03-28   29668  2799.200000  6.860331e+08  17914357.120000   
2014-04-07   29668  2762.000000  6.997440e+08   2805587.840000   
2014-04-17   29668  2792.700000  7.227945e+08   8123210.240000   
2014-04-27   29668  2348.100000  7.214336e+08   2124375.040000   
2014-05-07   29668  3064.900000  7.150953e+08  -4935132.800000   
2014-05-17   29668  2655.400000  7.180919e+08   2657504.640000   
2014-05-27   29668  2633.200000  7.362941e+08   9874816.640000   
2014-06-06   29668  3071.500000  7.373255e+08  -3867734.400000   
2014-06-16   29668  2829.900000  7.272342e+08  -1420538.880000   
2014-06-26   29668  2335.000000  7.374669e+08   5144547.200000   
2014-07-06   29668  2646.200000  7.566205e+08  10173649.280000   
2014-07-16   29668  2896.500000  7.989331e+08  17067144.960000   
2014-07-26   29668  3019.000000  7.934509e+08  -7374814.080000   
2014-08-05   29668  2556.400000  7.851353e+08     54288.000000   
2014-08-15   29668  2413.000000  7.841042e+08   -114849.920000   
2014-08-25   29668  2519.900000  7.953682e+08   5660084.480000   
2014-09-04   29668  2877.600000  7.760368e+08 -11567921.280000   
2014-09-14   29668  2379.500000  7.829489e+08   7379482.880000   
2014-09-24   29668  2170.400000  7.915569e+08   1914464.000000   
2014-10-04   29668  2418.700000  7.922143e+08   -992218.880000   
2014-10-14   29668  2197.000000  7.983773e+08   5661804.800000   
2014-10-24   29668  2293.700000  8.351625e+08  16881322.240000   
2014-11-03   29668  2617.444444  8.514309e+08   7949954.844444   

             price_delta_30  
price_date                   
2013-09-29              NaN  
2013-10-09              NaN  
2013-10-19              NaN  
2013-10-29  17359706.666667  
2013-11-08  -7454336.853333  
2013-11-18   5272510.720000  
2013-11-28    140382.293333  
2013-12-08     68866.133333  
2013-12-18   8460093.653333  
2013-12-28  -1767410.133333  
2014-01-07  -7543833.600000  
2014-01-17   8960109.440000  
2014-01-27  21761081.813333  
2014-02-06   1719893.973333  
2014-02-16  -2513169.706667  
2014-02-26   4404568.533333  
2014-03-08  11169929.386667  
2014-03-18  15763286.400000  
2014-03-28  33410696.960000  
2014-04-07  27754135.253333  
2014-04-17  29551686.400000  
2014-04-27  11127324.373333  
2014-05-07  -2908350.506667  
2014-05-17   -166139.306667  
2014-05-27  15666083.626667  
2014-06-06   9643203.626667  
2014-06-16  -4854928.213333  
2014-06-26   3410124.373333  
2014-07-06  20812529.066667  
2014-07-16  45388065.280000  
2014-07-26  17071409.920000  
2014-08-05  -4122271.573333  
2014-08-15  -5937744.000000  
2014-08-25   9032118.186667  
2014-09-04 -11140498.773333  
2014-09-14  -1345141.973333  
2014-09-24   7284715.733333  
2014-10-04   6074824.533333  
2014-10-14   6522495.573333  
2014-10-24  33761434.453333  
2014-11-03  34106611.437037  

In [52]: ses
Out[52]: [-2.5, -2.0, -1.5, -1.0, -0.5, 0.0, 0.01, 0.02, 0.5, 1.0, 1.5, 2.0, 2.5]

In [53]: vs
Out[53]: 
[-inf,
 -23190928.548734467,
 -17143467.130985506,
 -11402992.498265419,
 -4379402.9378800439,
 -58840.512624127128,
 3183091.2000000477,
 6948768.4386154842,
 10426136.917797647,
 16843606.243605122,
 23062762.387396548,
 31915408.491362378,
 inf]

In [54]: plex
Out[54]: 
            itemid       volume      avgprice   price_delta_10  \
price_date                                                       
2013-09-29   29668  3618.000000  5.634115e+08              NaN   
2013-10-09   29668  2864.000000  5.822112e+08  15696713.600000   
2013-10-19   29668  2815.500000  5.995163e+08   5999456.000000   
2013-10-29   29668  2973.900000  6.178727e+08   7998531.840000   
2013-11-08   29668  3702.800000  5.960753e+08 -11122694.400000   
2013-11-18   29668  2590.900000  6.119579e+08   8973925.120000   
2013-11-28   29668  3217.600000  6.069350e+08  -3266832.640000   
2013-12-08   29668  3781.300000  6.061040e+08   1184389.120000   
2013-12-18   29668  2608.100000  6.184561e+08   3589482.880000   
2013-12-28   29668  3222.300000  6.100109e+08  -5537785.600000   
2014-01-07   29668  3115.300000  6.038790e+08     25787.520000   
2014-01-17   29668  2695.200000  6.192251e+08   7832128.000000   
2014-01-27   29668  2715.700000  6.364393e+08   7650744.320000   
2014-02-06   29668  3333.200000  6.260553e+08  -6769385.600000   
2014-02-16   29668  3525.100000  6.265829e+08    908028.160000   
2014-02-26   29668  2940.300000  6.338582e+08   3996925.440000   
2014-03-08   29668  3131.600000  6.426273e+08   3791324.160000   
2014-03-18   29668  3106.600000  6.556332e+08   4720707.200000   
2014-03-28   29668  2799.200000  6.860331e+08  17914357.120000   
2014-04-07   29668  2762.000000  6.997440e+08   2805587.840000   
2014-04-17   29668  2792.700000  7.227945e+08   8123210.240000   
2014-04-27   29668  2348.100000  7.214336e+08   2124375.040000   
2014-05-07   29668  3064.900000  7.150953e+08  -4935132.800000   
2014-05-17   29668  2655.400000  7.180919e+08   2657504.640000   
2014-05-27   29668  2633.200000  7.362941e+08   9874816.640000   
2014-06-06   29668  3071.500000  7.373255e+08  -3867734.400000   
2014-06-16   29668  2829.900000  7.272342e+08  -1420538.880000   
2014-06-26   29668  2335.000000  7.374669e+08   5144547.200000   
2014-07-06   29668  2646.200000  7.566205e+08  10173649.280000   
2014-07-16   29668  2896.500000  7.989331e+08  17067144.960000   
2014-07-26   29668  3019.000000  7.934509e+08  -7374814.080000   
2014-08-05   29668  2556.400000  7.851353e+08     54288.000000   
2014-08-15   29668  2413.000000  7.841042e+08   -114849.920000   
2014-08-25   29668  2519.900000  7.953682e+08   5660084.480000   
2014-09-04   29668  2877.600000  7.760368e+08 -11567921.280000   
2014-09-14   29668  2379.500000  7.829489e+08   7379482.880000   
2014-09-24   29668  2170.400000  7.915569e+08   1914464.000000   
2014-10-04   29668  2418.700000  7.922143e+08   -992218.880000   
2014-10-14   29668  2197.000000  7.983773e+08   5661804.800000   
2014-10-24   29668  2293.700000  8.351625e+08  16881322.240000   
2014-11-03   29668  2617.444444  8.514309e+08   7949954.844444   

             price_delta_30  
price_date                   
2013-09-29              NaN  
2013-10-09              NaN  
2013-10-19              NaN  
2013-10-29  17359706.666667  
2013-11-08  -7454336.853333  
2013-11-18   5272510.720000  
2013-11-28    140382.293333  
2013-12-08     68866.133333  
2013-12-18   8460093.653333  
2013-12-28  -1767410.133333  
2014-01-07  -7543833.600000  
2014-01-17   8960109.440000  
2014-01-27  21761081.813333  
2014-02-06   1719893.973333  
2014-02-16  -2513169.706667  
2014-02-26   4404568.533333  
2014-03-08  11169929.386667  
2014-03-18  15763286.400000  
2014-03-28  33410696.960000  
2014-04-07  27754135.253333  
2014-04-17  29551686.400000  
2014-04-27  11127324.373333  
2014-05-07  -2908350.506667  
2014-05-17   -166139.306667  
2014-05-27  15666083.626667  
2014-06-06   9643203.626667  
2014-06-16  -4854928.213333  
2014-06-26   3410124.373333  
2014-07-06  20812529.066667  
2014-07-16  45388065.280000  
2014-07-26  17071409.920000  
2014-08-05  -4122271.573333  
2014-08-15  -5937744.000000  
2014-08-25   9032118.186667  
2014-09-04 -11140498.773333  
2014-09-14  -1345141.973333  
2014-09-24   7284715.733333  
2014-10-04   6074824.533333  
2014-10-14   6522495.573333  
2014-10-24  33761434.453333  
2014-11-03  34106611.437037  

In [55]: pd.cut(plex, vs,labels = ses)
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-55-6d1342b103f3> in <module>()
----> 1 pd.cut(plex, vs,labels = ses)

D:\Anaconda\lib\site-packages\pandas\tools\tile.pyc in cut(x, bins, right, labels, retbins, precision, include_lowest)
    111 
    112     res = _bins_to_cuts(x, bins, right=right, labels=labels,retbins=retbins, precision=precision,
--> 113                         include_lowest=include_lowest)
    114     if isinstance(x, Series):
    115         res = Series(res, index=x.index)

D:\Anaconda\lib\site-packages\pandas\tools\tile.pyc in _bins_to_cuts(x, bins, right, labels, retbins, precision, name, include_lowest)
    212         else:
    213             if len(labels) != len(bins) - 1:
--> 214                 raise ValueError('Bin labels must be one fewer than '
    215                                  'the number of bin edges')
    216             levels = labels

ValueError: Bin labels must be one fewer than the number of bin edges

In [56]: vs
Out[56]: 
[-inf,
 -23190928.548734467,
 -17143467.130985506,
 -11402992.498265419,
 -4379402.9378800439,
 -58840.512624127128,
 3183091.2000000477,
 6948768.4386154842,
 10426136.917797647,
 16843606.243605122,
 23062762.387396548,
 31915408.491362378,
 inf]

In [57]: vs.insert(6,0.0)

In [58]: vs
Out[58]: 
[-inf,
 -23190928.548734467,
 -17143467.130985506,
 -11402992.498265419,
 -4379402.9378800439,
 -58840.512624127128,
 0.0,
 3183091.2000000477,
 6948768.4386154842,
 10426136.917797647,
 16843606.243605122,
 23062762.387396548,
 31915408.491362378,
 inf]

In [59]: pd.cut(plex, vs,labels = ses)
Out[59]: <repr(<pandas.core.categorical.Categorical at 0x35024da0>) failed: ValueError: Buffer has wrong number of dimensions (expected 1, got 2)>

In [60]: plex
Out[60]: 
            itemid       volume      avgprice   price_delta_10  \
price_date                                                       
2013-09-29   29668  3618.000000  5.634115e+08              NaN   
2013-10-09   29668  2864.000000  5.822112e+08  15696713.600000   
2013-10-19   29668  2815.500000  5.995163e+08   5999456.000000   
2013-10-29   29668  2973.900000  6.178727e+08   7998531.840000   
2013-11-08   29668  3702.800000  5.960753e+08 -11122694.400000   
2013-11-18   29668  2590.900000  6.119579e+08   8973925.120000   
2013-11-28   29668  3217.600000  6.069350e+08  -3266832.640000   
2013-12-08   29668  3781.300000  6.061040e+08   1184389.120000   
2013-12-18   29668  2608.100000  6.184561e+08   3589482.880000   
2013-12-28   29668  3222.300000  6.100109e+08  -5537785.600000   
2014-01-07   29668  3115.300000  6.038790e+08     25787.520000   
2014-01-17   29668  2695.200000  6.192251e+08   7832128.000000   
2014-01-27   29668  2715.700000  6.364393e+08   7650744.320000   
2014-02-06   29668  3333.200000  6.260553e+08  -6769385.600000   
2014-02-16   29668  3525.100000  6.265829e+08    908028.160000   
2014-02-26   29668  2940.300000  6.338582e+08   3996925.440000   
2014-03-08   29668  3131.600000  6.426273e+08   3791324.160000   
2014-03-18   29668  3106.600000  6.556332e+08   4720707.200000   
2014-03-28   29668  2799.200000  6.860331e+08  17914357.120000   
2014-04-07   29668  2762.000000  6.997440e+08   2805587.840000   
2014-04-17   29668  2792.700000  7.227945e+08   8123210.240000   
2014-04-27   29668  2348.100000  7.214336e+08   2124375.040000   
2014-05-07   29668  3064.900000  7.150953e+08  -4935132.800000   
2014-05-17   29668  2655.400000  7.180919e+08   2657504.640000   
2014-05-27   29668  2633.200000  7.362941e+08   9874816.640000   
2014-06-06   29668  3071.500000  7.373255e+08  -3867734.400000   
2014-06-16   29668  2829.900000  7.272342e+08  -1420538.880000   
2014-06-26   29668  2335.000000  7.374669e+08   5144547.200000   
2014-07-06   29668  2646.200000  7.566205e+08  10173649.280000   
2014-07-16   29668  2896.500000  7.989331e+08  17067144.960000   
2014-07-26   29668  3019.000000  7.934509e+08  -7374814.080000   
2014-08-05   29668  2556.400000  7.851353e+08     54288.000000   
2014-08-15   29668  2413.000000  7.841042e+08   -114849.920000   
2014-08-25   29668  2519.900000  7.953682e+08   5660084.480000   
2014-09-04   29668  2877.600000  7.760368e+08 -11567921.280000   
2014-09-14   29668  2379.500000  7.829489e+08   7379482.880000   
2014-09-24   29668  2170.400000  7.915569e+08   1914464.000000   
2014-10-04   29668  2418.700000  7.922143e+08   -992218.880000   
2014-10-14   29668  2197.000000  7.983773e+08   5661804.800000   
2014-10-24   29668  2293.700000  8.351625e+08  16881322.240000   
2014-11-03   29668  2617.444444  8.514309e+08   7949954.844444   

             price_delta_30  
price_date                   
2013-09-29              NaN  
2013-10-09              NaN  
2013-10-19              NaN  
2013-10-29  17359706.666667  
2013-11-08  -7454336.853333  
2013-11-18   5272510.720000  
2013-11-28    140382.293333  
2013-12-08     68866.133333  
2013-12-18   8460093.653333  
2013-12-28  -1767410.133333  
2014-01-07  -7543833.600000  
2014-01-17   8960109.440000  
2014-01-27  21761081.813333  
2014-02-06   1719893.973333  
2014-02-16  -2513169.706667  
2014-02-26   4404568.533333  
2014-03-08  11169929.386667  
2014-03-18  15763286.400000  
2014-03-28  33410696.960000  
2014-04-07  27754135.253333  
2014-04-17  29551686.400000  
2014-04-27  11127324.373333  
2014-05-07  -2908350.506667  
2014-05-17   -166139.306667  
2014-05-27  15666083.626667  
2014-06-06   9643203.626667  
2014-06-16  -4854928.213333  
2014-06-26   3410124.373333  
2014-07-06  20812529.066667  
2014-07-16  45388065.280000  
2014-07-26  17071409.920000  
2014-08-05  -4122271.573333  
2014-08-15  -5937744.000000  
2014-08-25   9032118.186667  
2014-09-04 -11140498.773333  
2014-09-14  -1345141.973333  
2014-09-24   7284715.733333  
2014-10-04   6074824.533333  
2014-10-14   6522495.573333  
2014-10-24  33761434.453333  
2014-11-03  34106611.437037  

In [61]: labels
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-61-6c7189e7614b> in <module>()
----> 1 labels

NameError: name 'labels' is not defined

In [62]: vs
Out[62]: 
[-inf,
 -23190928.548734467,
 -17143467.130985506,
 -11402992.498265419,
 -4379402.9378800439,
 -58840.512624127128,
 0.0,
 3183091.2000000477,
 6948768.4386154842,
 10426136.917797647,
 16843606.243605122,
 23062762.387396548,
 31915408.491362378,
 inf]

In [63]: ses
Out[63]: [-2.5, -2.0, -1.5, -1.0, -0.5, 0.0, 0.01, 0.02, 0.5, 1.0, 1.5, 2.0, 2.5]

In [64]: vs
Out[64]: 
[-inf,
 -23190928.548734467,
 -17143467.130985506,
 -11402992.498265419,
 -4379402.9378800439,
 -58840.512624127128,
 0.0,
 3183091.2000000477,
 6948768.4386154842,
 10426136.917797647,
 16843606.243605122,
 23062762.387396548,
 31915408.491362378,
 inf]

In [65]: v.stats.loc[29668]
Out[65]: 
volume  N         400.000000
        MIN      1798.000000
        P10      2234.100000
        MED      2735.000000
        AVG      2818.417500
        P90      3492.600000
        MAX      6161.000000
        STD       536.331705
        SN2P5    1908.477656
        SN2P0    2009.231908
        SN1P5    2156.497173
        SN1P0    2345.303446
        SN0P5    2537.425912
        S0P0     2735.000000
        S0P5     2969.787044
...
price_delta_30  AVG       9127914.735669
                P90      42313020.373333
                MAX      67359460.266667
                STD      15439970.816218
                SN2P5   -18202593.497678
                SN2P0   -15108590.382784
                SN1P5    -9813902.008339
                SN1P0    -5179952.755853
                SN0P5     -129319.671850
                S0P0      7289070.933333
                S0P5     13293471.376838
                S1P0     25713885.336550
                S1P5     36204712.975368
                S2P0     43919069.140214
                S2P5     52673847.649421
Name: 29668, Length: 76, dtype: float64

In [66]: v.stats.loc[29668,'price_delta_10']
Out[66]: 
N             391.000000
MIN     -32959296.000000
P10      -7989368.960000
MED       3382576.000000
AVG       3156840.478772
P90      16122918.400000
MAX      40290374.400000
STD       9484471.510733
SN2P5   -23190928.548734
SN2P0   -17143467.130986
SN1P5   -11402992.498265
SN1P0    -4379402.937880
SN0P5      -58840.512624
S0P0      3183091.200000
S0P5      6948768.438615
S1P0     10426136.917798
S1P5     16843606.243605
S2P0     23062762.387397
S2P5     31915408.491362
Name: 29668, dtype: float64

In [67]: vs
Out[67]: 
[-inf,
 -23190928.548734467,
 -17143467.130985506,
 -11402992.498265419,
 -4379402.9378800439,
 -58840.512624127128,
 0.0,
 3183091.2000000477,
 6948768.4386154842,
 10426136.917797647,
 16843606.243605122,
 23062762.387396548,
 31915408.491362378,
 inf]

In [68]: plex['flags_10'] = pd.cut(plex.price_delta_10, vs,labels = ses)

In [69]: plex
Out[69]: 
            itemid       volume      avgprice   price_delta_10  \
price_date                                                       
2013-09-29   29668  3618.000000  5.634115e+08              NaN   
2013-10-09   29668  2864.000000  5.822112e+08  15696713.600000   
2013-10-19   29668  2815.500000  5.995163e+08   5999456.000000   
2013-10-29   29668  2973.900000  6.178727e+08   7998531.840000   
2013-11-08   29668  3702.800000  5.960753e+08 -11122694.400000   
2013-11-18   29668  2590.900000  6.119579e+08   8973925.120000   
2013-11-28   29668  3217.600000  6.069350e+08  -3266832.640000   
2013-12-08   29668  3781.300000  6.061040e+08   1184389.120000   
2013-12-18   29668  2608.100000  6.184561e+08   3589482.880000   
2013-12-28   29668  3222.300000  6.100109e+08  -5537785.600000   
2014-01-07   29668  3115.300000  6.038790e+08     25787.520000   
2014-01-17   29668  2695.200000  6.192251e+08   7832128.000000   
2014-01-27   29668  2715.700000  6.364393e+08   7650744.320000   
2014-02-06   29668  3333.200000  6.260553e+08  -6769385.600000   
2014-02-16   29668  3525.100000  6.265829e+08    908028.160000   
2014-02-26   29668  2940.300000  6.338582e+08   3996925.440000   
2014-03-08   29668  3131.600000  6.426273e+08   3791324.160000   
2014-03-18   29668  3106.600000  6.556332e+08   4720707.200000   
2014-03-28   29668  2799.200000  6.860331e+08  17914357.120000   
2014-04-07   29668  2762.000000  6.997440e+08   2805587.840000   
2014-04-17   29668  2792.700000  7.227945e+08   8123210.240000   
2014-04-27   29668  2348.100000  7.214336e+08   2124375.040000   
2014-05-07   29668  3064.900000  7.150953e+08  -4935132.800000   
2014-05-17   29668  2655.400000  7.180919e+08   2657504.640000   
2014-05-27   29668  2633.200000  7.362941e+08   9874816.640000   
2014-06-06   29668  3071.500000  7.373255e+08  -3867734.400000   
2014-06-16   29668  2829.900000  7.272342e+08  -1420538.880000   
2014-06-26   29668  2335.000000  7.374669e+08   5144547.200000   
2014-07-06   29668  2646.200000  7.566205e+08  10173649.280000   
2014-07-16   29668  2896.500000  7.989331e+08  17067144.960000   
2014-07-26   29668  3019.000000  7.934509e+08  -7374814.080000   
2014-08-05   29668  2556.400000  7.851353e+08     54288.000000   
2014-08-15   29668  2413.000000  7.841042e+08   -114849.920000   
2014-08-25   29668  2519.900000  7.953682e+08   5660084.480000   
2014-09-04   29668  2877.600000  7.760368e+08 -11567921.280000   
2014-09-14   29668  2379.500000  7.829489e+08   7379482.880000   
2014-09-24   29668  2170.400000  7.915569e+08   1914464.000000   
2014-10-04   29668  2418.700000  7.922143e+08   -992218.880000   
2014-10-14   29668  2197.000000  7.983773e+08   5661804.800000   
2014-10-24   29668  2293.700000  8.351625e+08  16881322.240000   
2014-11-03   29668  2617.444444  8.514309e+08   7949954.844444   

             price_delta_30 flags_10  
price_date                            
2013-09-29              NaN      NaN  
2013-10-09              NaN     1.00  
2013-10-19              NaN     0.02  
2013-10-29  17359706.666667     0.50  
2013-11-08  -7454336.853333    -1.00  
2013-11-18   5272510.720000     0.50  
2013-11-28    140382.293333    -0.50  
2013-12-08     68866.133333     0.01  
2013-12-18   8460093.653333     0.02  
2013-12-28  -1767410.133333    -1.00  
2014-01-07  -7543833.600000     0.01  
2014-01-17   8960109.440000     0.50  
2014-01-27  21761081.813333     0.50  
2014-02-06   1719893.973333    -1.00  
2014-02-16  -2513169.706667     0.01  
2014-02-26   4404568.533333     0.02  
2014-03-08  11169929.386667     0.02  
2014-03-18  15763286.400000     0.02  
2014-03-28  33410696.960000     1.50  
2014-04-07  27754135.253333     0.01  
2014-04-17  29551686.400000     0.50  
2014-04-27  11127324.373333     0.01  
2014-05-07  -2908350.506667    -1.00  
2014-05-17   -166139.306667     0.01  
2014-05-27  15666083.626667     0.50  
2014-06-06   9643203.626667    -0.50  
2014-06-16  -4854928.213333    -0.50  
2014-06-26   3410124.373333     0.02  
2014-07-06  20812529.066667     0.50  
2014-07-16  45388065.280000     1.50  
2014-07-26  17071409.920000    -1.00  
2014-08-05  -4122271.573333     0.01  
2014-08-15  -5937744.000000    -0.50  
2014-08-25   9032118.186667     0.02  
2014-09-04 -11140498.773333    -1.50  
2014-09-14  -1345141.973333     0.50  
2014-09-24   7284715.733333     0.01  
2014-10-04   6074824.533333    -0.50  
2014-10-14   6522495.573333     0.02  
2014-10-24  33761434.453333     1.50  
2014-11-03  34106611.437037     0.50  


In [70]: plex['price_delta_10','flags_10']
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-70-6a4a2ebce077> in <module>()
----> 1 plex['price_delta_10','flags_10']

D:\Anaconda\lib\site-packages\pandas\core\frame.pyc in __getitem__(self, key)
   1741             return self._getitem_multilevel(key)
   1742         else:
-> 1743             return self._getitem_column(key)
   1744 
   1745     def _getitem_column(self, key):

D:\Anaconda\lib\site-packages\pandas\core\frame.pyc in _getitem_column(self, key)
   1748         # get column
   1749         if self.columns.is_unique:
-> 1750             return self._get_item_cache(key)
   1751 
   1752         # duplicate columns & possible reduce dimensionaility

D:\Anaconda\lib\site-packages\pandas\core\generic.pyc in _get_item_cache(self, item)
   1056         res = cache.get(item)
   1057         if res is None:
-> 1058             values = self._data.get(item)
   1059             res = self._box_item_values(item, values)
   1060             cache[item] = res

D:\Anaconda\lib\site-packages\pandas\core\internals.pyc in get(self, item, fastpath)
   2804 
   2805             if not isnull(item):
-> 2806                 loc = self.items.get_loc(item)
   2807             else:
   2808                 indexer = np.arange(len(self.items))[isnull(self.items)]

D:\Anaconda\lib\site-packages\pandas\core\index.pyc in get_loc(self, key)
   1383         loc : int if unique index, possibly slice or mask if not
   1384         """
-> 1385         return self._engine.get_loc(_values_from_object(key))
   1386 
   1387     def get_value(self, series, key):

D:\Anaconda\lib\site-packages\pandas\index.pyd in pandas.index.IndexEngine.get_loc (pandas\index.c:3795)()

D:\Anaconda\lib\site-packages\pandas\index.pyd in pandas.index.IndexEngine.get_loc (pandas\index.c:3675)()

D:\Anaconda\lib\site-packages\pandas\hashtable.pyd in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12299)()

D:\Anaconda\lib\site-packages\pandas\hashtable.pyd in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12250)()

KeyError: ('price_delta_10', 'flags_10')

In [71]: plex[['price_delta_10','flags_10']]
Out[71]: 
             price_delta_10 flags_10
price_date                          
2013-09-29              NaN      NaN
2013-10-09  15696713.600000     1.00
2013-10-19   5999456.000000     0.02
2013-10-29   7998531.840000     0.50
2013-11-08 -11122694.400000    -1.00
2013-11-18   8973925.120000     0.50
2013-11-28  -3266832.640000    -0.50
2013-12-08   1184389.120000     0.01
2013-12-18   3589482.880000     0.02
2013-12-28  -5537785.600000    -1.00
2014-01-07     25787.520000     0.01
2014-01-17   7832128.000000     0.50
2014-01-27   7650744.320000     0.50
2014-02-06  -6769385.600000    -1.00
2014-02-16    908028.160000     0.01
2014-02-26   3996925.440000     0.02
2014-03-08   3791324.160000     0.02
2014-03-18   4720707.200000     0.02
2014-03-28  17914357.120000     1.50
2014-04-07   2805587.840000     0.01
2014-04-17   8123210.240000     0.50
2014-04-27   2124375.040000     0.01
2014-05-07  -4935132.800000    -1.00
2014-05-17   2657504.640000     0.01
2014-05-27   9874816.640000     0.50
2014-06-06  -3867734.400000    -0.50
2014-06-16  -1420538.880000    -0.50
2014-06-26   5144547.200000     0.02
2014-07-06  10173649.280000     0.50
2014-07-16  17067144.960000     1.50
2014-07-26  -7374814.080000    -1.00
2014-08-05     54288.000000     0.01
2014-08-15   -114849.920000    -0.50
2014-08-25   5660084.480000     0.02
2014-09-04 -11567921.280000    -1.50
2014-09-14   7379482.880000     0.50
2014-09-24   1914464.000000     0.01
2014-10-04   -992218.880000    -0.50
2014-10-14   5661804.800000     0.02
2014-10-24  16881322.240000     1.50
2014-11-03   7949954.844444     0.50

In [72]: plex[abs(plex['flags_10']) >= 1.0, ['price_delta_10','flags_10']]
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-72-a278ca143feb> in <module>()
----> 1 plex[abs(plex['flags_10']) >= 1.0, ['price_delta_10','flags_10']]

D:\Anaconda\lib\site-packages\pandas\core\generic.pyc in __abs__(self)
    710 
    711     def __abs__(self):
--> 712         return self.abs()
    713 
    714     #----------------------------------------------------------------------

D:\Anaconda\lib\site-packages\pandas\core\generic.pyc in abs(self)
   3660         abs: type of caller
   3661         """
-> 3662         return np.abs(self)
   3663 
   3664     _shared_docs['describe'] = """

D:\Anaconda\lib\site-packages\pandas\core\series.pyc in __array_prepare__(self, result, context)
    400                             "the numpy op {op}".format(obj=type(obj).__name__,
    401                                                        dtype=getattr(obj,'dtype',None),
--> 402                                                        op=context[0].__name__))
    403         return result
    404 

TypeError: Series with dtype category cannot perform the numpy op absolute

In [73]: plex[plex['flags_10'].abs() >= 1.0, ['price_delta_10','flags_10']]
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-73-d06c433b533d> in <module>()
----> 1 plex[plex['flags_10'].abs() >= 1.0, ['price_delta_10','flags_10']]

D:\Anaconda\lib\site-packages\pandas\core\generic.pyc in abs(self)
   3660         abs: type of caller
   3661         """
-> 3662         return np.abs(self)
   3663 
   3664     _shared_docs['describe'] = """

D:\Anaconda\lib\site-packages\pandas\core\series.pyc in __array_prepare__(self, result, context)
    400                             "the numpy op {op}".format(obj=type(obj).__name__,
    401                                                        dtype=getattr(obj,'dtype',None),
--> 402                                                        op=context[0].__name__))
    403         return result
    404 

TypeError: Series with dtype category cannot perform the numpy op absolute

In [74]: plex[['price_delta_10','flags_10']]
Out[74]: 
             price_delta_10 flags_10
price_date                          
2013-09-29              NaN      NaN
2013-10-09  15696713.600000     1.00
2013-10-19   5999456.000000     0.02
2013-10-29   7998531.840000     0.50
2013-11-08 -11122694.400000    -1.00
2013-11-18   8973925.120000     0.50
2013-11-28  -3266832.640000    -0.50
2013-12-08   1184389.120000     0.01
2013-12-18   3589482.880000     0.02
2013-12-28  -5537785.600000    -1.00
2014-01-07     25787.520000     0.01
2014-01-17   7832128.000000     0.50
2014-01-27   7650744.320000     0.50
2014-02-06  -6769385.600000    -1.00
2014-02-16    908028.160000     0.01
2014-02-26   3996925.440000     0.02
2014-03-08   3791324.160000     0.02
2014-03-18   4720707.200000     0.02
2014-03-28  17914357.120000     1.50
2014-04-07   2805587.840000     0.01
2014-04-17   8123210.240000     0.50
2014-04-27   2124375.040000     0.01
2014-05-07  -4935132.800000    -1.00
2014-05-17   2657504.640000     0.01
2014-05-27   9874816.640000     0.50
2014-06-06  -3867734.400000    -0.50
2014-06-16  -1420538.880000    -0.50
2014-06-26   5144547.200000     0.02
2014-07-06  10173649.280000     0.50
2014-07-16  17067144.960000     1.50
2014-07-26  -7374814.080000    -1.00
2014-08-05     54288.000000     0.01
2014-08-15   -114849.920000    -0.50
2014-08-25   5660084.480000     0.02
2014-09-04 -11567921.280000    -1.50
2014-09-14   7379482.880000     0.50
2014-09-24   1914464.000000     0.01
2014-10-04   -992218.880000    -0.50
2014-10-14   5661804.800000     0.02
2014-10-24  16881322.240000     1.50
2014-11-03   7949954.844444     0.50

In [75]: plex['flags_10']
Out[75]: 
price_date
2013-09-29     NaN
2013-10-09    1.00
2013-10-19    0.02
2013-10-29    0.50
2013-11-08   -1.00
2013-11-18    0.50
2013-11-28   -0.50
2013-12-08    0.01
2013-12-18    0.02
2013-12-28   -1.00
2014-01-07    0.01
2014-01-17    0.50
2014-01-27    0.50
2014-02-06   -1.00
2014-02-16    0.01
2014-02-26    0.02
2014-03-08    0.02
2014-03-18    0.02
2014-03-28    1.50
2014-04-07    0.01
2014-04-17    0.50
2014-04-27    0.01
2014-05-07   -1.00
2014-05-17    0.01
2014-05-27    0.50
2014-06-06   -0.50
2014-06-16   -0.50
2014-06-26    0.02
2014-07-06    0.50
2014-07-16    1.50
2014-07-26   -1.00
2014-08-05    0.01
2014-08-15   -0.50
2014-08-25    0.02
2014-09-04   -1.50
2014-09-14    0.50
2014-09-24    0.01
2014-10-04   -0.50
2014-10-14    0.02
2014-10-24    1.50
2014-11-03    0.50
Freq: 10DName: flags_10, dtype: category
Categories (13, float64): [-2.50 < -2.00 < -1.50 < -1.00 ... 1.00 < 1.50 < 2.00 < 2.50]

In [76]: plex['flags_10'].iloc[2]
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-76-959f401b9da0> in <module>()
----> 1 plex['flags_10'].iloc[2]

D:\Anaconda\lib\site-packages\pandas\core\indexing.pyc in __getitem__(self, key)
   1192             return self._getitem_tuple(key)
   1193         else:
-> 1194             return self._getitem_axis(key, axis=0)
   1195 
   1196     def _getitem_axis(self, key, axis=0):

D:\Anaconda\lib\site-packages\pandas\core\indexing.pyc in _getitem_axis(self, key, axis)
   1462                 self._is_valid_integer(key, axis)
   1463 
-> 1464             return self._get_loc(key, axis=axis)
   1465 
   1466     def _convert_to_indexer(self, obj, axis=0, is_setter=False):

D:\Anaconda\lib\site-packages\pandas\core\indexing.pyc in _get_loc(self, key, axis)
     89 
     90     def _get_loc(self, key, axis=0):
---> 91         return self.obj._ixs(key, axis=axis)
     92 
     93     def _slice(self, obj, axis=0, typ=None):

D:\Anaconda\lib\site-packages\pandas\core\series.pyc in _ixs(self, i, axis)
    488                     return self.take(i, axis=axis, convert=True)
    489                 else:
--> 490                     return _index.get_value_at(self, i)
    491 
    492     @property

TypeError: Argument 'arr' has incorrect type (expected numpy.ndarray, got Series)

In [77]: plex['flags_10'].loc[2]
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-77-aee1bebb6afa> in <module>()
----> 1 plex['flags_10'].loc[2]

D:\Anaconda\lib\site-packages\pandas\core\indexing.pyc in __getitem__(self, key)
   1192             return self._getitem_tuple(key)
   1193         else:
-> 1194             return self._getitem_axis(key, axis=0)
   1195 
   1196     def _getitem_axis(self, key, axis=0):

D:\Anaconda\lib\site-packages\pandas\core\indexing.pyc in _getitem_axis(self, key, axis)
   1335 
   1336         # fall thru to straight lookup
-> 1337         self._has_valid_type(key, axis)
   1338         return self._get_label(key, axis=axis)
   1339 

D:\Anaconda\lib\site-packages\pandas\core\indexing.pyc in _has_valid_type(self, key, axis)
   1297                 raise
   1298             except:
-> 1299                 error()
   1300 
   1301         return True

D:\Anaconda\lib\site-packages\pandas\core\indexing.pyc in error()
   1284                         "cannot use label indexing with a null key")
   1285                 raise KeyError("the label [%s] is not in the [%s]" %
-> 1286                                (key, self.obj._get_axis_name(axis)))
   1287 
   1288             try:

KeyError: 'the label [2] is not in the [index]'

In [78]: plex['flags_10'].ix[2]
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-78-db06296a9b54> in <module>()
----> 1 plex['flags_10'].ix[2]

D:\Anaconda\lib\site-packages\pandas\core\indexing.pyc in __getitem__(self, key)
     70             return self._getitem_tuple(key)
     71         else:
---> 72             return self._getitem_axis(key, axis=0)
     73 
     74     def _get_label(self, label, axis=0):

D:\Anaconda\lib\site-packages\pandas\core\indexing.pyc in _getitem_axis(self, key, axis)
    916                 # this is the fallback! (for a non-float, non-integer index)
    917                 if not labels.is_floating() and not labels.is_integer():
--> 918                     return self._get_loc(key, axis=axis)
    919 
    920             return self._get_label(key, axis=axis)

D:\Anaconda\lib\site-packages\pandas\core\indexing.pyc in _get_loc(self, key, axis)
     89 
     90     def _get_loc(self, key, axis=0):
---> 91         return self.obj._ixs(key, axis=axis)
     92 
     93     def _slice(self, obj, axis=0, typ=None):

D:\Anaconda\lib\site-packages\pandas\core\series.pyc in _ixs(self, i, axis)
    488                     return self.take(i, axis=axis, convert=True)
    489                 else:
--> 490                     return _index.get_value_at(self, i)
    491 
    492     @property

TypeError: Argument 'arr' has incorrect type (expected numpy.ndarray, got Series)

In [79]: plex['flags_10'].at(2)
Out[79]: <pandas.core.indexing._AtIndexer at 0x2f3b8898>

In [80]: plex['flags_10'].irow(2)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-80-b568e7e31f65> in <module>()
----> 1 plex['flags_10'].irow(2)

D:\Anaconda\lib\site-packages\pandas\core\series.pyc in _ixs(self, i, axis)
    488                     return self.take(i, axis=axis, convert=True)
    489                 else:
--> 490                     return _index.get_value_at(self, i)
    491 
    492     @property

TypeError: Argument 'arr' has incorrect type (expected numpy.ndarray, got Series)

In [81]: plex
Out[81]: 
            itemid       volume      avgprice   price_delta_10  \
price_date                                                       
2013-09-29   29668  3618.000000  5.634115e+08              NaN   
2013-10-09   29668  2864.000000  5.822112e+08  15696713.600000   
2013-10-19   29668  2815.500000  5.995163e+08   5999456.000000   
2013-10-29   29668  2973.900000  6.178727e+08   7998531.840000   
2013-11-08   29668  3702.800000  5.960753e+08 -11122694.400000   
2013-11-18   29668  2590.900000  6.119579e+08   8973925.120000   
2013-11-28   29668  3217.600000  6.069350e+08  -3266832.640000   
2013-12-08   29668  3781.300000  6.061040e+08   1184389.120000   
2013-12-18   29668  2608.100000  6.184561e+08   3589482.880000   
2013-12-28   29668  3222.300000  6.100109e+08  -5537785.600000   
2014-01-07   29668  3115.300000  6.038790e+08     25787.520000   
2014-01-17   29668  2695.200000  6.192251e+08   7832128.000000   
2014-01-27   29668  2715.700000  6.364393e+08   7650744.320000   
2014-02-06   29668  3333.200000  6.260553e+08  -6769385.600000   
2014-02-16   29668  3525.100000  6.265829e+08    908028.160000   
2014-02-26   29668  2940.300000  6.338582e+08   3996925.440000   
2014-03-08   29668  3131.600000  6.426273e+08   3791324.160000   
2014-03-18   29668  3106.600000  6.556332e+08   4720707.200000   
2014-03-28   29668  2799.200000  6.860331e+08  17914357.120000   
2014-04-07   29668  2762.000000  6.997440e+08   2805587.840000   
2014-04-17   29668  2792.700000  7.227945e+08   8123210.240000   
2014-04-27   29668  2348.100000  7.214336e+08   2124375.040000   
2014-05-07   29668  3064.900000  7.150953e+08  -4935132.800000   
2014-05-17   29668  2655.400000  7.180919e+08   2657504.640000   
2014-05-27   29668  2633.200000  7.362941e+08   9874816.640000   
2014-06-06   29668  3071.500000  7.373255e+08  -3867734.400000   
2014-06-16   29668  2829.900000  7.272342e+08  -1420538.880000   
2014-06-26   29668  2335.000000  7.374669e+08   5144547.200000   
2014-07-06   29668  2646.200000  7.566205e+08  10173649.280000   
2014-07-16   29668  2896.500000  7.989331e+08  17067144.960000   
2014-07-26   29668  3019.000000  7.934509e+08  -7374814.080000   
2014-08-05   29668  2556.400000  7.851353e+08     54288.000000   
2014-08-15   29668  2413.000000  7.841042e+08   -114849.920000   
2014-08-25   29668  2519.900000  7.953682e+08   5660084.480000   
2014-09-04   29668  2877.600000  7.760368e+08 -11567921.280000   
2014-09-14   29668  2379.500000  7.829489e+08   7379482.880000   
2014-09-24   29668  2170.400000  7.915569e+08   1914464.000000   
2014-10-04   29668  2418.700000  7.922143e+08   -992218.880000   
2014-10-14   29668  2197.000000  7.983773e+08   5661804.800000   
2014-10-24   29668  2293.700000  8.351625e+08  16881322.240000   
2014-11-03   29668  2617.444444  8.514309e+08   7949954.844444   

             price_delta_30 flags_10  
price_date                            
2013-09-29              NaN      NaN  
2013-10-09              NaN     1.00  
2013-10-19              NaN     0.02  
2013-10-29  17359706.666667     0.50  
2013-11-08  -7454336.853333    -1.00  
2013-11-18   5272510.720000     0.50  
2013-11-28    140382.293333    -0.50  
2013-12-08     68866.133333     0.01  
2013-12-18   8460093.653333     0.02  
2013-12-28  -1767410.133333    -1.00  
2014-01-07  -7543833.600000     0.01  
2014-01-17   8960109.440000     0.50  
2014-01-27  21761081.813333     0.50  
2014-02-06   1719893.973333    -1.00  
2014-02-16  -2513169.706667     0.01  
2014-02-26   4404568.533333     0.02  
2014-03-08  11169929.386667     0.02  
2014-03-18  15763286.400000     0.02  
2014-03-28  33410696.960000     1.50  
2014-04-07  27754135.253333     0.01  
2014-04-17  29551686.400000     0.50  
2014-04-27  11127324.373333     0.01  
2014-05-07  -2908350.506667    -1.00  
2014-05-17   -166139.306667     0.01  
2014-05-27  15666083.626667     0.50  
2014-06-06   9643203.626667    -0.50  
2014-06-16  -4854928.213333    -0.50  
2014-06-26   3410124.373333     0.02  
2014-07-06  20812529.066667     0.50  
2014-07-16  45388065.280000     1.50  
2014-07-26  17071409.920000    -1.00  
2014-08-05  -4122271.573333     0.01  
2014-08-15  -5937744.000000    -0.50  
2014-08-25   9032118.186667     0.02  
2014-09-04 -11140498.773333    -1.50  
2014-09-14  -1345141.973333     0.50  
2014-09-24   7284715.733333     0.01  
2014-10-04   6074824.533333    -0.50  
2014-10-14   6522495.573333     0.02  
2014-10-24  33761434.453333     1.50  
2014-11-03  34106611.437037     0.50  


In [82]: plex.loc['2013-10-29','flags_10']
Out[82]: 0.5

In [83]: plex['flags_10']
Out[83]: 
price_date
2013-09-29     NaN
2013-10-09    1.00
2013-10-19    0.02
2013-10-29    0.50
2013-11-08   -1.00
2013-11-18    0.50
2013-11-28   -0.50
2013-12-08    0.01
2013-12-18    0.02
2013-12-28   -1.00
2014-01-07    0.01
2014-01-17    0.50
2014-01-27    0.50
2014-02-06   -1.00
2014-02-16    0.01
2014-02-26    0.02
2014-03-08    0.02
2014-03-18    0.02
2014-03-28    1.50
2014-04-07    0.01
2014-04-17    0.50
2014-04-27    0.01
2014-05-07   -1.00
2014-05-17    0.01
2014-05-27    0.50
2014-06-06   -0.50
2014-06-16   -0.50
2014-06-26    0.02
2014-07-06    0.50
2014-07-16    1.50
2014-07-26   -1.00
2014-08-05    0.01
2014-08-15   -0.50
2014-08-25    0.02
2014-09-04   -1.50
2014-09-14    0.50
2014-09-24    0.01
2014-10-04   -0.50
2014-10-14    0.02
2014-10-24    1.50
2014-11-03    0.50
Freq: 10DName: flags_10, dtype: category
Categories (13, float64): [-2.50 < -2.00 < -1.50 < -1.00 ... 1.00 < 1.50 < 2.00 < 2.50]

In [84]: vs
Out[84]: 
[-inf,
 -23190928.548734467,
 -17143467.130985506,
 -11402992.498265419,
 -4379402.9378800439,
 -58840.512624127128,
 0.0,
 3183091.2000000477,
 6948768.4386154842,
 10426136.917797647,
 16843606.243605122,
 23062762.387396548,
 31915408.491362378,
 inf]

In [85]: plex['flags_10'] = pd.cut(plex.price_delta_10, vs)

In [86]: plex
Out[86]: 
            itemid       volume      avgprice   price_delta_10  \
price_date                                                       
2013-09-29   29668  3618.000000  5.634115e+08              NaN   
2013-10-09   29668  2864.000000  5.822112e+08  15696713.600000   
2013-10-19   29668  2815.500000  5.995163e+08   5999456.000000   
2013-10-29   29668  2973.900000  6.178727e+08   7998531.840000   
2013-11-08   29668  3702.800000  5.960753e+08 -11122694.400000   
2013-11-18   29668  2590.900000  6.119579e+08   8973925.120000   
2013-11-28   29668  3217.600000  6.069350e+08  -3266832.640000   
2013-12-08   29668  3781.300000  6.061040e+08   1184389.120000   
2013-12-18   29668  2608.100000  6.184561e+08   3589482.880000   
2013-12-28   29668  3222.300000  6.100109e+08  -5537785.600000   
2014-01-07   29668  3115.300000  6.038790e+08     25787.520000   
2014-01-17   29668  2695.200000  6.192251e+08   7832128.000000   
2014-01-27   29668  2715.700000  6.364393e+08   7650744.320000   
2014-02-06   29668  3333.200000  6.260553e+08  -6769385.600000   
2014-02-16   29668  3525.100000  6.265829e+08    908028.160000   
2014-02-26   29668  2940.300000  6.338582e+08   3996925.440000   
2014-03-08   29668  3131.600000  6.426273e+08   3791324.160000   
2014-03-18   29668  3106.600000  6.556332e+08   4720707.200000   
2014-03-28   29668  2799.200000  6.860331e+08  17914357.120000   
2014-04-07   29668  2762.000000  6.997440e+08   2805587.840000   
2014-04-17   29668  2792.700000  7.227945e+08   8123210.240000   
2014-04-27   29668  2348.100000  7.214336e+08   2124375.040000   
2014-05-07   29668  3064.900000  7.150953e+08  -4935132.800000   
2014-05-17   29668  2655.400000  7.180919e+08   2657504.640000   
2014-05-27   29668  2633.200000  7.362941e+08   9874816.640000   
2014-06-06   29668  3071.500000  7.373255e+08  -3867734.400000   
2014-06-16   29668  2829.900000  7.272342e+08  -1420538.880000   
2014-06-26   29668  2335.000000  7.374669e+08   5144547.200000   
2014-07-06   29668  2646.200000  7.566205e+08  10173649.280000   
2014-07-16   29668  2896.500000  7.989331e+08  17067144.960000   
2014-07-26   29668  3019.000000  7.934509e+08  -7374814.080000   
2014-08-05   29668  2556.400000  7.851353e+08     54288.000000   
2014-08-15   29668  2413.000000  7.841042e+08   -114849.920000   
2014-08-25   29668  2519.900000  7.953682e+08   5660084.480000   
2014-09-04   29668  2877.600000  7.760368e+08 -11567921.280000   
2014-09-14   29668  2379.500000  7.829489e+08   7379482.880000   
2014-09-24   29668  2170.400000  7.915569e+08   1914464.000000   
2014-10-04   29668  2418.700000  7.922143e+08   -992218.880000   
2014-10-14   29668  2197.000000  7.983773e+08   5661804.800000   
2014-10-24   29668  2293.700000  8.351625e+08  16881322.240000   
2014-11-03   29668  2617.444444  8.514309e+08   7949954.844444   

             price_delta_30                        flags_10  
price_date                                                   
2013-09-29              NaN                             NaN  
2013-10-09              NaN    (10426136.918, 16843606.244]  
2013-10-19              NaN        (3183091.2, 6948768.439]  
2013-10-29  17359706.666667     (6948768.439, 10426136.918]  
2013-11-08  -7454336.853333   (-11402992.498, -4379402.938]  
2013-11-18   5272510.720000     (6948768.439, 10426136.918]  
2013-11-28    140382.293333      (-4379402.938, -58840.513]  
2013-12-08     68866.133333                  (0, 3183091.2]  
2013-12-18   8460093.653333        (3183091.2, 6948768.439]  
2013-12-28  -1767410.133333   (-11402992.498, -4379402.938]  
2014-01-07  -7543833.600000                  (0, 3183091.2]  
2014-01-17   8960109.440000     (6948768.439, 10426136.918]  
2014-01-27  21761081.813333     (6948768.439, 10426136.918]  
2014-02-06   1719893.973333   (-11402992.498, -4379402.938]  
2014-02-16  -2513169.706667                  (0, 3183091.2]  
2014-02-26   4404568.533333        (3183091.2, 6948768.439]  
2014-03-08  11169929.386667        (3183091.2, 6948768.439]  
2014-03-18  15763286.400000        (3183091.2, 6948768.439]  
2014-03-28  33410696.960000    (16843606.244, 23062762.387]  
2014-04-07  27754135.253333                  (0, 3183091.2]  
2014-04-17  29551686.400000     (6948768.439, 10426136.918]  
2014-04-27  11127324.373333                  (0, 3183091.2]  
2014-05-07  -2908350.506667   (-11402992.498, -4379402.938]  
2014-05-17   -166139.306667                  (0, 3183091.2]  
2014-05-27  15666083.626667     (6948768.439, 10426136.918]  
2014-06-06   9643203.626667      (-4379402.938, -58840.513]  
2014-06-16  -4854928.213333      (-4379402.938, -58840.513]  
2014-06-26   3410124.373333        (3183091.2, 6948768.439]  
2014-07-06  20812529.066667     (6948768.439, 10426136.918]  
2014-07-16  45388065.280000    (16843606.244, 23062762.387]  
2014-07-26  17071409.920000   (-11402992.498, -4379402.938]  
2014-08-05  -4122271.573333                  (0, 3183091.2]  
2014-08-15  -5937744.000000      (-4379402.938, -58840.513]  
2014-08-25   9032118.186667        (3183091.2, 6948768.439]  
2014-09-04 -11140498.773333  (-17143467.131, -11402992.498]  
2014-09-14  -1345141.973333     (6948768.439, 10426136.918]  
2014-09-24   7284715.733333                  (0, 3183091.2]  
2014-10-04   6074824.533333      (-4379402.938, -58840.513]  
2014-10-14   6522495.573333        (3183091.2, 6948768.439]  
2014-10-24  33761434.453333    (16843606.244, 23062762.387]  
2014-11-03  34106611.437037     (6948768.439, 10426136.918]  


In [87]: plex['flags_10l'] = pd.cut(plex.price_delta_10, vs, labels=ses)

In [88]: plex
Out[88]: 
            itemid       volume      avgprice   price_delta_10  \
price_date                                                       
2013-09-29   29668  3618.000000  5.634115e+08              NaN   
2013-10-09   29668  2864.000000  5.822112e+08  15696713.600000   
2013-10-19   29668  2815.500000  5.995163e+08   5999456.000000   
2013-10-29   29668  2973.900000  6.178727e+08   7998531.840000   
2013-11-08   29668  3702.800000  5.960753e+08 -11122694.400000   
2013-11-18   29668  2590.900000  6.119579e+08   8973925.120000   
2013-11-28   29668  3217.600000  6.069350e+08  -3266832.640000   
2013-12-08   29668  3781.300000  6.061040e+08   1184389.120000   
2013-12-18   29668  2608.100000  6.184561e+08   3589482.880000   
2013-12-28   29668  3222.300000  6.100109e+08  -5537785.600000   
2014-01-07   29668  3115.300000  6.038790e+08     25787.520000   
2014-01-17   29668  2695.200000  6.192251e+08   7832128.000000   
2014-01-27   29668  2715.700000  6.364393e+08   7650744.320000   
2014-02-06   29668  3333.200000  6.260553e+08  -6769385.600000   
2014-02-16   29668  3525.100000  6.265829e+08    908028.160000   
2014-02-26   29668  2940.300000  6.338582e+08   3996925.440000   
2014-03-08   29668  3131.600000  6.426273e+08   3791324.160000   
2014-03-18   29668  3106.600000  6.556332e+08   4720707.200000   
2014-03-28   29668  2799.200000  6.860331e+08  17914357.120000   
2014-04-07   29668  2762.000000  6.997440e+08   2805587.840000   
2014-04-17   29668  2792.700000  7.227945e+08   8123210.240000   
2014-04-27   29668  2348.100000  7.214336e+08   2124375.040000   
2014-05-07   29668  3064.900000  7.150953e+08  -4935132.800000   
2014-05-17   29668  2655.400000  7.180919e+08   2657504.640000   
2014-05-27   29668  2633.200000  7.362941e+08   9874816.640000   
2014-06-06   29668  3071.500000  7.373255e+08  -3867734.400000   
2014-06-16   29668  2829.900000  7.272342e+08  -1420538.880000   
2014-06-26   29668  2335.000000  7.374669e+08   5144547.200000   
2014-07-06   29668  2646.200000  7.566205e+08  10173649.280000   
2014-07-16   29668  2896.500000  7.989331e+08  17067144.960000   
2014-07-26   29668  3019.000000  7.934509e+08  -7374814.080000   
2014-08-05   29668  2556.400000  7.851353e+08     54288.000000   
2014-08-15   29668  2413.000000  7.841042e+08   -114849.920000   
2014-08-25   29668  2519.900000  7.953682e+08   5660084.480000   
2014-09-04   29668  2877.600000  7.760368e+08 -11567921.280000   
2014-09-14   29668  2379.500000  7.829489e+08   7379482.880000   
2014-09-24   29668  2170.400000  7.915569e+08   1914464.000000   
2014-10-04   29668  2418.700000  7.922143e+08   -992218.880000   
2014-10-14   29668  2197.000000  7.983773e+08   5661804.800000   
2014-10-24   29668  2293.700000  8.351625e+08  16881322.240000   
2014-11-03   29668  2617.444444  8.514309e+08   7949954.844444   

             price_delta_30                        flags_10 flags_10l  
price_date                                                             
2013-09-29              NaN                             NaN       NaN  
2013-10-09              NaN    (10426136.918, 16843606.244]      1.00  
2013-10-19              NaN        (3183091.2, 6948768.439]      0.02  
2013-10-29  17359706.666667     (6948768.439, 10426136.918]      0.50  
2013-11-08  -7454336.853333   (-11402992.498, -4379402.938]     -1.00  
2013-11-18   5272510.720000     (6948768.439, 10426136.918]      0.50  
2013-11-28    140382.293333      (-4379402.938, -58840.513]     -0.50  
2013-12-08     68866.133333                  (0, 3183091.2]      0.01  
2013-12-18   8460093.653333        (3183091.2, 6948768.439]      0.02  
2013-12-28  -1767410.133333   (-11402992.498, -4379402.938]     -1.00  
2014-01-07  -7543833.600000                  (0, 3183091.2]      0.01  
2014-01-17   8960109.440000     (6948768.439, 10426136.918]      0.50  
2014-01-27  21761081.813333     (6948768.439, 10426136.918]      0.50  
2014-02-06   1719893.973333   (-11402992.498, -4379402.938]     -1.00  
2014-02-16  -2513169.706667                  (0, 3183091.2]      0.01  
2014-02-26   4404568.533333        (3183091.2, 6948768.439]      0.02  
2014-03-08  11169929.386667        (3183091.2, 6948768.439]      0.02  
2014-03-18  15763286.400000        (3183091.2, 6948768.439]      0.02  
2014-03-28  33410696.960000    (16843606.244, 23062762.387]      1.50  
2014-04-07  27754135.253333                  (0, 3183091.2]      0.01  
2014-04-17  29551686.400000     (6948768.439, 10426136.918]      0.50  
2014-04-27  11127324.373333                  (0, 3183091.2]      0.01  
2014-05-07  -2908350.506667   (-11402992.498, -4379402.938]     -1.00  
2014-05-17   -166139.306667                  (0, 3183091.2]      0.01  
2014-05-27  15666083.626667     (6948768.439, 10426136.918]      0.50  
2014-06-06   9643203.626667      (-4379402.938, -58840.513]     -0.50  
2014-06-16  -4854928.213333      (-4379402.938, -58840.513]     -0.50  
2014-06-26   3410124.373333        (3183091.2, 6948768.439]      0.02  
2014-07-06  20812529.066667     (6948768.439, 10426136.918]      0.50  
2014-07-16  45388065.280000    (16843606.244, 23062762.387]      1.50  
2014-07-26  17071409.920000   (-11402992.498, -4379402.938]     -1.00  
2014-08-05  -4122271.573333                  (0, 3183091.2]      0.01  
2014-08-15  -5937744.000000      (-4379402.938, -58840.513]     -0.50  
2014-08-25   9032118.186667        (3183091.2, 6948768.439]      0.02  
2014-09-04 -11140498.773333  (-17143467.131, -11402992.498]     -1.50  
2014-09-14  -1345141.973333     (6948768.439, 10426136.918]      0.50  
2014-09-24   7284715.733333                  (0, 3183091.2]      0.01  
2014-10-04   6074824.533333      (-4379402.938, -58840.513]     -0.50  
2014-10-14   6522495.573333        (3183091.2, 6948768.439]      0.02  
2014-10-24  33761434.453333    (16843606.244, 23062762.387]      1.50  
2014-11-03  34106611.437037     (6948768.439, 10426136.918]      0.50  


In [89]: v.stats.loc[29668]
Out[89]: 
volume  N         400.000000
        MIN      1798.000000
        P10      2234.100000
        MED      2735.000000
        AVG      2818.417500
        P90      3492.600000
        MAX      6161.000000
        STD       536.331705
        SN2P5    1908.477656
        SN2P0    2009.231908
        SN1P5    2156.497173
        SN1P0    2345.303446
        SN0P5    2537.425912
        S0P0     2735.000000
        S0P5     2969.787044
...
price_delta_30  AVG       9127914.735669
                P90      42313020.373333
                MAX      67359460.266667
                STD      15439970.816218
                SN2P5   -18202593.497678
                SN2P0   -15108590.382784
                SN1P5    -9813902.008339
                SN1P0    -5179952.755853
                SN0P5     -129319.671850
                S0P0      7289070.933333
                S0P5     13293471.376838
                S1P0     25713885.336550
                S1P5     36204712.975368
                S2P0     43919069.140214
                S2P5     52673847.649421
Name: 29668, Length: 76, dtype: float64

In [90]: v.stats.loc[29668,'price_delta_10']
Out[90]: 
N             391.000000
MIN     -32959296.000000
P10      -7989368.960000
MED       3382576.000000
AVG       3156840.478772
P90      16122918.400000
MAX      40290374.400000
STD       9484471.510733
SN2P5   -23190928.548734
SN2P0   -17143467.130986
SN1P5   -11402992.498265
SN1P0    -4379402.937880
SN0P5      -58840.512624
S0P0      3183091.200000
S0P5      6948768.438615
S1P0     10426136.917798
S1P5     16843606.243605
S2P0     23062762.387397
S2P5     31915408.491362
Name: 29668, dtype: float64

In [91]: plex['price_delta_10', 'flags10','flags_10l']
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-91-5369206b089f> in <module>()
----> 1 plex['price_delta_10', 'flags10','flags_10l']

D:\Anaconda\lib\site-packages\pandas\core\frame.pyc in __getitem__(self, key)
   1741             return self._getitem_multilevel(key)
   1742         else:
-> 1743             return self._getitem_column(key)
   1744 
   1745     def _getitem_column(self, key):

D:\Anaconda\lib\site-packages\pandas\core\frame.pyc in _getitem_column(self, key)
   1748         # get column
   1749         if self.columns.is_unique:
-> 1750             return self._get_item_cache(key)
   1751 
   1752         # duplicate columns & possible reduce dimensionaility

D:\Anaconda\lib\site-packages\pandas\core\generic.pyc in _get_item_cache(self, item)
   1056         res = cache.get(item)
   1057         if res is None:
-> 1058             values = self._data.get(item)
   1059             res = self._box_item_values(item, values)
   1060             cache[item] = res

D:\Anaconda\lib\site-packages\pandas\core\internals.pyc in get(self, item, fastpath)
   2804 
   2805             if not isnull(item):
-> 2806                 loc = self.items.get_loc(item)
   2807             else:
   2808                 indexer = np.arange(len(self.items))[isnull(self.items)]

D:\Anaconda\lib\site-packages\pandas\core\index.pyc in get_loc(self, key)
   1383         loc : int if unique index, possibly slice or mask if not
   1384         """
-> 1385         return self._engine.get_loc(_values_from_object(key))
   1386 
   1387     def get_value(self, series, key):

D:\Anaconda\lib\site-packages\pandas\index.pyd in pandas.index.IndexEngine.get_loc (pandas\index.c:3795)()

D:\Anaconda\lib\site-packages\pandas\index.pyd in pandas.index.IndexEngine.get_loc (pandas\index.c:3675)()

D:\Anaconda\lib\site-packages\pandas\hashtable.pyd in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12299)()

D:\Anaconda\lib\site-packages\pandas\hashtable.pyd in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12250)()

KeyError: ('price_delta_10', 'flags10', 'flags_10l')

In [92]: plex[['price_delta_10', 'flags10','flags_10l']]
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-92-84fc06ca53eb> in <module>()
----> 1 plex[['price_delta_10', 'flags10','flags_10l']]

D:\Anaconda\lib\site-packages\pandas\core\frame.pyc in __getitem__(self, key)
   1735         if isinstance(key, (Series, np.ndarray, Index, list)):
   1736             # either boolean or fancy integer index
-> 1737             return self._getitem_array(key)
   1738         elif isinstance(key, DataFrame):
   1739             return self._getitem_frame(key)

D:\Anaconda\lib\site-packages\pandas\core\frame.pyc in _getitem_array(self, key)
   1779             return self.take(indexer, axis=0, convert=False)
   1780         else:
-> 1781             indexer = self.ix._convert_to_indexer(key, axis=1)
   1782             return self.take(indexer, axis=1, convert=True)
   1783 

D:\Anaconda\lib\site-packages\pandas\core\indexing.pyc in _convert_to_indexer(self, obj, axis, is_setter)
   1133                     if isinstance(obj, tuple) and is_setter:
   1134                         return {'key': obj}
-> 1135                     raise KeyError('%s not in index' % objarr[mask])
   1136 
   1137                 return _values_from_object(indexer)

KeyError: "['flags10'] not in index"

In [93]: plex
Out[93]: 
            itemid       volume      avgprice   price_delta_10  \
price_date                                                       
2013-09-29   29668  3618.000000  5.634115e+08              NaN   
2013-10-09   29668  2864.000000  5.822112e+08  15696713.600000   
2013-10-19   29668  2815.500000  5.995163e+08   5999456.000000   
2013-10-29   29668  2973.900000  6.178727e+08   7998531.840000   
2013-11-08   29668  3702.800000  5.960753e+08 -11122694.400000   
2013-11-18   29668  2590.900000  6.119579e+08   8973925.120000   
2013-11-28   29668  3217.600000  6.069350e+08  -3266832.640000   
2013-12-08   29668  3781.300000  6.061040e+08   1184389.120000   
2013-12-18   29668  2608.100000  6.184561e+08   3589482.880000   
2013-12-28   29668  3222.300000  6.100109e+08  -5537785.600000   
2014-01-07   29668  3115.300000  6.038790e+08     25787.520000   
2014-01-17   29668  2695.200000  6.192251e+08   7832128.000000   
2014-01-27   29668  2715.700000  6.364393e+08   7650744.320000   
2014-02-06   29668  3333.200000  6.260553e+08  -6769385.600000   
2014-02-16   29668  3525.100000  6.265829e+08    908028.160000   
2014-02-26   29668  2940.300000  6.338582e+08   3996925.440000   
2014-03-08   29668  3131.600000  6.426273e+08   3791324.160000   
2014-03-18   29668  3106.600000  6.556332e+08   4720707.200000   
2014-03-28   29668  2799.200000  6.860331e+08  17914357.120000   
2014-04-07   29668  2762.000000  6.997440e+08   2805587.840000   
2014-04-17   29668  2792.700000  7.227945e+08   8123210.240000   
2014-04-27   29668  2348.100000  7.214336e+08   2124375.040000   
2014-05-07   29668  3064.900000  7.150953e+08  -4935132.800000   
2014-05-17   29668  2655.400000  7.180919e+08   2657504.640000   
2014-05-27   29668  2633.200000  7.362941e+08   9874816.640000   
2014-06-06   29668  3071.500000  7.373255e+08  -3867734.400000   
2014-06-16   29668  2829.900000  7.272342e+08  -1420538.880000   
2014-06-26   29668  2335.000000  7.374669e+08   5144547.200000   
2014-07-06   29668  2646.200000  7.566205e+08  10173649.280000   
2014-07-16   29668  2896.500000  7.989331e+08  17067144.960000   
2014-07-26   29668  3019.000000  7.934509e+08  -7374814.080000   
2014-08-05   29668  2556.400000  7.851353e+08     54288.000000   
2014-08-15   29668  2413.000000  7.841042e+08   -114849.920000   
2014-08-25   29668  2519.900000  7.953682e+08   5660084.480000   
2014-09-04   29668  2877.600000  7.760368e+08 -11567921.280000   
2014-09-14   29668  2379.500000  7.829489e+08   7379482.880000   
2014-09-24   29668  2170.400000  7.915569e+08   1914464.000000   
2014-10-04   29668  2418.700000  7.922143e+08   -992218.880000   
2014-10-14   29668  2197.000000  7.983773e+08   5661804.800000   
2014-10-24   29668  2293.700000  8.351625e+08  16881322.240000   
2014-11-03   29668  2617.444444  8.514309e+08   7949954.844444   

             price_delta_30                        flags_10 flags_10l  
price_date                                                             
2013-09-29              NaN                             NaN       NaN  
2013-10-09              NaN    (10426136.918, 16843606.244]      1.00  
2013-10-19              NaN        (3183091.2, 6948768.439]      0.02  
2013-10-29  17359706.666667     (6948768.439, 10426136.918]      0.50  
2013-11-08  -7454336.853333   (-11402992.498, -4379402.938]     -1.00  
2013-11-18   5272510.720000     (6948768.439, 10426136.918]      0.50  
2013-11-28    140382.293333      (-4379402.938, -58840.513]     -0.50  
2013-12-08     68866.133333                  (0, 3183091.2]      0.01  
2013-12-18   8460093.653333        (3183091.2, 6948768.439]      0.02  
2013-12-28  -1767410.133333   (-11402992.498, -4379402.938]     -1.00  
2014-01-07  -7543833.600000                  (0, 3183091.2]      0.01  
2014-01-17   8960109.440000     (6948768.439, 10426136.918]      0.50  
2014-01-27  21761081.813333     (6948768.439, 10426136.918]      0.50  
2014-02-06   1719893.973333   (-11402992.498, -4379402.938]     -1.00  
2014-02-16  -2513169.706667                  (0, 3183091.2]      0.01  
2014-02-26   4404568.533333        (3183091.2, 6948768.439]      0.02  
2014-03-08  11169929.386667        (3183091.2, 6948768.439]      0.02  
2014-03-18  15763286.400000        (3183091.2, 6948768.439]      0.02  
2014-03-28  33410696.960000    (16843606.244, 23062762.387]      1.50  
2014-04-07  27754135.253333                  (0, 3183091.2]      0.01  
2014-04-17  29551686.400000     (6948768.439, 10426136.918]      0.50  
2014-04-27  11127324.373333                  (0, 3183091.2]      0.01  
2014-05-07  -2908350.506667   (-11402992.498, -4379402.938]     -1.00  
2014-05-17   -166139.306667                  (0, 3183091.2]      0.01  
2014-05-27  15666083.626667     (6948768.439, 10426136.918]      0.50  
2014-06-06   9643203.626667      (-4379402.938, -58840.513]     -0.50  
2014-06-16  -4854928.213333      (-4379402.938, -58840.513]     -0.50  
2014-06-26   3410124.373333        (3183091.2, 6948768.439]      0.02  
2014-07-06  20812529.066667     (6948768.439, 10426136.918]      0.50  
2014-07-16  45388065.280000    (16843606.244, 23062762.387]      1.50  
2014-07-26  17071409.920000   (-11402992.498, -4379402.938]     -1.00  
2014-08-05  -4122271.573333                  (0, 3183091.2]      0.01  
2014-08-15  -5937744.000000      (-4379402.938, -58840.513]     -0.50  
2014-08-25   9032118.186667        (3183091.2, 6948768.439]      0.02  
2014-09-04 -11140498.773333  (-17143467.131, -11402992.498]     -1.50  
2014-09-14  -1345141.973333     (6948768.439, 10426136.918]      0.50  
2014-09-24   7284715.733333                  (0, 3183091.2]      0.01  
2014-10-04   6074824.533333      (-4379402.938, -58840.513]     -0.50  
2014-10-14   6522495.573333        (3183091.2, 6948768.439]      0.02  
2014-10-24  33761434.453333    (16843606.244, 23062762.387]      1.50  
2014-11-03  34106611.437037     (6948768.439, 10426136.918]      0.50  

In [94]: plex.loc[:,['price_delta_10', 'flags10','flags_10l']]
Out[94]: 
             price_delta_10  flags10 flags_10l
price_date                                    
2013-09-29              NaN      NaN       NaN
2013-10-09  15696713.600000      NaN      1.00
2013-10-19   5999456.000000      NaN      0.02
2013-10-29   7998531.840000      NaN      0.50
2013-11-08 -11122694.400000      NaN     -1.00
2013-11-18   8973925.120000      NaN      0.50
2013-11-28  -3266832.640000      NaN     -0.50
2013-12-08   1184389.120000      NaN      0.01
2013-12-18   3589482.880000      NaN      0.02
2013-12-28  -5537785.600000      NaN     -1.00
2014-01-07     25787.520000      NaN      0.01
2014-01-17   7832128.000000      NaN      0.50
2014-01-27   7650744.320000      NaN      0.50
2014-02-06  -6769385.600000      NaN     -1.00
2014-02-16    908028.160000      NaN      0.01
2014-02-26   3996925.440000      NaN      0.02
2014-03-08   3791324.160000      NaN      0.02
2014-03-18   4720707.200000      NaN      0.02
2014-03-28  17914357.120000      NaN      1.50
2014-04-07   2805587.840000      NaN      0.01
2014-04-17   8123210.240000      NaN      0.50
2014-04-27   2124375.040000      NaN      0.01
2014-05-07  -4935132.800000      NaN     -1.00
2014-05-17   2657504.640000      NaN      0.01
2014-05-27   9874816.640000      NaN      0.50
2014-06-06  -3867734.400000      NaN     -0.50
2014-06-16  -1420538.880000      NaN     -0.50
2014-06-26   5144547.200000      NaN      0.02
2014-07-06  10173649.280000      NaN      0.50
2014-07-16  17067144.960000      NaN      1.50
2014-07-26  -7374814.080000      NaN     -1.00
2014-08-05     54288.000000      NaN      0.01
2014-08-15   -114849.920000      NaN     -0.50
2014-08-25   5660084.480000      NaN      0.02
2014-09-04 -11567921.280000      NaN     -1.50
2014-09-14   7379482.880000      NaN      0.50
2014-09-24   1914464.000000      NaN      0.01
2014-10-04   -992218.880000      NaN     -0.50
2014-10-14   5661804.800000      NaN      0.02
2014-10-24  16881322.240000      NaN      1.50
2014-11-03   7949954.844444      NaN      0.50

In [95]: plex.loc[:,['price_delta_10', 'flags_10','flags_10l']]
Out[95]: 
             price_delta_10                        flags_10 flags_10l
price_date                                                           
2013-09-29              NaN                             NaN       NaN
2013-10-09  15696713.600000    (10426136.918, 16843606.244]      1.00
2013-10-19   5999456.000000        (3183091.2, 6948768.439]      0.02
2013-10-29   7998531.840000     (6948768.439, 10426136.918]      0.50
2013-11-08 -11122694.400000   (-11402992.498, -4379402.938]     -1.00
2013-11-18   8973925.120000     (6948768.439, 10426136.918]      0.50
2013-11-28  -3266832.640000      (-4379402.938, -58840.513]     -0.50
2013-12-08   1184389.120000                  (0, 3183091.2]      0.01
2013-12-18   3589482.880000        (3183091.2, 6948768.439]      0.02
2013-12-28  -5537785.600000   (-11402992.498, -4379402.938]     -1.00
2014-01-07     25787.520000                  (0, 3183091.2]      0.01
2014-01-17   7832128.000000     (6948768.439, 10426136.918]      0.50
2014-01-27   7650744.320000     (6948768.439, 10426136.918]      0.50
2014-02-06  -6769385.600000   (-11402992.498, -4379402.938]     -1.00
2014-02-16    908028.160000                  (0, 3183091.2]      0.01
2014-02-26   3996925.440000        (3183091.2, 6948768.439]      0.02
2014-03-08   3791324.160000        (3183091.2, 6948768.439]      0.02
2014-03-18   4720707.200000        (3183091.2, 6948768.439]      0.02
2014-03-28  17914357.120000    (16843606.244, 23062762.387]      1.50
2014-04-07   2805587.840000                  (0, 3183091.2]      0.01
2014-04-17   8123210.240000     (6948768.439, 10426136.918]      0.50
2014-04-27   2124375.040000                  (0, 3183091.2]      0.01
2014-05-07  -4935132.800000   (-11402992.498, -4379402.938]     -1.00
2014-05-17   2657504.640000                  (0, 3183091.2]      0.01
2014-05-27   9874816.640000     (6948768.439, 10426136.918]      0.50
2014-06-06  -3867734.400000      (-4379402.938, -58840.513]     -0.50
2014-06-16  -1420538.880000      (-4379402.938, -58840.513]     -0.50
2014-06-26   5144547.200000        (3183091.2, 6948768.439]      0.02
2014-07-06  10173649.280000     (6948768.439, 10426136.918]      0.50
2014-07-16  17067144.960000    (16843606.244, 23062762.387]      1.50
2014-07-26  -7374814.080000   (-11402992.498, -4379402.938]     -1.00
2014-08-05     54288.000000                  (0, 3183091.2]      0.01
2014-08-15   -114849.920000      (-4379402.938, -58840.513]     -0.50
2014-08-25   5660084.480000        (3183091.2, 6948768.439]      0.02
2014-09-04 -11567921.280000  (-17143467.131, -11402992.498]     -1.50
2014-09-14   7379482.880000     (6948768.439, 10426136.918]      0.50
2014-09-24   1914464.000000                  (0, 3183091.2]      0.01
2014-10-04   -992218.880000      (-4379402.938, -58840.513]     -0.50
2014-10-14   5661804.800000        (3183091.2, 6948768.439]      0.02
2014-10-24  16881322.240000    (16843606.244, 23062762.387]      1.50
2014-11-03   7949954.844444     (6948768.439, 10426136.918]      0.50


In [96]: v.stats.loc[29668,'price_delta_10']
Out[96]: 
N             391.000000
MIN     -32959296.000000
P10      -7989368.960000
MED       3382576.000000
AVG       3156840.478772
P90      16122918.400000
MAX      40290374.400000
STD       9484471.510733
SN2P5   -23190928.548734
SN2P0   -17143467.130986
SN1P5   -11402992.498265
SN1P0    -4379402.937880
SN0P5      -58840.512624
S0P0      3183091.200000
S0P5      6948768.438615
S1P0     10426136.917798
S1P5     16843606.243605
S2P0     23062762.387397
S2P5     31915408.491362
Name: 29668, dtype: float64

In [97]: plex.loc[:,['price_delta_10', 'flags_10','flags_10l']].groupby('flags_10l')
Out[97]: <pandas.core.groupby.DataFrameGroupBy object at 0x000000002CE61E10>

In [98]: gs = plex.loc[:,['price_delta_10', 'flags_10','flags_10l']].groupby('flags_10l')

In [99]: gs
Out[99]: <pandas.core.groupby.DataFrameGroupBy object at 0x000000002CE61978>

In [100]: gs.groups()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-100-364b0fb57a8e> in <module>()
----> 1 gs.groups()

TypeError: 'dict' object is not callable

In [101]: gs.groups
Out[101]: 
{-1.5: [Timestamp('2014-09-04 00:00:00', offset='10D')],
 -1.0: [Timestamp('2013-11-08 00:00:00', offset='10D'),
  Timestamp('2013-12-28 00:00:00', offset='10D'),
  Timestamp('2014-02-06 00:00:00', offset='10D'),
  Timestamp('2014-05-07 00:00:00', offset='10D'),
  Timestamp('2014-07-26 00:00:00', offset='10D')],
 -0.5: [Timestamp('2013-11-28 00:00:00', offset='10D'),
  Timestamp('2014-06-06 00:00:00', offset='10D'),
  Timestamp('2014-06-16 00:00:00', offset='10D'),
  Timestamp('2014-08-15 00:00:00', offset='10D'),
  Timestamp('2014-10-04 00:00:00', offset='10D')],
 0.01: [Timestamp('2013-12-08 00:00:00', offset='10D'),
  Timestamp('2014-01-07 00:00:00', offset='10D'),
  Timestamp('2014-02-16 00:00:00', offset='10D'),
  Timestamp('2014-04-07 00:00:00', offset='10D'),
  Timestamp('2014-04-27 00:00:00', offset='10D'),
  Timestamp('2014-05-17 00:00:00', offset='10D'),
  Timestamp('2014-08-05 00:00:00', offset='10D'),
  Timestamp('2014-09-24 00:00:00', offset='10D')],
 0.02: [Timestamp('2013-10-19 00:00:00', offset='10D'),
  Timestamp('2013-12-18 00:00:00', offset='10D'),
  Timestamp('2014-02-26 00:00:00', offset='10D'),
  Timestamp('2014-03-08 00:00:00', offset='10D'),
  Timestamp('2014-03-18 00:00:00', offset='10D'),
  Timestamp('2014-06-26 00:00:00', offset='10D'),
  Timestamp('2014-08-25 00:00:00', offset='10D'),
  Timestamp('2014-10-14 00:00:00', offset='10D')],
 0.5: [Timestamp('2013-10-29 00:00:00', offset='10D'),
  Timestamp('2013-11-18 00:00:00', offset='10D'),
  Timestamp('2014-01-17 00:00:00', offset='10D'),
  Timestamp('2014-01-27 00:00:00', offset='10D'),
  Timestamp('2014-04-17 00:00:00', offset='10D'),
  Timestamp('2014-05-27 00:00:00', offset='10D'),
  Timestamp('2014-07-06 00:00:00', offset='10D'),
  Timestamp('2014-09-14 00:00:00', offset='10D'),
  Timestamp('2014-11-03 00:00:00', offset='10D')],
 1.0: [Timestamp('2013-10-09 00:00:00', offset='10D')],
 1.5: [Timestamp('2014-03-28 00:00:00', offset='10D'),
  Timestamp('2014-07-16 00:00:00', offset='10D'),
  Timestamp('2014-10-24 00:00:00', offset='10D')]}

In [102]: gs.get_group(-1.5)
Out[102]: 
            price_delta_10                        flags_10 flags_10l
price_date                                                          
2014-09-04    -11567921.28  (-17143467.131, -11402992.498]      -1.5

In [103]: gs.get_group(1.5)
Out[103]: 
            price_delta_10                      flags_10 flags_10l
price_date                                                        
2014-03-28     17914357.12  (16843606.244, 23062762.387]       1.5
2014-07-16     17067144.96  (16843606.244, 23062762.387]       1.5
2014-10-24     16881322.24  (16843606.244, 23062762.387]       1.5

In [104]: v.stats.loc[29668,'price_delta_10']
Out[104]: 
N             391.000000
MIN     -32959296.000000
P10      -7989368.960000
MED       3382576.000000
AVG       3156840.478772
P90      16122918.400000
MAX      40290374.400000
STD       9484471.510733
SN2P5   -23190928.548734
SN2P0   -17143467.130986
SN1P5   -11402992.498265
SN1P0    -4379402.937880
SN0P5      -58840.512624
S0P0      3183091.200000
S0P5      6948768.438615
S1P0     10426136.917798
S1P5     16843606.243605
S2P0     23062762.387397
S2P5     31915408.491362
Name: 29668, dtype: float64

In [105]: plex = v.market_data_groups[29668]
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-105-10396b9a72cf> in <module>()
----> 1 plex = v.market_data_groups[29668]

D:\Anaconda\lib\site-packages\pandas\core\groupby.pyc in __getitem__(self, key)
   3153         else:
   3154             if key not in self.obj:
-> 3155                 raise KeyError("Column not found: %s" % key)
   3156             # kind of a kludge
   3157             return SeriesGroupBy(self.obj[key], selection=key,

KeyError: 'Column not found: 29668'

In [106]: plex = v.market_data_groups.get_group(29668)

In [107]: plex['flags_10'] = pd.cut(plex.price_delta_10, vs)
-c:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy

In [108]: plex['flags_10l'] = pd.cut(plex.price_delta_10, vs, labels=ses)

In [109]: plex
Out[109]: 
         itemid price_date  volume   avgprice  price_delta_10  \
2440800   29668 2013-09-29    3618  563411520             NaN   
2440801   29668 2013-09-30    3262  565000000             NaN   
2440802   29668 2013-10-01    3018  567950080             NaN   
2440803   29668 2013-10-02    2916  574000000             NaN   
2440804   29668 2013-10-03    2868  581995008             NaN   
2440805   29668 2013-10-04    2662  582249984             NaN   
2440806   29668 2013-10-05    2895  585000000             NaN   
2440807   29668 2013-10-06    3134  585000000             NaN   
2440808   29668 2013-10-07    2659  588320000             NaN   
2440809   29668 2013-10-08    2516  596996992      18004633.6   
2440810   29668 2013-10-09    2710  595600000      13388793.6   
2440811   29668 2013-10-10    2822  596400000      11048793.6   
2440812   29668 2013-10-11    2880  598000000       9643801.6   
2440813   29668 2013-10-12    2972  593000000       2743801.6   
2440814   29668 2013-10-13    3278  596611008       4893209.6   
2440815   29668 2013-10-14    2576  598016000       4721600.0   
2440816   29668 2013-10-15    2343  599875968       5093971.2   
2440817   29668 2013-10-16    2677  599800000       3538003.2   
2440818   29668 2013-10-17    2669  600000000       2570003.2   
2440819   29668 2013-10-18    2813  604720000       6517702.4   
2440820   29668 2013-10-19    3125  608739968       9223673.6   
2440821   29668 2013-10-20    3227  606440960       5920569.6   
2440822   29668 2013-10-21    2584  612000000      10079609.6   
2440823   29668 2013-10-22    2463  612000000       8179609.6   
2440824   29668 2013-10-23    2718  620000000      13840710.4   
2440825   29668 2013-10-24    2885  627398976      18301388.8   
2440826   29668 2013-10-25    2862  630000000      17890009.6   
2440827   29668 2013-10-26    3109  621979968       7651980.8   
2440828   29668 2013-10-27    4084  616270016        315027.2   
2440829   29668 2013-10-28    2977  614748992      -2208896.0   
...         ...        ...     ...        ...             ...   
2441170   29668 2014-10-04    3138  780000000     -12214291.2   
2441171   29668 2014-10-05    2742  785999872      -5314406.4   
2441172   29668 2014-10-06    2432  789800000      -1211078.4   
2441173   29668 2014-10-07    2185  791800000        908921.6   
2441174   29668 2014-10-08    1908  799899008       8590131.2   
2441175   29668 2014-10-09    1919  799566144       8189651.2   
2441176   29668 2014-10-10    2166  800000000       8623507.2   
2441177   29668 2014-10-11    2519  800500032       8163532.8   
2441178   29668 2014-10-12    2178  805000000      11493497.6   
2441179   29668 2014-10-13    2012  804000128       8343609.6   
2441180   29668 2014-10-14    1909  807208000       8830681.6   
2441181   29668 2014-10-15    2104  819980992      18205561.6   
2441182   29668 2014-10-16    2079  833800000      27624569.6   
2441183   29668 2014-10-17    2204  829000000      19104569.6   
2441184   29668 2014-10-18    2568  828002112      15296371.2   
2441185   29668 2014-10-19    2415  829985920      14238201.6   
2441186   29668 2014-10-20    2121  835798976      16471360.0   
2441187   29668 2014-10-21    2251  839777024      16521708.8   
2441188   29668 2014-10-22    2283  845280000      17996684.8   
2441189   29668 2014-10-23    2301  846000000      14516697.6   
2441190   29668 2014-10-24    2611  844000000       8837497.6   
2441191   29668 2014-10-25    2872  837604992        680089.6   
2441192   29668 2014-10-26    2537  842798976       4974176.0   
2441193   29668 2014-10-27    2361  845000000       5575200.0   
2441194   29668 2014-10-28    2422  845000000       3875411.2   
2441195   29668 2014-10-29    2499  850004096       6877689.6   
2441196   29668 2014-10-30    2619  859030016      13580505.6   
2441197   29668 2014-10-31    2602  861000000      13428192.0   
2441198   29668 2014-11-01    3040  861499968      12306163.2   
2441199   29668 2014-11-02    2605  860939968      10252166.4   

          price_delta_30                        flags_10 flags_10l  
2440800              NaN                             NaN       NaN  
2440801              NaN                             NaN       NaN  
2440802              NaN                             NaN       NaN  
2440803              NaN                             NaN       NaN  
2440804              NaN                             NaN       NaN  
2440805              NaN                             NaN       NaN  
2440806              NaN                             NaN       NaN  
2440807              NaN                             NaN       NaN  
2440808              NaN                             NaN       NaN  
2440809              NaN    (16843606.244, 23062762.387]      1.50  
2440810              NaN    (10426136.918, 16843606.244]      1.00  
2440811              NaN    (10426136.918, 16843606.244]      1.00  
2440812              NaN     (6948768.439, 10426136.918]      0.50  
2440813              NaN                  (0, 3183091.2]      0.01  
2440814              NaN        (3183091.2, 6948768.439]      0.02  
2440815              NaN        (3183091.2, 6948768.439]      0.02  
2440816              NaN        (3183091.2, 6948768.439]      0.02  
2440817              NaN        (3183091.2, 6948768.439]      0.02  
2440818              NaN                  (0, 3183091.2]      0.01  
2440819              NaN        (3183091.2, 6948768.439]      0.02  
2440820              NaN     (6948768.439, 10426136.918]      0.50  
2440821              NaN        (3183091.2, 6948768.439]      0.02  
2440822              NaN     (6948768.439, 10426136.918]      0.50  
2440823              NaN     (6948768.439, 10426136.918]      0.50  
2440824              NaN    (10426136.918, 16843606.244]      1.00  
2440825              NaN    (16843606.244, 23062762.387]      1.50  
2440826              NaN    (16843606.244, 23062762.387]      1.50  
2440827              NaN     (6948768.439, 10426136.918]      0.50  
2440828              NaN                  (0, 3183091.2]      0.01  
2440829  16698144.000000      (-4379402.938, -58840.513]     -0.50  
...                  ...                             ...       ...  
2441170  -8906709.333333  (-17143467.131, -11402992.498]     -1.50  
2441171  -3273499.733333   (-11402992.498, -4379402.938]     -1.00  
2441172    -96704.000000      (-4379402.938, -58840.513]     -0.50  
2441173   1176629.333333                  (0, 3183091.2]      0.01  
2441174   8478937.600000     (6948768.439, 10426136.918]      0.50  
2441175   7560401.066667     (6948768.439, 10426136.918]      0.50  
2441176   7727590.400000     (6948768.439, 10426136.918]      0.50  
2441177   8015620.266667     (6948768.439, 10426136.918]      0.50  
2441178  11989597.866667    (10426136.918, 16843606.244]      1.00  
2441179  10487889.066667     (6948768.439, 10426136.918]      0.50  
2441180  13158493.866667     (6948768.439, 10426136.918]      0.50  
2441181  25012119.466667    (16843606.244, 23062762.387]      1.50  
2441182  37367460.266667    (23062762.387, 31915408.491]      2.00  
2441183  31317826.133333    (16843606.244, 23062762.387]      1.50  
2441184  29123737.600000    (10426136.918, 16843606.244]      1.00  
2441185  29774350.933333    (10426136.918, 16843606.244]      1.00  
2441186  34120407.466667    (10426136.918, 16843606.244]      1.00  
2441187  36372554.666667    (10426136.918, 16843606.244]      1.00  
2441188  40061962.666667    (16843606.244, 23062762.387]      1.50  
2441189  39048629.333333    (10426136.918, 16843606.244]      1.00  
2441190  35415296.000000     (6948768.439, 10426136.918]      0.50  
2441191  27600121.600000                  (0, 3183091.2]      0.01  
2441192  31128539.733333        (3183091.2, 6948768.439]      0.02  
2441193  31596230.400000        (3183091.2, 6948768.439]      0.02  
2441194  29953597.866667        (3183091.2, 6948768.439]      0.02  
2441195  33253890.133333        (3183091.2, 6948768.439]      0.02  
2441196  40312142.933333    (10426136.918, 16843606.244]      1.00  
2441197  39945459.200000    (10426136.918, 16843606.244]      1.00  
2441198  38172093.866667    (10426136.918, 16843606.244]      1.00  
2441199  34997427.200000     (6948768.439, 10426136.918]      0.50  

[400 rows x 8 columns]

In [110]: plex.index = plex.price_date

In [111]: plex.sort('flags10',inplace=True)
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-111-343b19845c10> in <module>()
----> 1 plex.sort('flags10',inplace=True)

D:\Anaconda\lib\site-packages\pandas\core\frame.pyc in sort(self, columns, axis, ascending, inplace, kind, na_position)
   2758         """
   2759         return self.sort_index(by=columns, axis=axis, ascending=ascending,
-> 2760                                inplace=inplace, kind=kind, na_position=na_position)
   2761 
   2762     def sort_index(self, axis=0, by=None, ascending=True, inplace=False,

D:\Anaconda\lib\site-packages\pandas\core\frame.pyc in sort_index(self, axis, by, ascending, inplace, kind, na_position)
   2826             else:
   2827                 by = by[0]
-> 2828                 k = self[by].values
   2829                 if k.ndim == 2:
   2830 

D:\Anaconda\lib\site-packages\pandas\core\frame.pyc in __getitem__(self, key)
   1741             return self._getitem_multilevel(key)
   1742         else:
-> 1743             return self._getitem_column(key)
   1744 
   1745     def _getitem_column(self, key):

D:\Anaconda\lib\site-packages\pandas\core\frame.pyc in _getitem_column(self, key)
   1748         # get column
   1749         if self.columns.is_unique:
-> 1750             return self._get_item_cache(key)
   1751 
   1752         # duplicate columns & possible reduce dimensionaility

D:\Anaconda\lib\site-packages\pandas\core\generic.pyc in _get_item_cache(self, item)
   1056         res = cache.get(item)
   1057         if res is None:
-> 1058             values = self._data.get(item)
   1059             res = self._box_item_values(item, values)
   1060             cache[item] = res

D:\Anaconda\lib\site-packages\pandas\core\internals.pyc in get(self, item, fastpath)
   2804 
   2805             if not isnull(item):
-> 2806                 loc = self.items.get_loc(item)
   2807             else:
   2808                 indexer = np.arange(len(self.items))[isnull(self.items)]

D:\Anaconda\lib\site-packages\pandas\core\index.pyc in get_loc(self, key)
   1383         loc : int if unique index, possibly slice or mask if not
   1384         """
-> 1385         return self._engine.get_loc(_values_from_object(key))
   1386 
   1387     def get_value(self, series, key):

D:\Anaconda\lib\site-packages\pandas\index.pyd in pandas.index.IndexEngine.get_loc (pandas\index.c:3795)()

D:\Anaconda\lib\site-packages\pandas\index.pyd in pandas.index.IndexEngine.get_loc (pandas\index.c:3675)()

D:\Anaconda\lib\site-packages\pandas\hashtable.pyd in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12299)()

D:\Anaconda\lib\site-packages\pandas\hashtable.pyd in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12250)()

KeyError: 'flags10'

In [112]: plex.sort('flags_10l',inplace=True)
D:\Anaconda\lib\site-packages\pandas\core\frame.py:2760: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  inplace=inplace, kind=kind, na_position=na_position)

In [113]: plex
Out[113]: 
            itemid price_date  volume   avgprice  price_delta_10  \
price_date                                                         
2013-09-29   29668 2013-09-29    3618  563411520             NaN   
2013-10-06   29668 2013-10-06    3134  585000000             NaN   
2013-10-05   29668 2013-10-05    2895  585000000             NaN   
2013-10-04   29668 2013-10-04    2662  582249984             NaN   
2013-10-07   29668 2013-10-07    2659  588320000             NaN   
2013-10-02   29668 2013-10-02    2916  574000000             NaN   
2013-10-01   29668 2013-10-01    3018  567950080             NaN   
2013-09-30   29668 2013-09-30    3262  565000000             NaN   
2013-10-03   29668 2013-10-03    2868  581995008             NaN   
2013-11-02   29668 2013-11-02    4688  578443904     -32959296.0   
2013-11-01   29668 2013-11-01    6161  587300032     -28258777.6   
2014-07-26   29668 2014-07-26    4118  770000000     -23450924.8   
2014-08-30   29668 2014-08-30    3245  768000128     -21677280.0   
2013-11-03   29668 2013-11-03    4037  586406016     -20897888.0   
2014-07-25   29668 2014-07-25    2824  775000000     -22834483.2   
2014-07-24   29668 2014-07-24    3103  778743552     -21992230.4   
2014-08-31   29668 2014-08-31    3114  769000000     -17677408.0   
2014-07-23   29668 2014-07-23    3365  785055552     -17403724.8   
2013-12-27   29668 2013-12-27    4088  595000000     -16622304.0   
2014-07-27   29668 2014-07-27    3199  775000000     -14752025.6   
2014-04-17   29668 2014-04-17    2880  711006016     -11788460.8   
2014-06-07   29668 2014-06-07    3566  719899968     -14655008.0   
2014-01-31   29668 2014-01-31    3711  619000000     -16605388.8   
2014-10-04   29668 2014-10-04    3138  780000000     -12214291.2   
2013-10-31   29668 2013-10-31    3667  604002112     -14026694.4   
2014-02-01   29668 2014-02-01    3914  620000000     -13735488.0   
2013-12-26   29668 2013-12-26    4239  600192000     -13430304.0   
2014-06-06   29668 2014-06-06    3453  721000000     -16325516.8   
2014-05-02   29668 2014-05-02    3340  708000000     -13637452.8   
2014-08-28   29668 2014-08-28    2908  782760000     -12375993.6   
...            ...        ...     ...        ...             ...   
2014-04-08   29668 2014-04-08    2245  717000000      15056012.8   
2013-11-12   29668 2013-11-12    2335  612385024      12195334.4   
2013-11-11   29668 2013-11-11    2368  609520000      12724422.4   
2013-10-08   29668 2013-10-08    2516  596996992      18004633.6   
2014-03-23   29668 2014-03-23    2878  679880000      17356870.4   
2014-07-04   29668 2014-07-04    2907  771700224      19779731.2   
2013-10-25   29668 2013-10-25    2862  630000000      17890009.6   
2013-10-24   29668 2013-10-24    2885  627398976      18301388.8   
2014-03-25   29668 2014-03-25    2475  689000000      18006880.0   
2014-05-21   29668 2014-05-21    2570  740902976      18572870.4   
2014-03-26   29668 2014-03-26    2498  698003008      22364684.8   
2014-10-22   29668 2014-10-22    2283  845280000      17996684.8   
2014-03-12   29668 2014-03-12    2781  670000000      20049625.6   
2014-04-12   29668 2014-04-12    3359  734889024      18241164.8   
2014-10-15   29668 2014-10-15    2104  819980992      18205561.6   
2014-07-07   29668 2014-07-07    3043  780000000      20079513.6   
2014-09-11   29668 2014-09-11    2261  794139968      16862272.0   
2014-04-09   29668 2014-04-09    2751  727500032      22881043.2   
2014-03-28   29668 2014-03-28    3402  706989888      20956825.6   
2014-10-17   29668 2014-10-17    2204  829000000      19104569.6   
2014-09-10   29668 2014-09-10    2103  792000000      17336300.8   
2014-04-11   29668 2014-04-11    2749  739889984      26931027.2   
2014-10-16   29668 2014-10-16    2079  833800000      27624569.6   
2014-03-27   29668 2014-03-27    2822  708969984      27584659.2   
2014-04-10   29668 2014-04-10    2821  739499712      30730752.0   
2014-05-22   29668 2014-05-22    2573  750000000      24449881.6   
2014-03-24   29668 2014-03-24    2891  690600000      24306867.2   
2014-07-10   29668 2014-07-10    3238  818181120      39311526.4   
2014-07-09   29668 2014-07-09    2724  812142976      40290374.4   
2014-07-08   29668 2014-07-08    2888  798000000      32779513.6   

             price_delta_30                        flags_10 flags_10l  
price_date                                                             
2013-09-29              NaN                             NaN       NaN  
2013-10-06              NaN                             NaN       NaN  
2013-10-05              NaN                             NaN       NaN  
2013-10-04              NaN                             NaN       NaN  
2013-10-07              NaN                             NaN       NaN  
2013-10-02              NaN                             NaN       NaN  
2013-10-01              NaN                             NaN       NaN  
2013-09-30              NaN                             NaN       NaN  
2013-10-03              NaN                             NaN       NaN  
2013-11-02 -24649525.333333           (-inf, -23190928.549]      -2.5  
2013-11-01 -15911767.466667           (-inf, -23190928.549]      -2.5  
2014-07-26 -13001508.266667           (-inf, -23190928.549]      -2.5  
2014-08-30 -19247944.533333  (-23190928.549, -17143467.131]      -2.0  
2013-11-03 -16825947.733333  (-23190928.549, -17143467.131]      -2.0  
2014-07-25  -7268174.933333  (-23190928.549, -17143467.131]      -2.0  
2014-07-24  -2557956.266667  (-23190928.549, -17143467.131]      -2.0  
2014-08-31 -17781139.200000  (-23190928.549, -17143467.131]      -2.0  
2014-07-23   5045495.466667  (-23190928.549, -17143467.131]      -2.0  
2013-12-27 -16794144.000000  (-17143467.131, -11402992.498]      -1.5  
2014-07-27  -8934841.600000  (-17143467.131, -11402992.498]      -1.5  
2014-04-17   8148840.533333  (-17143467.131, -11402992.498]      -1.5  
2014-06-07 -10807206.400000  (-17143467.131, -11402992.498]      -1.5  
2014-01-31  -4490941.866667  (-17143467.131, -11402992.498]      -1.5  
2014-10-04  -8906709.333333  (-17143467.131, -11402992.498]      -1.5  
2013-10-31   1233646.933333  (-17143467.131, -11402992.498]      -1.5  
2014-02-01  -4140974.933333  (-17143467.131, -11402992.498]      -1.5  
2013-12-26 -12174809.600000  (-17143467.131, -11402992.498]      -1.5  
2014-06-06  -9570508.800000  (-17143467.131, -11402992.498]      -1.5  
2014-05-02 -10066133.333333  (-17143467.131, -11402992.498]      -1.5  
2014-08-28  -5922030.933333  (-17143467.131, -11402992.498]      -1.5  
...                     ...                             ...       ...  
2014-04-08  34261326.933333    (10426136.918, 16843606.244]       1.0  
2013-11-12   6467630.933333    (10426136.918, 16843606.244]       1.0  
2013-11-11   4128407.466667    (10426136.918, 16843606.244]       1.0  
2013-10-08              NaN    (16843606.244, 23062762.387]       1.5  
2014-03-23  28684804.266667    (16843606.244, 23062762.387]       1.5  
2014-07-04  34259712.000000    (16843606.244, 23062762.387]       1.5  
2013-10-25              NaN    (16843606.244, 23062762.387]       1.5  
2013-10-24              NaN    (16843606.244, 23062762.387]       1.5  
2014-03-25  34182338.133333    (16843606.244, 23062762.387]       1.5  
2014-05-21  21304962.133333    (16843606.244, 23062762.387]       1.5  
2014-03-26  41163178.666667    (16843606.244, 23062762.387]       1.5  
2014-10-22  40061962.666667    (16843606.244, 23062762.387]       1.5  
2014-03-12  31205041.066667    (16843606.244, 23062762.387]       1.5  
2014-04-12  42388597.333333    (16843606.244, 23062762.387]       1.5  
2014-10-15  25012119.466667    (16843606.244, 23062762.387]       1.5  
2014-07-07  37556155.733333    (16843606.244, 23062762.387]       1.5  
2014-09-11   9744362.666667    (16843606.244, 23062762.387]       1.5  
2014-04-09  42304622.933333    (16843606.244, 23062762.387]       1.5  
2014-03-28  45558726.400000    (16843606.244, 23062762.387]       1.5  
2014-10-17  31317826.133333    (16843606.244, 23062762.387]       1.5  
2014-09-10   7942393.600000    (16843606.244, 23062762.387]       1.5  
2014-04-11  49719191.466667    (23062762.387, 31915408.491]       2.0  
2014-10-16  37367460.266667    (23062762.387, 31915408.491]       2.0  
2014-03-27  49797821.866667    (23062762.387, 31915408.491]       2.0  
2014-04-10  51658585.600000    (23062762.387, 31915408.491]       2.0  
2014-05-22  29551148.800000    (23062762.387, 31915408.491]       2.0  
2014-03-24  37533971.200000    (23062762.387, 31915408.491]       2.0  
2014-07-10  67359460.266667             (31915408.491, inf]       2.5  
2014-07-09  64342165.333333             (31915408.491, inf]       2.5  
2014-07-08  53103955.200000             (31915408.491, inf]       2.5  

[400 rows x 8 columns]


In [114]: plex.loc[:,'price_delta_10','flags_10l']
---------------------------------------------------------------------------
IndexingError                             Traceback (most recent call last)
<ipython-input-114-9529740dd387> in <module>()
----> 1 plex.loc[:,'price_delta_10','flags_10l']

D:\Anaconda\lib\site-packages\pandas\core\indexing.pyc in __getitem__(self, key)
   1190     def __getitem__(self, key):
   1191         if type(key) is tuple:
-> 1192             return self._getitem_tuple(key)
   1193         else:
   1194             return self._getitem_axis(key, axis=0)

D:\Anaconda\lib\site-packages\pandas\core\indexing.pyc in _getitem_tuple(self, tup)
    694 
    695         # no multi-index, so validate all of the indexers
--> 696         self._has_valid_tuple(tup)
    697 
    698         # ugly hack for GH #836

D:\Anaconda\lib\site-packages\pandas\core\indexing.pyc in _has_valid_tuple(self, key)
    128         for i, k in enumerate(key):
    129             if i >= self.obj.ndim:
--> 130                 raise IndexingError('Too many indexers')
    131             if not self._has_valid_type(k, i):
    132                 raise ValueError("Location based indexing can only have [%s] "

IndexingError: Too many indexers

In [115]: plex.loc[:,['price_delta_10','flags_10l']]
Out[115]: 
            price_delta_10 flags_10l
price_date                          
2013-09-29             NaN       NaN
2013-10-06             NaN       NaN
2013-10-05             NaN       NaN
2013-10-04             NaN       NaN
2013-10-07             NaN       NaN
2013-10-02             NaN       NaN
2013-10-01             NaN       NaN
2013-09-30             NaN       NaN
2013-10-03             NaN       NaN
2013-11-02     -32959296.0      -2.5
2013-11-01     -28258777.6      -2.5
2014-07-26     -23450924.8      -2.5
2014-08-30     -21677280.0      -2.0
2013-11-03     -20897888.0      -2.0
2014-07-25     -22834483.2      -2.0
2014-07-24     -21992230.4      -2.0
2014-08-31     -17677408.0      -2.0
2014-07-23     -17403724.8      -2.0
2013-12-27     -16622304.0      -1.5
2014-07-27     -14752025.6      -1.5
2014-04-17     -11788460.8      -1.5
2014-06-07     -14655008.0      -1.5
2014-01-31     -16605388.8      -1.5
2014-10-04     -12214291.2      -1.5
2013-10-31     -14026694.4      -1.5
2014-02-01     -13735488.0      -1.5
2013-12-26     -13430304.0      -1.5
2014-06-06     -16325516.8      -1.5
2014-05-02     -13637452.8      -1.5
2014-08-28     -12375993.6      -1.5
...                    ...       ...
2014-04-08      15056012.8       1.0
2013-11-12      12195334.4       1.0
2013-11-11      12724422.4       1.0
2013-10-08      18004633.6       1.5
2014-03-23      17356870.4       1.5
2014-07-04      19779731.2       1.5
2013-10-25      17890009.6       1.5
2013-10-24      18301388.8       1.5
2014-03-25      18006880.0       1.5
2014-05-21      18572870.4       1.5
2014-03-26      22364684.8       1.5
2014-10-22      17996684.8       1.5
2014-03-12      20049625.6       1.5
2014-04-12      18241164.8       1.5
2014-10-15      18205561.6       1.5
2014-07-07      20079513.6       1.5
2014-09-11      16862272.0       1.5
2014-04-09      22881043.2       1.5
2014-03-28      20956825.6       1.5
2014-10-17      19104569.6       1.5
2014-09-10      17336300.8       1.5
2014-04-11      26931027.2       2.0
2014-10-16      27624569.6       2.0
2014-03-27      27584659.2       2.0
2014-04-10      30730752.0       2.0
2014-05-22      24449881.6       2.0
2014-03-24      24306867.2       2.0
2014-07-10      39311526.4       2.5
2014-07-09      40290374.4       2.5
2014-07-08      32779513.6       2.5

[400 rows x 2 columns]

In [116]: plex10 = plex.loc[:,['price_delta_10','flags_10l']]

In [117]: plex10.groupby('flag_10l')
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-117-6d48bb379c88> in <module>()
----> 1 plex10.groupby('flag_10l')

D:\Anaconda\lib\site-packages\pandas\core\generic.pyc in groupby(self, by, axis, level, as_index, sort, group_keys, squeeze)
   2871         axis = self._get_axis_number(axis)
   2872         return groupby(self, by, axis=axis, level=level, as_index=as_index,
-> 2873                        sort=sort, group_keys=group_keys, squeeze=squeeze)
   2874 
   2875     def asfreq(self, freq, method=None, how=None, normalize=False):

D:\Anaconda\lib\site-packages\pandas\core\groupby.pyc in groupby(obj, by, **kwds)
   1187         raise TypeError('invalid type: %s' % type(obj))
   1188 
-> 1189     return klass(obj, by, **kwds)
   1190 
   1191 

D:\Anaconda\lib\site-packages\pandas\core\groupby.pyc in __init__(self, obj, keys, axis, level, grouper, exclusions, selection, as_index, sort, group_keys, squeeze)
    379         if grouper is None:
    380             grouper, exclusions, obj = _get_grouper(obj, keys, axis=axis,
--> 381                                                     level=level, sort=sort)
    382 
    383         self.obj = obj

D:\Anaconda\lib\site-packages\pandas\core\groupby.pyc in _get_grouper(obj, key, axis, level, sort)
   2108             exclusions.append(gpr)
   2109             name = gpr
-> 2110             gpr = obj[gpr]
   2111 
   2112         if isinstance(gpr, Categorical) and len(gpr) != len(obj):

D:\Anaconda\lib\site-packages\pandas\core\frame.pyc in __getitem__(self, key)
   1741             return self._getitem_multilevel(key)
   1742         else:
-> 1743             return self._getitem_column(key)
   1744 
   1745     def _getitem_column(self, key):

D:\Anaconda\lib\site-packages\pandas\core\frame.pyc in _getitem_column(self, key)
   1748         # get column
   1749         if self.columns.is_unique:
-> 1750             return self._get_item_cache(key)
   1751 
   1752         # duplicate columns & possible reduce dimensionaility

D:\Anaconda\lib\site-packages\pandas\core\generic.pyc in _get_item_cache(self, item)
   1056         res = cache.get(item)
   1057         if res is None:
-> 1058             values = self._data.get(item)
   1059             res = self._box_item_values(item, values)
   1060             cache[item] = res

D:\Anaconda\lib\site-packages\pandas\core\internals.pyc in get(self, item, fastpath)
   2804 
   2805             if not isnull(item):
-> 2806                 loc = self.items.get_loc(item)
   2807             else:
   2808                 indexer = np.arange(len(self.items))[isnull(self.items)]

D:\Anaconda\lib\site-packages\pandas\core\index.pyc in get_loc(self, key)
   1383         loc : int if unique index, possibly slice or mask if not
   1384         """
-> 1385         return self._engine.get_loc(_values_from_object(key))
   1386 
   1387     def get_value(self, series, key):

D:\Anaconda\lib\site-packages\pandas\index.pyd in pandas.index.IndexEngine.get_loc (pandas\index.c:3795)()

D:\Anaconda\lib\site-packages\pandas\index.pyd in pandas.index.IndexEngine.get_loc (pandas\index.c:3675)()

D:\Anaconda\lib\site-packages\pandas\hashtable.pyd in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12299)()

D:\Anaconda\lib\site-packages\pandas\hashtable.pyd in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12250)()

KeyError: 'flag_10l'

In [118]: gp10 = plex10.groupby('flags_10l')

In [119]: gp10.get_group([-2.5,-2.0,2.0,2.5])
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-119-958592e1ae68> in <module>()
----> 1 gp10.get_group([-2.5,-2.0,2.0,2.5])

D:\Anaconda\lib\site-packages\pandas\core\groupby.pyc in get_group(self, name, obj)
    590             obj = self._selected_obj
    591 
--> 592         inds = self._get_index(name)
    593         return obj.take(inds, axis=self.axis, convert=False)
    594 

D:\Anaconda\lib\site-packages\pandas\core\groupby.pyc in _get_index(self, name)
    442             name = convert(name, sample)
    443 
--> 444         return self.indices[name]
    445 
    446     @property

TypeError: unhashable type: 'list'

In [120]: gp10.get_group(-2.5)
Out[120]: 
            price_delta_10 flags_10l
price_date                          
2013-11-02     -32959296.0      -2.5
2013-11-01     -28258777.6      -2.5
2014-07-26     -23450924.8      -2.5

In [121]: gp10.get_group(-2.0)
Out[121]: 
            price_delta_10 flags_10l
price_date                          
2014-08-30     -21677280.0        -2
2013-11-03     -20897888.0        -2
2014-07-25     -22834483.2        -2
2014-07-24     -21992230.4        -2
2014-08-31     -17677408.0        -2
2014-07-23     -17403724.8        -2

In [122]: gp10.get_group(2.0)
Out[122]: 
            price_delta_10 flags_10l
price_date                          
2014-04-11      26931027.2         2
2014-10-16      27624569.6         2
2014-03-27      27584659.2         2
2014-04-10      30730752.0         2
2014-05-22      24449881.6         2
2014-03-24      24306867.2         2

In [123]: gp10.get_group(2.5)
Out[123]: 
            price_delta_10 flags_10l
price_date                          
2014-07-10      39311526.4       2.5
2014-07-09      40290374.4       2.5
2014-07-08      32779513.6       2.5

In [124]: plex
Out[124]: 
            itemid price_date  volume   avgprice  price_delta_10  \
price_date                                                         
2013-09-29   29668 2013-09-29    3618  563411520             NaN   
2013-10-06   29668 2013-10-06    3134  585000000             NaN   
2013-10-05   29668 2013-10-05    2895  585000000             NaN   
2013-10-04   29668 2013-10-04    2662  582249984             NaN   
2013-10-07   29668 2013-10-07    2659  588320000             NaN   
2013-10-02   29668 2013-10-02    2916  574000000             NaN   
2013-10-01   29668 2013-10-01    3018  567950080             NaN   
2013-09-30   29668 2013-09-30    3262  565000000             NaN   
2013-10-03   29668 2013-10-03    2868  581995008             NaN   
2013-11-02   29668 2013-11-02    4688  578443904     -32959296.0   
2013-11-01   29668 2013-11-01    6161  587300032     -28258777.6   
2014-07-26   29668 2014-07-26    4118  770000000     -23450924.8   
2014-08-30   29668 2014-08-30    3245  768000128     -21677280.0   
2013-11-03   29668 2013-11-03    4037  586406016     -20897888.0   
2014-07-25   29668 2014-07-25    2824  775000000     -22834483.2   
2014-07-24   29668 2014-07-24    3103  778743552     -21992230.4   
2014-08-31   29668 2014-08-31    3114  769000000     -17677408.0   
2014-07-23   29668 2014-07-23    3365  785055552     -17403724.8   
2013-12-27   29668 2013-12-27    4088  595000000     -16622304.0   
2014-07-27   29668 2014-07-27    3199  775000000     -14752025.6   
2014-04-17   29668 2014-04-17    2880  711006016     -11788460.8   
2014-06-07   29668 2014-06-07    3566  719899968     -14655008.0   
2014-01-31   29668 2014-01-31    3711  619000000     -16605388.8   
2014-10-04   29668 2014-10-04    3138  780000000     -12214291.2   
2013-10-31   29668 2013-10-31    3667  604002112     -14026694.4   
2014-02-01   29668 2014-02-01    3914  620000000     -13735488.0   
2013-12-26   29668 2013-12-26    4239  600192000     -13430304.0   
2014-06-06   29668 2014-06-06    3453  721000000     -16325516.8   
2014-05-02   29668 2014-05-02    3340  708000000     -13637452.8   
2014-08-28   29668 2014-08-28    2908  782760000     -12375993.6   
...            ...        ...     ...        ...             ...   
2014-04-08   29668 2014-04-08    2245  717000000      15056012.8   
2013-11-12   29668 2013-11-12    2335  612385024      12195334.4   
2013-11-11   29668 2013-11-11    2368  609520000      12724422.4   
2013-10-08   29668 2013-10-08    2516  596996992      18004633.6   
2014-03-23   29668 2014-03-23    2878  679880000      17356870.4   
2014-07-04   29668 2014-07-04    2907  771700224      19779731.2   
2013-10-25   29668 2013-10-25    2862  630000000      17890009.6   
2013-10-24   29668 2013-10-24    2885  627398976      18301388.8   
2014-03-25   29668 2014-03-25    2475  689000000      18006880.0   
2014-05-21   29668 2014-05-21    2570  740902976      18572870.4   
2014-03-26   29668 2014-03-26    2498  698003008      22364684.8   
2014-10-22   29668 2014-10-22    2283  845280000      17996684.8   
2014-03-12   29668 2014-03-12    2781  670000000      20049625.6   
2014-04-12   29668 2014-04-12    3359  734889024      18241164.8   
2014-10-15   29668 2014-10-15    2104  819980992      18205561.6   
2014-07-07   29668 2014-07-07    3043  780000000      20079513.6   
2014-09-11   29668 2014-09-11    2261  794139968      16862272.0   
2014-04-09   29668 2014-04-09    2751  727500032      22881043.2   
2014-03-28   29668 2014-03-28    3402  706989888      20956825.6   
2014-10-17   29668 2014-10-17    2204  829000000      19104569.6   
2014-09-10   29668 2014-09-10    2103  792000000      17336300.8   
2014-04-11   29668 2014-04-11    2749  739889984      26931027.2   
2014-10-16   29668 2014-10-16    2079  833800000      27624569.6   
2014-03-27   29668 2014-03-27    2822  708969984      27584659.2   
2014-04-10   29668 2014-04-10    2821  739499712      30730752.0   
2014-05-22   29668 2014-05-22    2573  750000000      24449881.6   
2014-03-24   29668 2014-03-24    2891  690600000      24306867.2   
2014-07-10   29668 2014-07-10    3238  818181120      39311526.4   
2014-07-09   29668 2014-07-09    2724  812142976      40290374.4   
2014-07-08   29668 2014-07-08    2888  798000000      32779513.6   

             price_delta_30                        flags_10 flags_10l  
price_date                                                             
2013-09-29              NaN                             NaN       NaN  
2013-10-06              NaN                             NaN       NaN  
2013-10-05              NaN                             NaN       NaN  
2013-10-04              NaN                             NaN       NaN  
2013-10-07              NaN                             NaN       NaN  
2013-10-02              NaN                             NaN       NaN  
2013-10-01              NaN                             NaN       NaN  
2013-09-30              NaN                             NaN       NaN  
2013-10-03              NaN                             NaN       NaN  
2013-11-02 -24649525.333333           (-inf, -23190928.549]      -2.5  
2013-11-01 -15911767.466667           (-inf, -23190928.549]      -2.5  
2014-07-26 -13001508.266667           (-inf, -23190928.549]      -2.5  
2014-08-30 -19247944.533333  (-23190928.549, -17143467.131]      -2.0  
2013-11-03 -16825947.733333  (-23190928.549, -17143467.131]      -2.0  
2014-07-25  -7268174.933333  (-23190928.549, -17143467.131]      -2.0  
2014-07-24  -2557956.266667  (-23190928.549, -17143467.131]      -2.0  
2014-08-31 -17781139.200000  (-23190928.549, -17143467.131]      -2.0  
2014-07-23   5045495.466667  (-23190928.549, -17143467.131]      -2.0  
2013-12-27 -16794144.000000  (-17143467.131, -11402992.498]      -1.5  
2014-07-27  -8934841.600000  (-17143467.131, -11402992.498]      -1.5  
2014-04-17   8148840.533333  (-17143467.131, -11402992.498]      -1.5  
2014-06-07 -10807206.400000  (-17143467.131, -11402992.498]      -1.5  
2014-01-31  -4490941.866667  (-17143467.131, -11402992.498]      -1.5  
2014-10-04  -8906709.333333  (-17143467.131, -11402992.498]      -1.5  
2013-10-31   1233646.933333  (-17143467.131, -11402992.498]      -1.5  
2014-02-01  -4140974.933333  (-17143467.131, -11402992.498]      -1.5  
2013-12-26 -12174809.600000  (-17143467.131, -11402992.498]      -1.5  
2014-06-06  -9570508.800000  (-17143467.131, -11402992.498]      -1.5  
2014-05-02 -10066133.333333  (-17143467.131, -11402992.498]      -1.5  
2014-08-28  -5922030.933333  (-17143467.131, -11402992.498]      -1.5  
...                     ...                             ...       ...  
2014-04-08  34261326.933333    (10426136.918, 16843606.244]       1.0  
2013-11-12   6467630.933333    (10426136.918, 16843606.244]       1.0  
2013-11-11   4128407.466667    (10426136.918, 16843606.244]       1.0  
2013-10-08              NaN    (16843606.244, 23062762.387]       1.5  
2014-03-23  28684804.266667    (16843606.244, 23062762.387]       1.5  
2014-07-04  34259712.000000    (16843606.244, 23062762.387]       1.5  
2013-10-25              NaN    (16843606.244, 23062762.387]       1.5  
2013-10-24              NaN    (16843606.244, 23062762.387]       1.5  
2014-03-25  34182338.133333    (16843606.244, 23062762.387]       1.5  
2014-05-21  21304962.133333    (16843606.244, 23062762.387]       1.5  
2014-03-26  41163178.666667    (16843606.244, 23062762.387]       1.5  
2014-10-22  40061962.666667    (16843606.244, 23062762.387]       1.5  
2014-03-12  31205041.066667    (16843606.244, 23062762.387]       1.5  
2014-04-12  42388597.333333    (16843606.244, 23062762.387]       1.5  
2014-10-15  25012119.466667    (16843606.244, 23062762.387]       1.5  
2014-07-07  37556155.733333    (16843606.244, 23062762.387]       1.5  
2014-09-11   9744362.666667    (16843606.244, 23062762.387]       1.5  
2014-04-09  42304622.933333    (16843606.244, 23062762.387]       1.5  
2014-03-28  45558726.400000    (16843606.244, 23062762.387]       1.5  
2014-10-17  31317826.133333    (16843606.244, 23062762.387]       1.5  
2014-09-10   7942393.600000    (16843606.244, 23062762.387]       1.5  
2014-04-11  49719191.466667    (23062762.387, 31915408.491]       2.0  
2014-10-16  37367460.266667    (23062762.387, 31915408.491]       2.0  
2014-03-27  49797821.866667    (23062762.387, 31915408.491]       2.0  
2014-04-10  51658585.600000    (23062762.387, 31915408.491]       2.0  
2014-05-22  29551148.800000    (23062762.387, 31915408.491]       2.0  
2014-03-24  37533971.200000    (23062762.387, 31915408.491]       2.0  
2014-07-10  67359460.266667             (31915408.491, inf]       2.5  
2014-07-09  64342165.333333             (31915408.491, inf]       2.5  
2014-07-08  53103955.200000             (31915408.491, inf]       2.5  

[400 rows x 8 columns]

In [125]: plex = plex.sort()

In [126]: plex
Out[126]: 
            itemid price_date  volume   avgprice  price_delta_10  \
price_date                                                         
2013-09-29   29668 2013-09-29    3618  563411520             NaN   
2013-09-30   29668 2013-09-30    3262  565000000             NaN   
2013-10-01   29668 2013-10-01    3018  567950080             NaN   
2013-10-02   29668 2013-10-02    2916  574000000             NaN   
2013-10-03   29668 2013-10-03    2868  581995008             NaN   
2013-10-04   29668 2013-10-04    2662  582249984             NaN   
2013-10-05   29668 2013-10-05    2895  585000000             NaN   
2013-10-06   29668 2013-10-06    3134  585000000             NaN   
2013-10-07   29668 2013-10-07    2659  588320000             NaN   
2013-10-08   29668 2013-10-08    2516  596996992      18004633.6   
2013-10-09   29668 2013-10-09    2710  595600000      13388793.6   
2013-10-10   29668 2013-10-10    2822  596400000      11048793.6   
2013-10-11   29668 2013-10-11    2880  598000000       9643801.6   
2013-10-12   29668 2013-10-12    2972  593000000       2743801.6   
2013-10-13   29668 2013-10-13    3278  596611008       4893209.6   
2013-10-14   29668 2013-10-14    2576  598016000       4721600.0   
2013-10-15   29668 2013-10-15    2343  599875968       5093971.2   
2013-10-16   29668 2013-10-16    2677  599800000       3538003.2   
2013-10-17   29668 2013-10-17    2669  600000000       2570003.2   
2013-10-18   29668 2013-10-18    2813  604720000       6517702.4   
2013-10-19   29668 2013-10-19    3125  608739968       9223673.6   
2013-10-20   29668 2013-10-20    3227  606440960       5920569.6   
2013-10-21   29668 2013-10-21    2584  612000000      10079609.6   
2013-10-22   29668 2013-10-22    2463  612000000       8179609.6   
2013-10-23   29668 2013-10-23    2718  620000000      13840710.4   
2013-10-24   29668 2013-10-24    2885  627398976      18301388.8   
2013-10-25   29668 2013-10-25    2862  630000000      17890009.6   
2013-10-26   29668 2013-10-26    3109  621979968       7651980.8   
2013-10-27   29668 2013-10-27    4084  616270016        315027.2   
2013-10-28   29668 2013-10-28    2977  614748992      -2208896.0   
...            ...        ...     ...        ...             ...   
2014-10-04   29668 2014-10-04    3138  780000000     -12214291.2   
2014-10-05   29668 2014-10-05    2742  785999872      -5314406.4   
2014-10-06   29668 2014-10-06    2432  789800000      -1211078.4   
2014-10-07   29668 2014-10-07    2185  791800000        908921.6   
2014-10-08   29668 2014-10-08    1908  799899008       8590131.2   
2014-10-09   29668 2014-10-09    1919  799566144       8189651.2   
2014-10-10   29668 2014-10-10    2166  800000000       8623507.2   
2014-10-11   29668 2014-10-11    2519  800500032       8163532.8   
2014-10-12   29668 2014-10-12    2178  805000000      11493497.6   
2014-10-13   29668 2014-10-13    2012  804000128       8343609.6   
2014-10-14   29668 2014-10-14    1909  807208000       8830681.6   
2014-10-15   29668 2014-10-15    2104  819980992      18205561.6   
2014-10-16   29668 2014-10-16    2079  833800000      27624569.6   
2014-10-17   29668 2014-10-17    2204  829000000      19104569.6   
2014-10-18   29668 2014-10-18    2568  828002112      15296371.2   
2014-10-19   29668 2014-10-19    2415  829985920      14238201.6   
2014-10-20   29668 2014-10-20    2121  835798976      16471360.0   
2014-10-21   29668 2014-10-21    2251  839777024      16521708.8   
2014-10-22   29668 2014-10-22    2283  845280000      17996684.8   
2014-10-23   29668 2014-10-23    2301  846000000      14516697.6   
2014-10-24   29668 2014-10-24    2611  844000000       8837497.6   
2014-10-25   29668 2014-10-25    2872  837604992        680089.6   
2014-10-26   29668 2014-10-26    2537  842798976       4974176.0   
2014-10-27   29668 2014-10-27    2361  845000000       5575200.0   
2014-10-28   29668 2014-10-28    2422  845000000       3875411.2   
2014-10-29   29668 2014-10-29    2499  850004096       6877689.6   
2014-10-30   29668 2014-10-30    2619  859030016      13580505.6   
2014-10-31   29668 2014-10-31    2602  861000000      13428192.0   
2014-11-01   29668 2014-11-01    3040  861499968      12306163.2   
2014-11-02   29668 2014-11-02    2605  860939968      10252166.4   

             price_delta_30                        flags_10 flags_10l  
price_date                                                             
2013-09-29              NaN                             NaN       NaN  
2013-09-30              NaN                             NaN       NaN  
2013-10-01              NaN                             NaN       NaN  
2013-10-02              NaN                             NaN       NaN  
2013-10-03              NaN                             NaN       NaN  
2013-10-04              NaN                             NaN       NaN  
2013-10-05              NaN                             NaN       NaN  
2013-10-06              NaN                             NaN       NaN  
2013-10-07              NaN                             NaN       NaN  
2013-10-08              NaN    (16843606.244, 23062762.387]      1.50  
2013-10-09              NaN    (10426136.918, 16843606.244]      1.00  
2013-10-10              NaN    (10426136.918, 16843606.244]      1.00  
2013-10-11              NaN     (6948768.439, 10426136.918]      0.50  
2013-10-12              NaN                  (0, 3183091.2]      0.01  
2013-10-13              NaN        (3183091.2, 6948768.439]      0.02  
2013-10-14              NaN        (3183091.2, 6948768.439]      0.02  
2013-10-15              NaN        (3183091.2, 6948768.439]      0.02  
2013-10-16              NaN        (3183091.2, 6948768.439]      0.02  
2013-10-17              NaN                  (0, 3183091.2]      0.01  
2013-10-18              NaN        (3183091.2, 6948768.439]      0.02  
2013-10-19              NaN     (6948768.439, 10426136.918]      0.50  
2013-10-20              NaN        (3183091.2, 6948768.439]      0.02  
2013-10-21              NaN     (6948768.439, 10426136.918]      0.50  
2013-10-22              NaN     (6948768.439, 10426136.918]      0.50  
2013-10-23              NaN    (10426136.918, 16843606.244]      1.00  
2013-10-24              NaN    (16843606.244, 23062762.387]      1.50  
2013-10-25              NaN    (16843606.244, 23062762.387]      1.50  
2013-10-26              NaN     (6948768.439, 10426136.918]      0.50  
2013-10-27              NaN                  (0, 3183091.2]      0.01  
2013-10-28  16698144.000000      (-4379402.938, -58840.513]     -0.50  
...                     ...                             ...       ...  
2014-10-04  -8906709.333333  (-17143467.131, -11402992.498]     -1.50  
2014-10-05  -3273499.733333   (-11402992.498, -4379402.938]     -1.00  
2014-10-06    -96704.000000      (-4379402.938, -58840.513]     -0.50  
2014-10-07   1176629.333333                  (0, 3183091.2]      0.01  
2014-10-08   8478937.600000     (6948768.439, 10426136.918]      0.50  
2014-10-09   7560401.066667     (6948768.439, 10426136.918]      0.50  
2014-10-10   7727590.400000     (6948768.439, 10426136.918]      0.50  
2014-10-11   8015620.266667     (6948768.439, 10426136.918]      0.50  
2014-10-12  11989597.866667    (10426136.918, 16843606.244]      1.00  
2014-10-13  10487889.066667     (6948768.439, 10426136.918]      0.50  
2014-10-14  13158493.866667     (6948768.439, 10426136.918]      0.50  
2014-10-15  25012119.466667    (16843606.244, 23062762.387]      1.50  
2014-10-16  37367460.266667    (23062762.387, 31915408.491]      2.00  
2014-10-17  31317826.133333    (16843606.244, 23062762.387]      1.50  
2014-10-18  29123737.600000    (10426136.918, 16843606.244]      1.00  
2014-10-19  29774350.933333    (10426136.918, 16843606.244]      1.00  
2014-10-20  34120407.466667    (10426136.918, 16843606.244]      1.00  
2014-10-21  36372554.666667    (10426136.918, 16843606.244]      1.00  
2014-10-22  40061962.666667    (16843606.244, 23062762.387]      1.50  
2014-10-23  39048629.333333    (10426136.918, 16843606.244]      1.00  
2014-10-24  35415296.000000     (6948768.439, 10426136.918]      0.50  
2014-10-25  27600121.600000                  (0, 3183091.2]      0.01  
2014-10-26  31128539.733333        (3183091.2, 6948768.439]      0.02  
2014-10-27  31596230.400000        (3183091.2, 6948768.439]      0.02  
2014-10-28  29953597.866667        (3183091.2, 6948768.439]      0.02  
2014-10-29  33253890.133333        (3183091.2, 6948768.439]      0.02  
2014-10-30  40312142.933333    (10426136.918, 16843606.244]      1.00  
2014-10-31  39945459.200000    (10426136.918, 16843606.244]      1.00  
2014-11-01  38172093.866667    (10426136.918, 16843606.244]      1.00  
2014-11-02  34997427.200000     (6948768.439, 10426136.918]      0.50  

[400 rows x 8 columns]

In [127]: plex.avgprice.plot()
Out[127]: <matplotlib.axes._subplots.AxesSubplot at 0x3e3e4dd8>




In [128]: plex.avgprice['2014-07'].plot()
Out[128]: <matplotlib.axes._subplots.AxesSubplot at 0x406f8b38>




In [129]: foo = Out[128]

In [130]: julplex = plex.avgprice['2014-07']

In [131]: julplex[plex.flags_10l.isin(-2.5,-2,2,2.5))]
  File "<ipython-input-131-43f43e59a8b4>", line 1
    julplex[plex.flags_10l.isin(-2.5,-2,2,2.5))]
                                              ^
SyntaxError: invalid syntax


In [132]: julplex[plex.flags_10l.isin([-2.5,-2,2,2.5])]
Out[132]: 
price_date
2014-07-08    798000000
2014-07-09    812142976
2014-07-10    818181120
2014-07-23    785055552
2014-07-24    778743552
2014-07-25    775000000
2014-07-26    770000000
Name: avgprice, dtype: float64

In [133]: julplex.plot()
Out[133]: <matplotlib.axes._subplots.AxesSubplot at 0x358bc8d0>




In [134]: julplex[plex.flags_10l.isin([-2.5,-2,2,2.5])].plot(kind='point')
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-134-8287061c7f9f> in <module>()
----> 1 julplex[plex.flags_10l.isin([-2.5,-2,2,2.5])].plot(kind='point')

D:\Anaconda\lib\site-packages\pandas\tools\plotting.pyc in plot_series(data, kind, ax, figsize, use_index, title, grid, legend, style, logx, logy, loglog, xticks, yticks, xlim, ylim, rot, fontsize, colormap, table, yerr, xerr, label, secondary_y, **kwds)
   2485                  yerr=yerr, xerr=xerr,
   2486                  label=label, secondary_y=secondary_y,
-> 2487                  **kwds)
   2488 
   2489 

D:\Anaconda\lib\site-packages\pandas\tools\plotting.pyc in _plot(data, x, y, subplots, ax, kind, **kwds)
   2244         klass = _plot_klass[kind]
   2245     else:
-> 2246         raise ValueError('Invalid chart type given %s' % kind)
   2247 
   2248     from pandas import DataFrame

ValueError: Invalid chart type given point

In [135]: julplex[plex.flags_10l.isin([-2.5,-2,2,2.5])].plot(kind='scatter')
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-135-0dfa3de45073> in <module>()
----> 1 julplex[plex.flags_10l.isin([-2.5,-2,2,2.5])].plot(kind='scatter')

D:\Anaconda\lib\site-packages\pandas\tools\plotting.pyc in plot_series(data, kind, ax, figsize, use_index, title, grid, legend, style, logx, logy, loglog, xticks, yticks, xlim, ylim, rot, fontsize, colormap, table, yerr, xerr, label, secondary_y, **kwds)
   2485                  yerr=yerr, xerr=xerr,
   2486                  label=label, secondary_y=secondary_y,
-> 2487                  **kwds)
   2488 
   2489 

D:\Anaconda\lib\site-packages\pandas\tools\plotting.pyc in _plot(data, x, y, subplots, ax, kind, **kwds)
   2252                              kind=kind, **kwds)
   2253         else:
-> 2254             raise ValueError('Invalid chart type given %s' % kind)
   2255 
   2256     elif kind in _series_kinds:

ValueError: Invalid chart type given scatter

In [136]: julplex[plex.flags_10l.isin([-2.5,-2,2,2.5])]
Out[136]: 
price_date
2014-07-08    798000000
2014-07-09    812142976
2014-07-10    818181120
2014-07-23    785055552
2014-07-24    778743552
2014-07-25    775000000
2014-07-26    770000000
Name: avgprice, dtype: float64

In [137]: ax = julplex.plot()




In [138]: ax.plot(julplex[plex.flags_10l.isin([-2.5,-2])], style='ro')
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-138-4fc3ad92dc3f> in <module>()
----> 1 ax.plot(julplex[plex.flags_10l.isin([-2.5,-2])], style='ro')

D:\Anaconda\lib\site-packages\matplotlib\axes\_axes.pyc in plot(self, *args, **kwargs)
   1371         lines = []
   1372 
-> 1373         for line in self._get_lines(*args, **kwargs):
   1374             self.add_line(line)
   1375             lines.append(line)

D:\Anaconda\lib\site-packages\matplotlib\axes\_base.pyc in _grab_next_args(self, *args, **kwargs)
    301                 return
    302             if len(remaining) <= 3:
--> 303                 for seg in self._plot_args(remaining, kwargs):
    304                     yield seg
    305                 return

D:\Anaconda\lib\site-packages\matplotlib\axes\_base.pyc in _plot_args(self, tup, kwargs)
    289         ncx, ncy = x.shape[1], y.shape[1]
    290         for j in xrange(max(ncx, ncy)):
--> 291             seg = func(x[:, j % ncx], y[:, j % ncy], kw, kwargs)
    292             ret.append(seg)
    293         return ret

D:\Anaconda\lib\site-packages\matplotlib\axes\_base.pyc in _makeline(self, x, y, kw, kwargs)
    241                             **kw
    242                             )
--> 243         self.set_lineprops(seg, **kwargs)
    244         return seg
    245 

D:\Anaconda\lib\site-packages\matplotlib\axes\_base.pyc in set_lineprops(self, line, **kwargs)
    182             funcName = "set_%s" % key
    183             if not hasattr(line, funcName):
--> 184                 raise TypeError('There is no line property "%s"' % key)
    185             func = getattr(line, funcName)
    186             func(val)

TypeError: There is no line property "style"

In [139]: ax.plot(julplex[plex.flags_10l.isin([-2.5,-2])])
Out[139]: [<matplotlib.lines.Line2D at 0x31255a90>]

In [140]: ax
Out[140]: <matplotlib.axes._subplots.AxesSubplot at 0x2ea55f60>

In [141]: ax.matshow()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-141-3db26f3b964b> in <module>()
----> 1 ax.matshow()

TypeError: matshow() takes exactly 2 arguments (1 given)

In [142]: import pylab as p

In [143]: p.show(ax)

In [144]: ax = julplex.plot()




In [145]: ax.plot(julplex[plex.flags_10l.isin([-2.5,-2])])
Out[145]: [<matplotlib.lines.Line2D at 0x2ea9f128>]

In [146]: ax
Out[146]: <matplotlib.axes._subplots.AxesSubplot at 0x2de50eb8>

In [147]: import matplotlib.pyplot as pp

In [148]: show(ax)

In [149]: pp.show(ax)

In [150]: 

In [150]: ax
Out[150]: <matplotlib.axes._subplots.AxesSubplot at 0x2de50eb8>

In [151]: f = pp.figure()
<matplotlib.figure.Figure at 0x2dd7fb00>

In [152]: f.add_subplot(julplex.plot())
---------------------------------------------------------------------------
AssertionError                            Traceback (most recent call last)
<ipython-input-152-69ed7bb8b1e5> in <module>()
----> 1 f.add_subplot(julplex.plot())

D:\Anaconda\lib\site-packages\matplotlib\figure.pyc in add_subplot(self, *args, **kwargs)
    932 
    933             a = args[0]
--> 934             assert(a.get_figure() is self)
    935             # make a key for the subplot (which includes the axes object id
    936             # in the hash)

AssertionError: 




In [153]: pp.plot(julplex)
Out[153]: [<matplotlib.lines.Line2D at 0x2b2cb9b0>]




In [154]: pp.plot(julplex,julplex.index)
Out[154]: [<matplotlib.lines.Line2D at 0x31a1d0f0>]




In [155]: julplex.plot()
Out[155]: <matplotlib.axes._subplots.AxesSubplot at 0x31a09160>




In [156]: ax = julplex.plot()




In [157]: pp.figure(); julplex.plot()
Out[157]: <matplotlib.axes._subplots.AxesSubplot at 0x35e6a9e8>




In [158]: julplex[plex.flags_10l.isin([-2.5,-2,2,2.5])]
Out[158]: 
price_date
2014-07-08    798000000
2014-07-09    812142976
2014-07-10    818181120
2014-07-23    785055552
2014-07-24    778743552
2014-07-25    775000000
2014-07-26    770000000
Name: avgprice, dtype: float64

In [159]: low_flag = julplex[plex.flags_10l.isin([-2.5,-2])]

In [160]: hi_flag = julplex[plex.flags_10l.isin([2.5,2])]

In [161]: low_flag
Out[161]: 
price_date
2014-07-23    785055552
2014-07-24    778743552
2014-07-25    775000000
2014-07-26    770000000
Name: avgprice, dtype: float64

In [162]: low_flag.plot(style='ro')
Out[162]: <matplotlib.axes._subplots.AxesSubplot at 0x35e87c50>




In [163]: hi_flag.plot(style='bo')
Out[163]: <matplotlib.axes._subplots.AxesSubplot at 0x3a93add8>




In [164]: help(pp.figure)
Help on function figure in module matplotlib.pyplot:

figure(num=None, figsize=None, dpi=None, facecolor=None, edgecolor=None, frameon=True, FigureClass=<class 'matplotlib.figure.Figure'>, **kwargs)
    Creates a new figure.
    
    Parameters
    ----------
    
    num : integer or string, optional, default: none
        If not provided, a new figure will be created, and the figure number
        will be incremented. The figure objects holds this number in a `number`
        attribute.
        If num is provided, and a figure with this id already exists, make
        it active, and returns a reference to it. If this figure does not
        exists, create it and returns it.
        If num is a string, the window title will be set to this figure's
        `num`.
    
    figsize : tuple of integers, optional, default: None
        width, height in inches. If not provided, defaults to rc
        figure.figsize.
    
    dpi : integer, optional, default: None
        resolution of the figure. If not provided, defaults to rc figure.dpi.
    
    facecolor :
        the background color. If not provided, defaults to rc figure.facecolor
    
    edgecolor :
        the border color. If not provided, defaults to rc figure.edgecolor
    
    Returns
    -------
    figure : Figure
        The Figure instance returned will also be passed to new_figure_manager
        in the backends, which allows to hook custom Figure classes into the
        pylab interface. Additional kwargs will be passed to the figure init
        function.
    
    Notes
    -----
    If you are creating many figures, make sure you explicitly call "close"
    on the figures you are not using, because this will enable pylab
    to properly clean up the memory.
    
    rcParams defines the default values, which can be modified in the
    matplotlibrc file


In [165]: f = pp.figure(num='July 2014 PLEX');
<matplotlib.figure.Figure at 0x35763358>

In [166]: help(julplex.plot)
Help on method plot_series in module pandas.tools.plotting:

plot_series(data, kind='line', ax=None, figsize=None, use_index=True, title=None, grid=None, legend=False, style=None, logx=False, logy=False, loglog=False, xticks=None, yticks=None, xlim=None, ylim=None, rot=None, fontsize=None, colormap=None, table=False, yerr=None, xerr=None, label=None, secondary_y=False, **kwds) method of pandas.core.series.Series instance
    Make plots of Series using matplotlib / pylab.
    
    Parameters
    ----------
    data : Series
    
    kind : str
        - 'line' : line plot (default)
        - 'bar' : vertical bar plot
        - 'barh' : horizontal bar plot
        - 'hist' : histogram
        - 'box' : boxplot
        - 'kde' : Kernel Density Estimation plot
        - 'density' : same as 'kde'
        - 'area' : area plot
        - 'pie' : pie plot
        
    ax : matplotlib axes object
        If not passed, uses gca()
    figsize : a tuple (width, height) in inches
    use_index : boolean, default True
        Use index as ticks for x axis
    title : string
        Title to use for the plot
    grid : boolean, default None (matlab style default)
        Axis grid lines
    legend : False/True/'reverse'
        Place legend on axis subplots
    style : list or dict
        matplotlib line style per column
    logx : boolean, default False
        Use log scaling on x axis
    logy : boolean, default False
        Use log scaling on y axis
    loglog : boolean, default False
        Use log scaling on both x and y axes
    xticks : sequence
        Values to use for the xticks
    yticks : sequence
        Values to use for the yticks
    xlim : 2-tuple/list
    ylim : 2-tuple/list
    rot : int, default None
        Rotation for ticks
    fontsize : int, default None
        Font size for ticks
    colormap : str or matplotlib colormap object, default None
        Colormap to select colors from. If string, load colormap with that name
        from matplotlib.
    colorbar : boolean, optional
        If True, plot colorbar (only relevant for 'scatter' and 'hexbin' plots)
    position : float
        Specify relative alignments for bar plot layout.
        From 0 (left/bottom-end) to 1 (right/top-end). Default is 0.5 (center)
    layout : tuple (optional)
        (rows, columns) for the layout of the plot
    table : boolean, Series or DataFrame, default False
        If True, draw a table using the data in the DataFrame and the data will
        be transposed to meet matplotlib's default layout.
        If a Series or DataFrame is passed, use passed data to draw a table.
    yerr : DataFrame, Series, array-like, dict and str
        See :ref:`Plotting with Error Bars <visualization.errorbars>` for detail.
    xerr : same types as yerr.
    label : label argument to provide to plot
    secondary_y : boolean or sequence of ints, default False
        If True then y-axis will be on the right
    mark_right : boolean, default True
        When using a secondary_y axis, automatically mark the column
        labels with "(right)" in the legend
    kwds : keywords
        Options to pass to matplotlib plotting method
    
    Returns
    -------
    axes : matplotlib.AxesSubplot or np.array of them
    
    Notes
    -----
    
    - See matplotlib documentation online for more on this subject
    - If `kind` = 'bar' or 'barh', you can specify relative alignments
      for bar plot layout by `position` keyword.
      From 0 (left/bottom-end) to 1 (right/top-end). Default is 0.5 (center)


In [167]: f
Out[167]: <matplotlib.figure.Figure at 0x35763358>

In [168]: ax = julplex.plot()




In [169]: hi_flag.plot(style='bo')
Out[169]: <matplotlib.axes._subplots.AxesSubplot at 0x2afaf5c0>




In [170]: low_flag.plot(style='ro')
Out[170]: <matplotlib.axes._subplots.AxesSubplot at 0x333736d8>




In [171]: hi_flag
Out[171]: 
price_date
2014-07-08    798000000
2014-07-09    812142976
2014-07-10    818181120
Name: avgprice, dtype: float64

In [172]: hi_flag.rename_axis
Out[172]: 
<bound method Series.rename_axis of price_date
2014-07-08    798000000
2014-07-09    812142976
2014-07-10    818181120
Name: avgprice, dtype: float64>

In [173]: help(hi_flag.rename_axis)
Help on method rename_axis in module pandas.core.generic:

rename_axis(self, mapper, axis=0, copy=True, inplace=False) method of pandas.core.series.Series instance
    Alter index and / or columns using input function or functions.
    Function / dict values must be unique (1-to-1). Labels not contained in
    a dict / Series will be left as-is.
    
    Parameters
    ----------
    mapper : dict-like or function, optional
    axis : int or string, default 0
    copy : boolean, default True
        Also copy underlying data
    inplace : boolean, default False
    
    Returns
    -------
    renamed : type of caller


In [174]: julplex['hi_flag'] = hi_flag

In [175]: julplex['low_flag']= low_flag

In [176]: julplex
Out[176]: 
price_date
2014-07-01 00:00:00                                           7.4945e+08
2014-07-02 00:00:00                                           7.5322e+08
2014-07-03 00:00:00                                         7.650017e+08
2014-07-04 00:00:00                                         7.717002e+08
2014-07-05 00:00:00                                             7.68e+08
2014-07-06 00:00:00                                         7.729999e+08
2014-07-07 00:00:00                                              7.8e+08
2014-07-08 00:00:00                                             7.98e+08
2014-07-09 00:00:00                                          8.12143e+08
2014-07-10 00:00:00                                         8.181811e+08
2014-07-11 00:00:00                                              7.9e+08
2014-07-12 00:00:00                                           7.8418e+08
2014-07-13 00:00:00                                             7.93e+08
2014-07-14 00:00:00                                         7.959785e+08
2014-07-15 00:00:00                                          8.04013e+08
2014-07-16 00:00:00                                         8.138356e+08
2014-07-17 00:00:00                                          8.11989e+08
2014-07-18 00:00:00                                              8.1e+08
2014-07-19 00:00:00                                         8.000002e+08
2014-07-20 00:00:00                                             8.03e+08
2014-07-21 00:00:00                                          8.07422e+08
2014-07-22 00:00:00                                          7.93299e+08
2014-07-23 00:00:00                                         7.850556e+08
2014-07-24 00:00:00                                         7.787436e+08
2014-07-25 00:00:00                                             7.75e+08
2014-07-26 00:00:00                                              7.7e+08
2014-07-27 00:00:00                                             7.75e+08
2014-07-28 00:00:00                                             7.85e+08
2014-07-29 00:00:00                                           7.9285e+08
2014-07-30 00:00:00                                             7.95e+08
2014-07-31 00:00:00                                          7.91609e+08
hi_flag                price_date
2014-07-08    798000000
2014-07-09 ...
low_flag               price_date
2014-07-23    785055552
2014-07-24 ...
Name: avgprice, dtype: object

In [177]: julflag
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-177-3c5a627a975b> in <module>()
----> 1 julflag

NameError: name 'julflag' is not defined

In [178]: julplex.plot()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-178-a6d69bdca926> in <module>()
----> 1 julplex.plot()

D:\Anaconda\lib\site-packages\pandas\tools\plotting.pyc in plot_series(data, kind, ax, figsize, use_index, title, grid, legend, style, logx, logy, loglog, xticks, yticks, xlim, ylim, rot, fontsize, colormap, table, yerr, xerr, label, secondary_y, **kwds)
   2485                  yerr=yerr, xerr=xerr,
   2486                  label=label, secondary_y=secondary_y,
-> 2487                  **kwds)
   2488 
   2489 

D:\Anaconda\lib\site-packages\pandas\tools\plotting.pyc in _plot(data, x, y, subplots, ax, kind, **kwds)
   2291         plot_obj = klass(data, subplots=subplots, ax=ax, kind=kind, **kwds)
   2292 
-> 2293     plot_obj.generate()
   2294     plot_obj.draw()
   2295     return plot_obj.result

D:\Anaconda\lib\site-packages\pandas\tools\plotting.pyc in generate(self)
    916     def generate(self):
    917         self._args_adjust()
--> 918         self._compute_plot_data()
    919         self._setup_subplots()
    920         self._make_plot()

D:\Anaconda\lib\site-packages\pandas\tools\plotting.pyc in _compute_plot_data(self)
    992         if is_empty:
    993             raise TypeError('Empty {0!r}: no numeric data to '
--> 994                             'plot'.format(numeric_data.__class__.__name__))
    995 
    996         self.data = numeric_data

TypeError: Empty 'Series': no numeric data to plot

In [179]: %help
ERROR: Line magic function `%help` not found.

In [180]: $help
  $help                     Show a list of REPL commands
  $attach                   Attaches the Visual Studio debugger to the REPL window process to enable debugging
  $cls                      Clears the contents of the REPL editor window
  $echo                     Suppress or unsuppress output to the buffer
  $load                     Loads commands from file and executes until complete
  $mod                      Switches the current scope to the specified module name.
  $reset                    Reset to an empty execution engine, but keep REPL history
  $wait                     Wait for at least the specified number of milliseconds

In [180]: !help
For more information on a specific command, type HELP command-name
ASSOC          Displays or modifies file extension associations.
ATTRIB         Displays or changes file attributes.
BREAK          Sets or clears extended CTRL+C checking.
BCDEDIT        Sets properties in boot database to control boot loading.
CACLS          Displays or modifies access control lists (ACLs) of files.
CALL           Calls one batch program from another.
CD             Displays the name of or changes the current directory.
CHCP           Displays or sets the active code page number.
CHDIR          Displays the name of or changes the current directory.
CHKDSK         Checks a disk and displays a status report.
CHKNTFS        Displays or modifies the checking of disk at boot time.
CLS            Clears the screen.
CMD            Starts a new instance of the Windows command interpreter.
COLOR          Sets the default console foreground and background colors.
COMP           Compares the contents of two files or sets of files.
COMPACT        Displays or alters the compression of files on NTFS partitions.
CONVERT        Converts FAT volumes to NTFS.  You cannot convert the
               current drive.
COPY           Copies one or more files to another location.
DATE           Displays or sets the date.
DEL            Deletes one or more files.
DIR            Displays a list of files and subdirectories in a directory.
DISKCOMP       Compares the contents of two floppy disks.
DISKCOPY       Copies the contents of one floppy disk to another.
DISKPART       Displays or configures Disk Partition properties.
DOSKEY         Edits command lines, recalls Windows commands, and 
               creates macros.
DRIVERQUERY    Displays current device driver status and properties.
ECHO           Displays messages, or turns command echoing on or off.
ENDLOCAL       Ends localization of environment changes in a batch file.
ERASE          Deletes one or more files.
EXIT           Quits the CMD.EXE program (command interpreter).
FC             Compares two files or sets of files, and displays the 
               differences between them.
FIND           Searches for a text string in a file or files.
FINDSTR        Searches for strings in files.
FOR            Runs a specified command for each file in a set of files.
FORMAT         Formats a disk for use with Windows.
FSUTIL         Displays or configures the file system properties.
FTYPE          Displays or modifies file types used in file extension 
               associations.
GOTO           Directs the Windows command interpreter to a labeled line in 
               a batch program.
GPRESULT       Displays Group Policy information for machine or user.
GRAFTABL       Enables Windows to display an extended character set in 
               graphics mode.
HELP           Provides Help information for Windows commands.
ICACLS         Display, modify, backup, or restore ACLs for files and 
               directories.
IF             Performs conditional processing in batch programs.
LABEL          Creates, changes, or deletes the volume label of a disk.
MD             Creates a directory.
MKDIR          Creates a directory.
MKLINK         Creates Symbolic Links and Hard Links
MODE           Configures a system device.
MORE           Displays output one screen at a time.
MOVE           Moves one or more files from one directory to another 
               directory.
OPENFILES      Displays files opened by remote users for a file share.
PATH           Displays or sets a search path for executable files.
PAUSE          Suspends processing of a batch file and displays a message.
POPD           Restores the previous value of the current directory saved by 
               PUSHD.
PRINT          Prints a text file.
PROMPT         Changes the Windows command prompt.
PUSHD          Saves the current directory then changes it.
RD             Removes a directory.
RECOVER        Recovers readable information from a bad or defective disk.
REM            Records comments (remarks) in batch files or CONFIG.SYS.
REN            Renames a file or files.
RENAME         Renames a file or files.
REPLACE        Replaces files.
RMDIR          Removes a directory.
ROBOCOPY       Advanced utility to copy files and directory trees
SET            Displays, sets, or removes Windows environment variables.
SETLOCAL       Begins localization of environment changes in a batch file.
SC             Displays or configures services (background processes).
SCHTASKS       Schedules commands and programs to run on a computer.
SHIFT          Shifts the position of replaceable parameters in batch files.
SHUTDOWN       Allows proper local or remote shutdown of machine.
SORT           Sorts input.
START          Starts a separate window to run a specified program or command.
SUBST          Associates a path with a drive letter.
SYSTEMINFO     Displays machine specific properties and configuration.
TASKLIST       Displays all currently running tasks including services.
TASKKILL       Kill or stop a running process or application.
TIME           Displays or sets the system time.
TITLE          Sets the window title for a CMD.EXE session.
TREE           Graphically displays the directory structure of a drive or 
               path.
TYPE           Displays the contents of a text file.
VER            Displays the Windows version.
VERIFY         Tells Windows whether to verify that your files are written
               correctly to a disk.
VOL            Displays a disk volume label and serial number.
XCOPY          Copies files and directory trees.
WMIC           Displays WMI information inside interactive command shell.

For more information on tools see the command-line reference in the online help.

In [181]: %
ERROR: Line magic function `%` not found.

In [182]: help(magic)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-182-2bc25993b5d7> in <module>()
----> 1 help(magic)

NameError: name 'magic' is not defined

In [183]: history
import pandas as pd
import stat_script as s
plex10d = v.market_data_groups.get_group(29668).tail(10).price_delta
plex10d = v.market_data_groups.get_group(29668).tail(10)
v = s.V
plex10d = v.market_data_groups.get_group(29668).tail(10)
plex10d
plexstats = v.stats.loc[29668,['volume','price_delta_10', 'price_delta_30']]
plexstats
plex10d = v.market_data_groups.get_group(29668).tail(10).mean
plex10d
plex10d = v.market_data_groups.get_group(29668).tail(10)
plex10d.mean()
plex10d.mean.price_delta_30
plex10d.mean().price_delta_30
v.stats.loc[29668]
v.stats.loc[29668, ('price_delta_10')]
v.stats.loc[29668, 'price_delta_10']
s = v.stats.loc[29668, 'price_delta_10']
s.loc['SN2P5':]
float('-inf')
float('inf')
ses = [-2.5,-2.0,-1.5,-1.0,-0.5,0.0,0.01,0.02,0.5,1.0,1.5,2.0,2.5]
vs = s.loc['SN2P5']
vs = s.loc['SN2P5':].values()
vs = s.loc['SN2P5':]
vs
vs.values()
vs.tolist()
vs = s.loc['SN2P5':].tolist()
vs.insert(0,float('-inf'))
vs.insert(-1,float('inf'))
vs
vs = s.loc['SN2P5':].tolist()
vs.insert(0,float('-inf'))
vs.append(inf)
len(vs)
len(ses)
plex = v.market_data_groups.get_group(29668)
plex
plex.index = plex.price_date
plex = plex.tail(366)
plex
del(plex['itemid'])
del(plex['price_date'])
plex
plex = v.market_data_groups.get_group(29668)
plex.index = plex.price_date
plex = plex.resample('10Day',closed='right',label='right')
plex = plex.resample('10D',closed='right',label='right')
plex
ses
vs
plex
pd.cut(plex, vs,labels = ses)
vs
vs.insert(6,0.0)
vs
pd.cut(plex, vs,labels = ses)
plex
labels
vs
ses
vs
v.stats.loc[29668]
v.stats.loc[29668,'price_delta_10']
vs
plex['flags_10'] = pd.cut(plex.price_delta_10, vs,labels = ses)
plex
plex['price_delta_10','flags_10']
plex[['price_delta_10','flags_10']]
plex[abs(plex['flags_10']) >= 1.0, ['price_delta_10','flags_10']]
plex[plex['flags_10'].abs() >= 1.0, ['price_delta_10','flags_10']]
plex[['price_delta_10','flags_10']]
plex['flags_10']
plex['flags_10'].iloc[2]
plex['flags_10'].loc[2]
plex['flags_10'].ix[2]
plex['flags_10'].at(2)
plex['flags_10'].irow(2)
plex
plex.loc['2013-10-29','flags_10']
plex['flags_10']
vs
plex['flags_10'] = pd.cut(plex.price_delta_10, vs)
plex
plex['flags_10l'] = pd.cut(plex.price_delta_10, vs, labels=ses)
plex
v.stats.loc[29668]
v.stats.loc[29668,'price_delta_10']
plex['price_delta_10', 'flags10','flags_10l']
plex[['price_delta_10', 'flags10','flags_10l']]
plex
plex.loc[:,['price_delta_10', 'flags10','flags_10l']]
plex.loc[:,['price_delta_10', 'flags_10','flags_10l']]
v.stats.loc[29668,'price_delta_10']
plex.loc[:,['price_delta_10', 'flags_10','flags_10l']].groupby('flags_10l')
gs = plex.loc[:,['price_delta_10', 'flags_10','flags_10l']].groupby('flags_10l')
gs
gs.groups()
gs.groups
gs.get_group(-1.5)
gs.get_group(1.5)
v.stats.loc[29668,'price_delta_10']
plex = v.market_data_groups[29668]
plex = v.market_data_groups.get_group(29668)
plex['flags_10'] = pd.cut(plex.price_delta_10, vs)
plex['flags_10l'] = pd.cut(plex.price_delta_10, vs, labels=ses)
plex
plex.index = plex.price_date
plex.sort('flags10',inplace=True)
plex.sort('flags_10l',inplace=True)
plex
plex.loc[:,'price_delta_10','flags_10l']
plex.loc[:,['price_delta_10','flags_10l']]
plex10 = plex.loc[:,['price_delta_10','flags_10l']]
plex10.groupby('flag_10l')
gp10 = plex10.groupby('flags_10l')
gp10.get_group([-2.5,-2.0,2.0,2.5])
gp10.get_group(-2.5)
gp10.get_group(-2.0)
gp10.get_group(2.0)
gp10.get_group(2.5)
plex
plex = plex.sort()
plex
plex.avgprice.plot()
plex.avgprice['2014-07'].plot()
foo = Out[128]
julplex = plex.avgprice['2014-07']
julplex[plex.flags_10l.isin(-2.5,-2,2,2.5))]
julplex[plex.flags_10l.isin([-2.5,-2,2,2.5])]
julplex.plot()
julplex[plex.flags_10l.isin([-2.5,-2,2,2.5])].plot(kind='point')
julplex[plex.flags_10l.isin([-2.5,-2,2,2.5])].plot(kind='scatter')
julplex[plex.flags_10l.isin([-2.5,-2,2,2.5])]
ax = julplex.plot()
ax.plot(julplex[plex.flags_10l.isin([-2.5,-2])], style='ro')
ax.plot(julplex[plex.flags_10l.isin([-2.5,-2])])
ax
ax.matshow()
import pylab as p
p.show(ax)
ax = julplex.plot()
ax.plot(julplex[plex.flags_10l.isin([-2.5,-2])])
ax
import matplotlib.pyplot as pp
show(ax)
pp.show(ax)
ax
f = pp.figure()
f.add_subplot(julplex.plot())
pp.plot(julplex)
pp.plot(julplex,julplex.index)
julplex.plot()
ax = julplex.plot()
pp.figure(); julplex.plot()
julplex[plex.flags_10l.isin([-2.5,-2,2,2.5])]
low_flag = julplex[plex.flags_10l.isin([-2.5,-2])]
hi_flag = julplex[plex.flags_10l.isin([2.5,2])]
low_flag
low_flag.plot(style='ro')
hi_flag.plot(style='bo')
help(pp.figure)
f = pp.figure(num='July 2014 PLEX');
help(julplex.plot)
f
ax = julplex.plot()
hi_flag.plot(style='bo')
low_flag.plot(style='ro')
hi_flag
hi_flag.rename_axis
help(hi_flag.rename_axis)
julplex['hi_flag'] = hi_flag
julplex['low_flag']= low_flag
julplex
julflag
julplex.plot()
%help
!help
%
help(magic)
history

In [184]: julplex = plex['2014-07']

In [185]: julplex
Out[185]: 
            itemid price_date  volume   avgprice  price_delta_10  \
price_date                                                         
2014-07-01   29668 2014-07-01    2319  749449984       5227590.4   
2014-07-02   29668 2014-07-02    2585  753220032       7171532.8   
2014-07-03   29668 2014-07-03    3002  765001664      16251193.6   
2014-07-04   29668 2014-07-04    2907  771700224      19779731.2   
2014-07-05   29668 2014-07-05    2617  768000000      13879507.2   
2014-07-06   29668 2014-07-06    2835  772999936      16379449.6   
2014-07-07   29668 2014-07-07    3043  780000000      20079513.6   
2014-07-08   29668 2014-07-08    2888  798000000      32779513.6   
2014-07-09   29668 2014-07-09    2724  812142976      40290374.4   
2014-07-10   29668 2014-07-10    3238  818181120      39311526.4   
2014-07-11   29668 2014-07-11    3094  790000000       7075404.8   
2014-07-12   29668 2014-07-12    3267  784179968      -1840620.8   
2014-07-13   29668 2014-07-13    3215  793000000       4179577.6   
2014-07-14   29668 2014-07-14    2345  795978496       4730246.4   
2014-07-15   29668 2014-07-15    2331  804012992       9163443.2   
2014-07-16   29668 2014-07-16    2820  813835584      14902470.4   
2014-07-17   29668 2014-07-17    2659  811988992       9856979.2   
2014-07-18   29668 2014-07-18    2394  810000000       6667987.2   
2014-07-19   29668 2014-07-19    3123  800000192      -2117542.4   
2014-07-20   29668 2014-07-20    2636  803000000       2400377.6   
2014-07-21   29668 2014-07-21    2738  807421952       5080134.4   
2014-07-22   29668 2014-07-22    3230  793299008      -9954713.6   
2014-07-23   29668 2014-07-23    3365  785055552     -17403724.8   
2014-07-24   29668 2014-07-24    3103  778743552     -21992230.4   
2014-07-25   29668 2014-07-25    2824  775000000     -22834483.2   
2014-07-26   29668 2014-07-26    4118  770000000     -23450924.8   
2014-07-27   29668 2014-07-27    3199  775000000     -14752025.6   
2014-07-28   29668 2014-07-28    3035  785000000      -2252025.6   
2014-07-29   29668 2014-07-29    2385  792849984       6312979.2   
2014-07-30   29668 2014-07-30    2212  795000000       9262995.2   
2014-07-31   29668 2014-07-31    2517  791609024       7453312.0   

             price_delta_30                        flags_10 flags_10l  
price_date                                                             
2014-07-01  14879236.266667        (3183091.2, 6948768.439]      0.02  
2014-07-02  18219483.733333     (6948768.439, 10426136.918]      0.50  
2014-07-03  29107726.933333    (10426136.918, 16843606.244]      1.00  
2014-07-04  34259712.000000    (16843606.244, 23062762.387]      1.50  
2014-07-05  29292821.333333    (10426136.918, 16843606.244]      1.00  
2014-07-06  32559426.133333    (10426136.918, 16843606.244]      1.00  
2014-07-07  37556155.733333    (16843606.244, 23062762.387]      1.50  
2014-07-08  53103955.200000             (31915408.491, inf]      2.50  
2014-07-09  64342165.333333             (31915408.491, inf]      2.50  
2014-07-10  67359460.266667             (31915408.491, inf]      2.50  
2014-07-11  37111673.600000     (6948768.439, 10426136.918]      0.50  
2014-07-12  29418976.000000      (-4379402.938, -58840.513]     -0.50  
2014-07-13  36139008.000000        (3183091.2, 6948768.439]      0.02  
2014-07-14  36918220.800000        (3183091.2, 6948768.439]      0.02  
2014-07-15  42435616.000000     (6948768.439, 10426136.918]      0.50  
2014-07-16  49495421.866667    (10426136.918, 16843606.244]      1.00  
2014-07-17  44982530.133333     (6948768.439, 10426136.918]      0.50  
2014-07-18  40471037.866667        (3183091.2, 6948768.439]      0.02  
2014-07-19  28304556.800000      (-4379402.938, -58840.513]     -0.50  
2014-07-20  28954363.733333                  (0, 3183091.2]      0.01  
2014-07-21  30925683.200000        (3183091.2, 6948768.439]      0.02  
2014-07-22  14858071.466667   (-11402992.498, -4379402.938]     -1.00  
2014-07-23   5045495.466667  (-23190928.549, -17143467.131]     -2.00  
2014-07-24  -2557956.266667  (-23190928.549, -17143467.131]     -2.00  
2014-07-25  -7268174.933333  (-23190928.549, -17143467.131]     -2.00  
2014-07-26 -13001508.266667           (-inf, -23190928.549]     -2.50  
2014-07-27  -8934841.600000  (-17143467.131, -11402992.498]     -1.50  
2014-07-28   -268174.933333      (-4379402.938, -58840.513]     -0.50  
2014-07-29   6014203.733333        (3183091.2, 6948768.439]      0.02  
2014-07-30   6597926.400000     (6948768.439, 10426136.918]      0.50  
2014-07-31   1801649.066667     (6948768.439, 10426136.918]      0.50  

In [186]: del julplex['itemid']

In [187]: del julplex['price_date']

In [188]: del julplex['price_delta_30']

In [189]: del julplex['flags_10']

In [190]: julplex
Out[190]: 
            volume   avgprice  price_delta_10 flags_10l
price_date                                             
2014-07-01    2319  749449984       5227590.4      0.02
2014-07-02    2585  753220032       7171532.8      0.50
2014-07-03    3002  765001664      16251193.6      1.00
2014-07-04    2907  771700224      19779731.2      1.50
2014-07-05    2617  768000000      13879507.2      1.00
2014-07-06    2835  772999936      16379449.6      1.00
2014-07-07    3043  780000000      20079513.6      1.50
2014-07-08    2888  798000000      32779513.6      2.50
2014-07-09    2724  812142976      40290374.4      2.50
2014-07-10    3238  818181120      39311526.4      2.50
2014-07-11    3094  790000000       7075404.8      0.50
2014-07-12    3267  784179968      -1840620.8     -0.50
2014-07-13    3215  793000000       4179577.6      0.02
2014-07-14    2345  795978496       4730246.4      0.02
2014-07-15    2331  804012992       9163443.2      0.50
2014-07-16    2820  813835584      14902470.4      1.00
2014-07-17    2659  811988992       9856979.2      0.50
2014-07-18    2394  810000000       6667987.2      0.02
2014-07-19    3123  800000192      -2117542.4     -0.50
2014-07-20    2636  803000000       2400377.6      0.01
2014-07-21    2738  807421952       5080134.4      0.02
2014-07-22    3230  793299008      -9954713.6     -1.00
2014-07-23    3365  785055552     -17403724.8     -2.00
2014-07-24    3103  778743552     -21992230.4     -2.00
2014-07-25    2824  775000000     -22834483.2     -2.00
2014-07-26    4118  770000000     -23450924.8     -2.50
2014-07-27    3199  775000000     -14752025.6     -1.50
2014-07-28    3035  785000000      -2252025.6     -0.50
2014-07-29    2385  792849984       6312979.2      0.02
2014-07-30    2212  795000000       9262995.2      0.50
2014-07-31    2517  791609024       7453312.0      0.50

In [191]: julplex.plot()
Out[191]: <matplotlib.axes._subplots.AxesSubplot at 0x3ed37cf8>




In [192]: julplex.plot(subplots=True)
Out[192]: 
array([<matplotlib.axes._subplots.AxesSubplot object at 0x000000003FC3CB38>,
       <matplotlib.axes._subplots.AxesSubplot object at 0x000000003EACDBA8>,
       <matplotlib.axes._subplots.AxesSubplot object at 0x000000002A5C4160>,
       <matplotlib.axes._subplots.AxesSubplot object at 0x00000000340EB518>], dtype=object)




In [193]: julplex['hi_flags'] = julplex.avgprice[julplex.flags_10l.isin([2,2.5])
   .....: 										 ]
   .....: 

In [194]: julplex['lo_flags'] = julplex.avgprice[julplex.flags_10l.isin([-2,-2.5])]

In [195]: julplex
Out[195]: 
            volume   avgprice  price_delta_10 flags_10l   hi_flags   lo_flags
price_date                                                                   
2014-07-01    2319  749449984       5227590.4      0.02        NaN        NaN
2014-07-02    2585  753220032       7171532.8      0.50        NaN        NaN
2014-07-03    3002  765001664      16251193.6      1.00        NaN        NaN
2014-07-04    2907  771700224      19779731.2      1.50        NaN        NaN
2014-07-05    2617  768000000      13879507.2      1.00        NaN        NaN
2014-07-06    2835  772999936      16379449.6      1.00        NaN        NaN
2014-07-07    3043  780000000      20079513.6      1.50        NaN        NaN
2014-07-08    2888  798000000      32779513.6      2.50  798000000        NaN
2014-07-09    2724  812142976      40290374.4      2.50  812142976        NaN
2014-07-10    3238  818181120      39311526.4      2.50  818181120        NaN
2014-07-11    3094  790000000       7075404.8      0.50        NaN        NaN
2014-07-12    3267  784179968      -1840620.8     -0.50        NaN        NaN
2014-07-13    3215  793000000       4179577.6      0.02        NaN        NaN
2014-07-14    2345  795978496       4730246.4      0.02        NaN        NaN
2014-07-15    2331  804012992       9163443.2      0.50        NaN        NaN
2014-07-16    2820  813835584      14902470.4      1.00        NaN        NaN
2014-07-17    2659  811988992       9856979.2      0.50        NaN        NaN
2014-07-18    2394  810000000       6667987.2      0.02        NaN        NaN
2014-07-19    3123  800000192      -2117542.4     -0.50        NaN        NaN
2014-07-20    2636  803000000       2400377.6      0.01        NaN        NaN
2014-07-21    2738  807421952       5080134.4      0.02        NaN        NaN
2014-07-22    3230  793299008      -9954713.6     -1.00        NaN        NaN
2014-07-23    3365  785055552     -17403724.8     -2.00        NaN  785055552
2014-07-24    3103  778743552     -21992230.4     -2.00        NaN  778743552
2014-07-25    2824  775000000     -22834483.2     -2.00        NaN  775000000
2014-07-26    4118  770000000     -23450924.8     -2.50        NaN  770000000
2014-07-27    3199  775000000     -14752025.6     -1.50        NaN        NaN
2014-07-28    3035  785000000      -2252025.6     -0.50        NaN        NaN
2014-07-29    2385  792849984       6312979.2      0.02        NaN        NaN
2014-07-30    2212  795000000       9262995.2      0.50        NaN        NaN
2014-07-31    2517  791609024       7453312.0      0.50        NaN        NaN

In [196]: pp.figure()
Out[196]: <matplotlib.figure.Figure at 0x2fd05b38>
<matplotlib.figure.Figure at 0x2fd05b38>

In [197]: julplex.avgprice.plot()
Out[197]: <matplotlib.axes._subplots.AxesSubplot at 0x3e5fd518>




In [198]: julplex.hi_flags.plot(style='ro')
Out[198]: <matplotlib.axes._subplots.AxesSubplot at 0x447c04a8>




In [199]: f = pp.figure()
<matplotlib.figure.Figure at 0x41930cf8>

In [200]: f.hold(True)

In [201]: julplex.avgprice.plot()
Out[201]: <matplotlib.axes._subplots.AxesSubplot at 0x4190f160>




In [202]: julplex.hi_flags.plot(style='ro')
Out[202]: <matplotlib.axes._subplots.AxesSubplot at 0x3a2dd2b0>




In [203]: julplex.lo_flags.plot(style='bo')
Out[203]: <matplotlib.axes._subplots.AxesSubplot at 0x362d8b00>




In [204]: f.hold()

In [205]: f
Out[205]: <matplotlib.figure.Figure at 0x41930cf8>

In [206]: f.show()
D:\Anaconda\lib\site-packages\matplotlib\figure.py:387: UserWarning: matplotlib is currently using a non-GUI backend, so cannot show the figure
  "matplotlib is currently using a non-GUI backend, "

In [207]: pp.show(f)

In [208]: f.savefig()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-208-f34e831be8e1> in <module>()
----> 1 f.savefig()

D:\Anaconda\lib\site-packages\matplotlib\figure.pyc in savefig(self, *args, **kwargs)
   1468             self.set_frameon(frameon)
   1469 
-> 1470         self.canvas.print_figure(*args, **kwargs)
   1471 
   1472         if frameon:

TypeError: print_figure() takes at least 2 arguments (4 given)

In [209]: help (f.savefig)
Help on method savefig in module matplotlib.figure:

savefig(self, *args, **kwargs) method of matplotlib.figure.Figure instance
    Save the current figure.
    
    Call signature::
    
      savefig(fname, dpi=None, facecolor='w', edgecolor='w',
              orientation='portrait', papertype=None, format=None,
              transparent=False, bbox_inches=None, pad_inches=0.1,
              frameon=None)
    
    The output formats available depend on the backend being used.
    
    Arguments:
    
      *fname*:
        A string containing a path to a filename, or a Python
        file-like object, or possibly some backend-dependent object
        such as :class:`~matplotlib.backends.backend_pdf.PdfPages`.
    
        If *format* is *None* and *fname* is a string, the output
        format is deduced from the extension of the filename. If
        the filename has no extension, the value of the rc parameter
        ``savefig.format`` is used.
    
        If *fname* is not a string, remember to specify *format* to
        ensure that the correct backend is used.
    
    Keyword arguments:
    
      *dpi*: [ *None* | ``scalar > 0`` ]
        The resolution in dots per inch.  If *None* it will default to
        the value ``savefig.dpi`` in the matplotlibrc file.
    
      *facecolor*, *edgecolor*:
        the colors of the figure rectangle
    
      *orientation*: [ 'landscape' | 'portrait' ]
        not supported on all backends; currently only on postscript output
    
      *papertype*:
        One of 'letter', 'legal', 'executive', 'ledger', 'a0' through
        'a10', 'b0' through 'b10'. Only supported for postscript
        output.
    
      *format*:
        One of the file extensions supported by the active
        backend.  Most backends support png, pdf, ps, eps and svg.
    
      *transparent*:
        If *True*, the axes patches will all be transparent; the
        figure patch will also be transparent unless facecolor
        and/or edgecolor are specified via kwargs.
        This is useful, for example, for displaying
        a plot on top of a colored background on a web page.  The
        transparency of these patches will be restored to their
        original values upon exit of this function.
    
      *frameon*:
        If *True*, the figure patch will be colored, if *False*, the
        figure background will be transparent.  If not provided, the
        rcParam 'savefig.frameon' will be used.
    
      *bbox_inches*:
        Bbox in inches. Only the given portion of the figure is
        saved. If 'tight', try to figure out the tight bbox of
        the figure.
    
      *pad_inches*:
        Amount of padding around the figure when bbox_inches is
        'tight'.
    
      *bbox_extra_artists*:
        A list of extra artists that will be considered when the
        tight bbox is calculated.


In [210]: f.savefig('d:/temp/plexjul.png')

In [211]: p = julplex.avgprice.plot()




In [212]: p = julplex.avgprice.plot(ax=p)

In [213]: p = julplex.avgprice.plot()




In [214]: julplex.lo_flags.plot(style='bo', ax=p)
Out[214]: <matplotlib.axes._subplots.AxesSubplot at 0x3629be80>

In [215]: f = julplex.hi_flags.plot(style='ro', ax=p)

In [216]: f
Out[216]: <matplotlib.axes._subplots.AxesSubplot at 0x3629be80>

In [217]: f.imshow()
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-217-36ccc539d7a7> in <module>()
----> 1 f.imshow()

TypeError: imshow() takes at least 2 arguments (1 given)

In [218]: f.figure




In [219]: f.figure.savefig('d:/temp/plexjul.png',dpi=200)

In [220]: import scipy as sp

In [221]: sp.stats.norm.cdf(-2)
Out[221]: 0.022750131948179195

In [222]: v.convert
Out[222]: 
                                             name
itemid                                           
18                                    Plagioclase
19                                      Spodumain
20                                        Kernite
21                                     Hedbergite
22                                        Arkonor
34                                      Tritanium
35                                        Pyerite
36                                       Mexallon
37                                         Isogen
38                                        Nocxium
39                                        Zydrine
40                                       Megacyte
41                                        Garbage
42                                    Spiced Wine
43                                    Antibiotics
44                               Enriched Uranium
45                             Frozen Plant Seeds
178                             Carbonized Lead S
179                                     Nuclear S
180                                      Proton S
181                            Depleted Uranium S
182                              Titanium Sabot S
183                                      Fusion S
184                               Phased Plasma S
185                                         EMP S
186                             Carbonized Lead M
187                                     Nuclear M
188                                      Proton M
189                            Depleted Uranium M
190                              Titanium Sabot M
...                                           ...
34124          Experimental Jump Drive Economizer
34126             Prototype Jump Drive Economizer
34132           Pilot's Body Resculpt Certificate
34133         Multiple Pilot Training Certificate
34156            Men's 'Marshal' Jacket (Caldari)
34157              Men's 'Marshal' Jacket (Amarr)
34158           Men's 'Marshal' Jacket (Minmatar)
34159           Men's 'Marshal' Jacket (Gallente)
34160                Men's 'Marshal' Jacket (ORE)
34161     Men's 'Marshal' Jacket (Sisters of EVE)
34162     Men's 'Marshal' Jacket (Mordu's Legion)
34163           Men's 'Marshal' Jacket (interBus)
34164       Men's 'Marshal' Jacket (Angel Cartel)
34165    Men's 'Marshal' Jacket (Sansha's Nation)
34166      Men's 'Marshal' Jacket (Blood Raiders)
34167           Men's 'Marshal' Jacket (Guristas)
34168          Men's 'Marshal' Jacket (Serpentis)
34169           Women's 'Gunner' Jacket (Caldari)
34170             Women's 'Gunner' Jacket (Amarr)
34171          Women's 'Gunner' Jacket (Minmatar)
34172          Women's 'Gunner' Jacket (Gallente)
34173               Women's 'Gunner' Jacket (ORE)
34174    Women's 'Gunner' Jacket (Sisters of EVE)
34175    Women's 'Gunner' Jacket (Mordu's Legion)
34176          Women's 'Gunner' Jacket (interBus)
34177      Women's 'Gunner' Jacket (Angel Cartel)
34178   Women's 'Gunner' Jacket (Sansha's Nation)
34179     Women's 'Gunner' Jacket (Blood Raiders)
34180          Women's 'Gunner' Jacket (Guristas)
34181         Women's 'Gunner' Jacket (Serpentis)

[7794 rows x 1 columns]

In [223]: 'Women' in v.convert.loc[34181]
Out[223]: False

In [224]:  v.convert.loc[34181]
Out[224]: 
name    Women's 'Gunner' Jacket (Serpentis)
Name: 34181, dtype: object

In [225]:  v.convert.loc[34181].name
Out[225]: 34181

In [226]:  v.convert.loc[34181].values
Out[226]: array(["Women's 'Gunner' Jacket (Serpentis)"], dtype=object)

In [227]:  v.convert[34181]
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
<ipython-input-227-7a436896b2c5> in <module>()
----> 1 v.convert[34181]

D:\Anaconda\lib\site-packages\pandas\core\frame.pyc in __getitem__(self, key)
   1741             return self._getitem_multilevel(key)
   1742         else:
-> 1743             return self._getitem_column(key)
   1744 
   1745     def _getitem_column(self, key):

D:\Anaconda\lib\site-packages\pandas\core\frame.pyc in _getitem_column(self, key)
   1748         # get column
   1749         if self.columns.is_unique:
-> 1750             return self._get_item_cache(key)
   1751 
   1752         # duplicate columns & possible reduce dimensionaility

D:\Anaconda\lib\site-packages\pandas\core\generic.pyc in _get_item_cache(self, item)
   1056         res = cache.get(item)
   1057         if res is None:
-> 1058             values = self._data.get(item)
   1059             res = self._box_item_values(item, values)
   1060             cache[item] = res

D:\Anaconda\lib\site-packages\pandas\core\internals.pyc in get(self, item, fastpath)
   2804 
   2805             if not isnull(item):
-> 2806                 loc = self.items.get_loc(item)
   2807             else:
   2808                 indexer = np.arange(len(self.items))[isnull(self.items)]

D:\Anaconda\lib\site-packages\pandas\core\index.pyc in get_loc(self, key)
   1383         loc : int if unique index, possibly slice or mask if not
   1384         """
-> 1385         return self._engine.get_loc(_values_from_object(key))
   1386 
   1387     def get_value(self, series, key):

D:\Anaconda\lib\site-packages\pandas\index.pyd in pandas.index.IndexEngine.get_loc (pandas\index.c:3795)()

D:\Anaconda\lib\site-packages\pandas\index.pyd in pandas.index.IndexEngine.get_loc (pandas\index.c:3675)()

D:\Anaconda\lib\site-packages\pandas\hashtable.pyd in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12299)()

D:\Anaconda\lib\site-packages\pandas\hashtable.pyd in pandas.hashtable.PyObjectHashTable.get_item (pandas\hashtable.c:12250)()

KeyError: 34181

In [228]:  v.convert.loc[34181]
Out[228]: 
name    Women's 'Gunner' Jacket (Serpentis)
Name: 34181, dtype: object

In [229]:  v.convert.loc[34181].name
Out[229]: 34181

In [230]:  v.convert.loc[34181].item
Out[230]: 
<bound method Series.item of name    Women's 'Gunner' Jacket (Serpentis)
Name: 34181, dtype: object>

In [231]:  v.convert.loc[34181].item()
Out[231]: "Women's 'Gunner' Jacket (Serpentis)"

In [232]:  'Women' in v.convert.loc[34181].item()
Out[232]: True

In [233]: v.convert.where(lambda i: 'Alumel' in i)
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-233-04ba7c9402c7> in <module>()
----> 1 v.convert.where(lambda i: 'Alumel' in i)

D:\Anaconda\lib\site-packages\pandas\core\generic.pyc in where(self, cond, other, inplace, axis, level, try_cast, raise_on_error)
   3232         else:
   3233             if not hasattr(cond, 'shape'):
-> 3234                 raise ValueError('where requires an ndarray like object for '
   3235                                  'its condition')
   3236             if cond.shape != self.shape:

ValueError: where requires an ndarray like object for its condition

In [234]: v.convert.item()
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-234-fe950be6f6ba> in <module>()
----> 1 v.convert.item()

D:\Anaconda\lib\site-packages\pandas\core\generic.pyc in __getattr__(self, name)
   1934                 return self[name]
   1935             raise AttributeError("'%s' object has no attribute '%s'" %
-> 1936                                  (type(self).__name__, name))
   1937 
   1938     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'item'

In [235]: v.convert.name
Out[235]: 
itemid
18        Plagioclase
19          Spodumain
20            Kernite
21         Hedbergite
22            Arkonor
34          Tritanium
35            Pyerite
36           Mexallon
37             Isogen
38            Nocxium
39            Zydrine
40           Megacyte
41            Garbage
42        Spiced Wine
43        Antibiotics
...
34167             Men's 'Marshal' Jacket (Guristas)
34168            Men's 'Marshal' Jacket (Serpentis)
34169             Women's 'Gunner' Jacket (Caldari)
34170               Women's 'Gunner' Jacket (Amarr)
34171            Women's 'Gunner' Jacket (Minmatar)
34172            Women's 'Gunner' Jacket (Gallente)
34173                 Women's 'Gunner' Jacket (ORE)
34174      Women's 'Gunner' Jacket (Sisters of EVE)
34175      Women's 'Gunner' Jacket (Mordu's Legion)
34176            Women's 'Gunner' Jacket (interBus)
34177        Women's 'Gunner' Jacket (Angel Cartel)
34178     Women's 'Gunner' Jacket (Sansha's Nation)
34179       Women's 'Gunner' Jacket (Blood Raiders)
34180            Women's 'Gunner' Jacket (Guristas)
34181           Women's 'Gunner' Jacket (Serpentis)
Name: name, Length: 7794, dtype: object

In [236]: 'Alumel' in v.convert.name
Out[236]: False

In [237]: v.convert.name.find('Alumel')
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-237-43d978be579c> in <module>()
----> 1 v.convert.name.find('Alumel')

D:\Anaconda\lib\site-packages\pandas\core\generic.pyc in __getattr__(self, name)
   1934                 return self[name]
   1935             raise AttributeError("'%s' object has no attribute '%s'" %
-> 1936                                  (type(self).__name__, name))
   1937 
   1938     def __setattr__(self, name, value):

AttributeError: 'Series' object has no attribute 'find'

In [238]: [i for i in v.convert]
Out[238]: ['name']

In [239]: [i for i in v.convert.name]
Out[239]: 
['Plagioclase',
 'Spodumain',
 'Kernite',
 'Hedbergite',
 'Arkonor',
 'Tritanium',
 'Pyerite',
 'Mexallon',
 'Isogen',
 'Nocxium',
 'Zydrine',
 'Megacyte',
 'Garbage',
 'Spiced Wine',
 'Antibiotics',
 'Enriched Uranium',
 'Frozen Plant Seeds',
 'Carbonized Lead S',
 'Nuclear S',
 'Proton S',
 'Depleted Uranium S',
 'Titanium Sabot S',
 'Fusion S',
 'Phased Plasma S',
 'EMP S',
 'Carbonized Lead M',
 'Nuclear M',
 'Proton M',
 'Depleted Uranium M',
 'Titanium Sabot M',
 'Fusion M',
 'Phased Plasma M',
 'EMP M',
 'Carbonized Lead L',
 'Nuclear L',
 'Proton L',
 'Depleted Uranium L',
 'Titanium Sabot L',
 'Fusion L',
 'Phased Plasma L',
 'EMP L',
 'Mjolnir Cruise Missile',
 'Scourge Cruise Missile',
 'Inferno Cruise Missile',
 'Nova Cruise Missile',
 'Nova Heavy Missile',
 'Mjolnir Heavy Missile',
 'Inferno Heavy Missile',
 'Scourge Heavy Missile',
 'Scourge Light Missile',
 'Inferno Light Missile',
 'Mjolnir Light Missile',
 'Nova Light Missile',
 'Iron Charge S',
 'Tungsten Charge S',
 'Iridium Charge S',
 'Lead Charge S',
 'Thorium Charge S',
 'Uranium Charge S',
 'Plutonium Charge S',
 'Antimatter Charge S',
 'Iron Charge M',
 'Tungsten Charge M',
 'Iridium Charge M',
 'Lead Charge M',
 'Thorium Charge M',
 'Uranium Charge M',
 'Plutonium Charge M',
 'Antimatter Charge M',
 'Iron Charge L',
 'Tungsten Charge L',
 'Iridium Charge L',
 'Lead Charge L',
 'Thorium Charge L',
 'Uranium Charge L',
 'Plutonium Charge L',
 'Antimatter Charge L',
 'Radio S',
 'Microwave S',
 'Infrared S',
 'Standard S',
 'Ultraviolet S',
 'Xray S',
 'Gamma S',
 'Multifrequency S',
 'Radio M',
 'Microwave M',
 'Infrared M',
 'Standard M',
 'Ultraviolet M',
 'Xray M',
 'Gamma M',
 'Multifrequency M',
 'Radio L',
 'Microwave L',
 'Infrared L',
 'Standard L',
 'Ultraviolet L',
 'Xray L',
 'Gamma L',
 'Multifrequency L',
 'Cap Booster 25',
 'Cap Booster 50',
 'Heavy Defender Missile I',
 'Scourge Rocket',
 'Scourge Torpedo',
 'Mjolnir Auto-Targeting Light Missile I',
 'Small Shield Extender I',
 'Small Shield Extender II',
 'Shield Recharger I',
 'Shield Recharger II',
 'Small Shield Booster I',
 'Small Shield Booster II',
 'Micro Remote Shield Booster I',
 'Micro Remote Shield Booster II',
 'Basic Capacitor Recharger',
 '1MN Microwarpdrive I',
 '1MN Afterburner II',
 '1MN Afterburner I',
 '1MN Microwarpdrive II',
 'Cargo Scanner I',
 'Ship Scanner I',
 'Survey Scanner I',
 'Warp Scrambler I',
 'Warp Scrambler II',
 'Gatling Pulse Laser I',
 'Dual Light Pulse Laser I',
 'Dual Light Beam Laser I',
 'Small Focused Pulse Laser I',
 'Small Focused Beam Laser I',
 'Quad Light Beam Laser I',
 'Focused Medium Pulse Laser I',
 'Focused Medium Beam Laser I',
 'Heavy Pulse Laser I',
 'Heavy Beam Laser I',
 'Dual Heavy Pulse Laser I',
 'Dual Heavy Beam Laser I',
 'Mega Pulse Laser I',
 'Mega Beam Laser I',
 'Tachyon Beam Laser I',
 'Miner II',
 'Miner I',
 '125mm Gatling AutoCannon I',
 '150mm Light AutoCannon I',
 '200mm AutoCannon I',
 '250mm Light Artillery Cannon I',
 '280mm Howitzer Artillery I',
 'Dual 180mm AutoCannon I',
 '220mm Vulcan AutoCannon I',
 '425mm AutoCannon I',
 '650mm Artillery Cannon I',
 '720mm Howitzer Artillery I',
 'Dual 425mm AutoCannon I',
 'Dual 650mm Repeating Cannon I',
 '800mm Repeating Cannon I',
 '1200mm Artillery Cannon I',
 '1400mm Howitzer Artillery I',
 'Light Missile Launcher I',
 'Heavy Missile Launcher I',
 'Torpedo Launcher I',
 'Basic Capacitor Power Relay',
 'Basic Shield Flux Coil',
 "'Basic' Capacitor Flux Coil",
 'Basic Gyrostabilizer',
 'Gyrostabilizer II',
 'Gyrostabilizer I',
 'Basic Damage Control',
 'Micro Capacitor Battery I',
 'Small Armor Repairer I',
 'Small Hull Repairer I',
 'Stasis Webifier I',
 'Stasis Webifier II',
 'Small Remote Capacitor Transmitter I',
 'Small Nosferatu I',
 'Small Energy Neutralizer I',
 '75mm Gatling Rail I',
 'Light Electron Blaster I',
 'Light Ion Blaster I',
 'Light Neutron Blaster I',
 '150mm Railgun I',
 'Heavy Electron Blaster I',
 'Dual 150mm Railgun I',
 'Heavy Neutron Blaster I',
 'Heavy Ion Blaster I',
 '250mm Railgun I',
 'Electron Blaster Cannon I',
 'Dual 250mm Railgun I',
 'Neutron Blaster Cannon I',
 '425mm Railgun I',
 'Ion Blaster Cannon I',
 'Medium Capacitor Booster I',
 'Adaptive Invulnerability Field I',
 'ECM Burst I',
 'Passive Targeter I',
 'Bantam',
 'Condor',
 'Griffin',
 'Slasher',
 'Probe',
 'Rifter',
 'Reaper',
 'Executioner',
 'Inquisitor',
 'Tormentor',
 'Navitas',
 'Tristan',
 'Incursus',
 'Impairor',
 'Punisher',
 'Breacher',
 'Burst',
 'Ibis',
 'Kestrel',
 'Merlin',
 'Heron',
 'Velator',
 'Imicus',
 'Atron',
 'Maulus',
 'Immolator',
 'Echo',
 'Osprey',
 'Caracal',
 'Stabber',
 'Moa',
 'Maller',
 'Augoror',
 'Vexor',
 'Thorax',
 'Arbitrator',
 'Rupture',
 'Bellicose',
 'Scythe',
 'Blackbird',
 'Celestis',
 'Exequror',
 'Raven',
 'Tempest',
 'Scorpion',
 'Megathron',
 'Apocalypse',
 'Armageddon',
 'Typhoon',
 'Dominix',
 'Badger',
 'Tayra',
 'Nereus',
 'Hoarder',
 'Mammoth',
 'Wreathe',
 'Kryos',
 'Epithal',
 'Miasmos',
 'Iteron Mark V',
 'Caldari Shuttle',
 'Auto Targeting System I',
 'Small Armor Repairer II',
 'Small Capacitor Battery I',
 'Small Remote Capacitor Transmitter II',
 'Basic Overdrive Injector System',
 'Basic EM Plating',
 'Cap Recharger I',
 'EM Plating I',
 'EM Plating II',
 'Wasp I',
 'Civilian Mining Drone',
 'Bistot',
 'Pyroxeres',
 'Crokite',
 'Jaspet',
 'Omber',
 'Scordite',
 'Gneiss',
 'Veldspar',
 'Hemorphite',
 'Dark Ochre',
 'Overdrive Injector System II',
 'Basic Reinforced Bulkheads',
 'Basic Nanofiber Internal Structure',
 'Overdrive Injector System I',
 'Capacitor Flux Coil I',
 'Capacitor Flux Coil II',
 'Shield Flux Coil I',
 'Shield Flux Coil II',
 'Basic Explosive Plating',
 'Explosive Plating I',
 'Explosive Plating II',
 'Basic Layered Plating',
 'Layered Plating I',
 'Layered Plating II',
 'Basic Kinetic Plating',
 'Kinetic Plating I',
 'Kinetic Plating II',
 'Basic Thermic Plating',
 'Thermic Plating I',
 'Thermic Plating II',
 'Basic Adaptive Nano Plating',
 'Adaptive Nano Plating I',
 'Adaptive Nano Plating II',
 'Basic Expanded Cargohold',
 'Expanded Cargohold I',
 'Expanded Cargohold II',
 'Reinforced Bulkheads I',
 'Reinforced Bulkheads II',
 'Basic Reactor Control Unit',
 'Reactor Control Unit I',
 'Reactor Control Unit II',
 'Basic Inertia Stabilizers',
 'Inertia Stabilizers I',
 'Inertia Stabilizers II',
 'Basic Shield Power Relay',
 'Shield Power Relay II',
 'Auto Targeting System II',
 'Capacitor Power Relay I',
 'Capacitor Power Relay II',
 'Basic Power Diagnostic System',
 'Power Diagnostic System I',
 'Power Diagnostic System II',
 'Small Proton Smartbomb I',
 'Small Proton Smartbomb II',
 'Small Graviton Smartbomb I',
 'Small Graviton Smartbomb II',
 'Small Plasma Smartbomb I',
 'Small Plasma Smartbomb II',
 'Small EMP Smartbomb I',
 'Small EMP Smartbomb II',
 'Basic EM Ward Amplifier',
 'Basic Thermic Dissipation Amplifier',
 'Basic Kinetic Deflection Amplifier',
 'Basic Explosive Deflection Amplifier',
 'EM Ward Amplifier I',
 'Scourge Auto-Targeting Light Missile I',
 'Nova Auto-Targeting Light Missile I',
 'Inferno Auto-Targeting Light Missile I',
 'Scourge Auto-Targeting Heavy Missile I',
 'Mjolnir Auto-Targeting Heavy Missile I',
 'Nova Auto-Targeting Heavy Missile I',
 'Inferno Auto-Targeting Heavy Missile I',
 'Scourge Auto-Targeting Cruise Missile I',
 'Mjolnir Auto-Targeting Cruise Missile I',
 'Nova Auto-Targeting Cruise Missile I',
 'Inferno Auto-Targeting Cruise Missile I',
 'Ship Scanner II',
 'Rapid Light Missile Launcher I',
 'Rapid Light Missile Launcher II',
 'Basic Heat Sink',
 'Bestower',
 'Basic RADAR Backup Array',
 'ECCM - Radar I',
 'ECM - Ion Field Projector I',
 'Basic Signal Amplifier',
 'Basic Tracking Enhancer',
 'Sensor Booster II',
 'ECM - Spatial Destabilizer I',
 'ECM - White Noise Generator I',
 'ECM - Multispectral Jammer I',
 'ECM - Phase Inverter I',
 'ECCM Projector I',
 'ECCM Projector II',
 'Remote Sensor Booster I',
 'Remote Sensor Booster II',
 'Remote Sensor Dampener I',
 'Remote Sensor Dampener II',
 'Sensor Booster I',
 'Tracking Computer I',
 'Tracking Computer II',
 'Basic Ladar Backup Array',
 'Basic Gravimetric Backup Array',
 'Basic Magnetometric Backup Array',
 'Basic Multi Sensor Backup Array',
 'Signal Amplifier I',
 'Signal Amplifier II',
 'Tracking Enhancer I',
 'Tracking Enhancer II',
 'Cynosural Suppression',
 'ECCM - Ladar I',
 'ECCM - Magnetometric I',
 'ECCM - Gravimetric I',
 'ECCM - Omni I',
 'Omen',
 'Cynosural Navigation',
 'Supercapital Construction Facilities',
 'Medium Capacitor Battery I',
 'Large Capacitor Battery I',
 'Medium Capacitor Booster II',
 'Pirate Detection Array 1',
 'Pirate Detection Array 2',
 'Pirate Detection Array 3',
 'Pirate Detection Array 4',
 'Pirate Detection Array 5',
 'Entrapment Array 1',
 'Cap Recharger II',
 'Entrapment Array 2',
 'Entrapment Array 3',
 'Entrapment Array 4',
 'Entrapment Array 5',
 'Cargo Scanner II',
 'Ore Prospecting Array 1',
 'Ore Prospecting Array 2',
 'Ore Prospecting Array 3',
 'Ore Prospecting Array 4',
 'Ore Prospecting Array 5',
 'Damage Control I',
 'Damage Control II',
 'Gistum C-Type Adaptive Invulnerability Field',
 'Survey Networks 1',
 'Survey Networks 2',
 'Survey Networks 3',
 'Survey Networks 4',
 'Survey Networks 5',
 'Quantum Flux Generator 1',
 'Quantum Flux Generator 2',
 'Quantum Flux Generator 3',
 'Quantum Flux Generator 4',
 'Quantum Flux Generator 5',
 'Microorganisms',
 'Zephyr',
 'Genolution Core Augmentation CA-1',
 'Remote Tracking Computer I',
 'Remote Tracking Computer II',
 'Tracking Disruptor I',
 'Tracking Disruptor II',
 'ECM Burst II',
 'Crucifier',
 'Infiltrator I',
 'Infiltrator II',
 'Guristas Nova Citadel Cruise Missile',
 'Guristas Scourge Citadel Cruise Missile',
 'Guristas Inferno Citadel Cruise Missile',
 'Hammerhead I',
 'Hammerhead II',
 'Guristas Mjolnir Citadel Cruise Missile',
 'Praetor I',
 'Praetor II',
 'Acolyte I',
 'Acolyte II',
 'Temperate Command Center',
 'ECCM - Omni II',
 'ECCM - Gravimetric II',
 'ECCM - Ladar II',
 'ECCM - Magnetometric II',
 'ECCM - Radar II',
 'Base Metals',
 'Aqueous Liquids',
 'Noble Metals',
 'Heavy Metals',
 'Adaptive Invulnerability Field II',
 'Planktic Colonies',
 'Complex Organisms',
 'Carbon Compounds',
 'Explosive Deflection Field I',
 'Kinetic Deflection Field I',
 'EM Ward Field I',
 'Thermic Dissipation Field I',
 'Explosive Deflection Field II',
 'Kinetic Deflection Field II',
 'EM Ward Field II',
 'Thermic Dissipation Field II',
 'Autotrophs',
 'Non-CS Crystals',
 'Felsic Magma',
 'Suspended Plasma',
 'Ionic Solutions',
 'Noble Gas',
 'Reactive Gas',
 'Supertensile Plastics',
 'Oxides',
 'Test Cultures',
 'Polyaramids',
 'Microfiber Shielding',
 'Water-Cooled CPU',
 'Biocells',
 'Shield Power Relay I',
 'Survey Scanner II',
 'Passive Targeter II',
 'Condensates',
 'Camera Drones',
 'Synthetic Synapses',
 'Gel-Matrix Biopaste',
 'Supercomputers',
 'Smartfab Units',
 'Nuclear Reactors',
 'Neocoms',
 'Small Hull Repairer II',
 'Biotech Research Reports',
 'Industrial Explosives',
 'Hermetic Membranes',
 'Heat Sink I',
 'Heat Sink II',
 'Hazmat Detection Systems',
 'Cryoprotectant Solution',
 'Broken Organic Mortar Applicators',
 'Broken Sterile Conduits',
 'Broken Nano-Factory',
 'Broken Self-Harmonizing Power Core',
 'Broken Recursive Computing Module',
 'Broken Broadcast Node',
 'Broken Integrity Response Drones',
 'Broken Wetware Mainframe',
 'Plasmoids',
 'Electrolytes',
 'Oxidizing Compound',
 'Bacteria',
 'Proteins',
 'Biofuels',
 'Industrial Fibers',
 'Reactive Metals',
 'Precious Metals',
 'Toxic Metals',
 'Chiral Structures',
 'Light Missile Launcher II',
 'Heavy Missile Launcher II',
 'Torpedo Launcher II',
 'Wasp II',
 'Ogre I',
 'Ogre II',
 'Hobgoblin I',
 'Hobgoblin II',
 'Nanites',
 'Hornet I',
 'Hornet II',
 'Berserker I',
 'Berserker II',
 'Warrior I',
 'Warrior II',
 'Mjolnir Torpedo',
 'Nova Torpedo',
 'Inferno Torpedo',
 'Mjolnir Rocket',
 'Inferno Rocket',
 'Nova Rocket',
 'Barren Command Center',
 'Oceanic Command Center',
 'Explosive Deflection Amplifier I',
 'Explosive Deflection Amplifier II',
 'Ice Command Center',
 'Gas Command Center',
 'Thermic Dissipation Amplifier I',
 'Thermic Dissipation Amplifier II',
 'Kinetic Deflection Amplifier I',
 'Kinetic Deflection Amplifier II',
 'Lava Command Center',
 'Storm Command Center',
 'Plasma Command Center',
 'EM Ward Amplifier II',
 'ECM - Phase Inverter II',
 'ECM - Ion Field Projector II',
 'ECM - Multispectral Jammer II',
 'ECM - Spatial Destabilizer II',
 'ECM - White Noise Generator II',
 'Gravimetric Backup Array I',
 'Gravimetric Backup Array II',
 'Ladar Backup Array I',
 'Ladar Backup Array II',
 'Magnetometric Backup Array I',
 'Magnetometric Backup Array II',
 'Genolution Core Augmentation CA-2',
 'Multi Sensor Backup Array I',
 'Multi Sensor Backup Array II',
 'Nanofiber Internal Structure I',
 'Nanofiber Internal Structure II',
 'Mjolnir Fury Light Missile',
 'Inferno Fury Cruise Missile',
 'Scourge Fury Heavy Missile',
 'Inferno Precision Cruise Missile',
 'Inferno Precision Light Missile',
 'Nova Precision Heavy Missile',
 'Scourge Rage Heavy Assault Missile',
 'Nova Javelin Torpedo',
 'Inferno Rage Torpedo',
 'Mjolnir Rage Rocket',
 '1000 Aurum Token',
 'Utu',
 'Adrestia',
 'Primae',
 '1200mm Artillery Cannon II',
 'Broadcast Node',
 'Integrity Response Drones',
 'Nano-Factory',
 'Organic Mortar Applicators',
 'Recursive Computing Module',
 'Self-Harmonizing Power Core',
 '125mm Gatling AutoCannon II',
 'Sterile Conduits',
 'Wetware Mainframe',
 '150mm Light AutoCannon II',
 '200mm AutoCannon II',
 '220mm Vulcan AutoCannon II',
 '250mm Light Artillery Cannon II',
 '425mm AutoCannon II',
 '650mm Artillery Cannon II',
 '800mm Repeating Cannon II',
 'Dual 180mm AutoCannon II',
 'Dual 425mm AutoCannon II',
 'Shadow',
 'Dual 650mm Repeating Cannon II',
 '1400mm Howitzer Artillery II',
 '720mm Howitzer Artillery II',
 '280mm Howitzer Artillery II',
 'Dual Heavy Beam Laser II',
 'Dual Light Beam Laser II',
 'Noctis',
 'Dual Light Pulse Laser II',
 'Focused Medium Beam Laser II',
 'Gatling Pulse Laser II',
 'Heavy Beam Laser II',
 'Small Focused Beam Laser II',
 'Small Focused Pulse Laser II',
 'Mega Beam Laser II',
 'Mega Pulse Laser II',
 'Tachyon Beam Laser II',
 '150mm Railgun II',
 "Zainou 'Gnome' Shield Upgrades SU-602",
 "Zainou 'Gnome' Shield Upgrades SU-604",
 "Zainou 'Gnome' Shield Upgrades SU-606",
 "Zainou 'Gnome' Shield Management SM-702",
 "Zainou 'Gnome' Shield Management SM-704",
 '250mm Railgun II',
 "Zainou 'Gnome' Shield Management SM-706",
 "Zainou 'Gnome' Shield Emission Systems SE-802",
 "Zainou 'Gnome' Shield Emission Systems SE-804",
 "Zainou 'Gnome' Shield Emission Systems SE-806",
 "Zainou 'Gnome' Shield Operation SP-902",
 "Zainou 'Gnome' Shield Operation SP-904",
 '425mm Railgun II',
 "Zainou 'Gnome' Shield Operation SP-906",
 "Eifyr and Co. 'Rogue' Evasive Maneuvering EM-702",
 "Eifyr and Co. 'Rogue' Evasive Maneuvering EM-704",
 "Eifyr and Co. 'Rogue' Evasive Maneuvering EM-706",
 "Eifyr and Co. 'Rogue' Navigation NN-602",
 "Eifyr and Co. 'Rogue' Navigation NN-604",
 '75mm Gatling Rail II',
 "Eifyr and Co. 'Rogue' Navigation NN-606",
 "Eifyr and Co. 'Rogue' Fuel Conservation FC-802",
 "Eifyr and Co. 'Rogue' Fuel Conservation FC-804",
 "Eifyr and Co. 'Rogue' Fuel Conservation FC-806",
 "Eifyr and Co. 'Rogue' Afterburner AB-604",
 "Eifyr and Co. 'Rogue' Afterburner AB-608",
 'Dual 150mm Railgun II',
 "Eifyr and Co. 'Rogue' Afterburner AB-612",
 "Eifyr and Co. 'Rogue' Warp Drive Operation WD-604",
 "Eifyr and Co. 'Rogue' Warp Drive Operation WD-608",
 "Eifyr and Co. 'Rogue' Warp Drive Operation WD-612",
 "Eifyr and Co. 'Rogue' High Speed Maneuvering HS-902",
 "Eifyr and Co. 'Rogue' High Speed Maneuvering HS-904",
 'Dual 250mm Railgun II',
 "Eifyr and Co. 'Rogue' High Speed Maneuvering HS-906",
 "Eifyr and Co. 'Rogue' Warp Drive Speed WS-608",
 "Eifyr and Co. 'Rogue' Warp Drive Speed WS-613",
 "Eifyr and Co. 'Rogue' Warp Drive Speed WS-618",
 "Eifyr and Co. 'Rogue' Acceleration Control AC-602",
 "Eifyr and Co. 'Rogue' Acceleration Control AC-604",
 'Electron Blaster Cannon II',
 "Eifyr and Co. 'Rogue' Acceleration Control AC-606",
 "Zainou 'Deadeye' Guided Missile Precision GP-802",
 "Zainou 'Deadeye' Guided Missile Precision GP-804",
 "Zainou 'Deadeye' Guided Missile Precision GP-806",
 "Zainou 'Deadeye' Missile Bombardment MB-702",
 "Zainou 'Deadeye' Missile Bombardment MB-704",
 'Heavy Electron Blaster II',
 "Zainou 'Deadeye' Missile Bombardment MB-706",
 "Zainou 'Deadeye' Missile Projection MP-702",
 "Zainou 'Deadeye' Missile Projection MP-704",
 "Zainou 'Deadeye' Missile Projection MP-706",
 "Zainou 'Deadeye' Rapid Launch RL-1002",
 "Zainou 'Deadeye' Rapid Launch RL-1004",
 'Heavy Ion Blaster II',
 "Zainou 'Deadeye' Rapid Launch RL-1006",
 "Zainou 'Deadeye' Target Navigation Prediction TN-902",
 "Zainou 'Deadeye' Target Navigation Prediction TN-904",
 "Zainou 'Deadeye' Target Navigation Prediction TN-906",
 "Zainou 'Gnome' Launcher CPU Efficiency LE-602",
 "Zainou 'Gnome' Launcher CPU Efficiency LE-604",
 'Heavy Neutron Blaster II',
 "Zainou 'Gnome' Launcher CPU Efficiency LE-606",
 "Zainou 'Snapshot' Defender Missiles DM-802",
 "Zainou 'Snapshot' Defender Missiles DM-804",
 'Ion Blaster Cannon II',
 "Zainou 'Snapshot' Defender Missiles DM-806",
 "Zainou 'Snapshot' Heavy Assault Missiles AM-702",
 "Zainou 'Snapshot' Heavy Assault Missiles AM-704",
 "Zainou 'Snapshot' Heavy Assault Missiles AM-706",
 "Zainou 'Snapshot' FOF Explosion Radius FR-1002",
 "Zainou 'Snapshot' FOF Explosion Radius FR-1004",
 'Light Electron Blaster II',
 "Zainou 'Snapshot' FOF Explosion Radius FR-1006",
 "Zainou 'Snapshot' Heavy Missiles HM-702",
 "Zainou 'Snapshot' Heavy Missiles HM-704",
 "Zainou 'Snapshot' Heavy Missiles HM-706",
 "Zainou 'Snapshot' Light Missiles LM-902",
 "Zainou 'Snapshot' Light Missiles LM-904",
 'Light Ion Blaster II',
 "Zainou 'Snapshot' Light Missiles LM-906",
 "Zainou 'Snapshot' Rockets RD-902",
 "Zainou 'Snapshot' Rockets RD-904",
 "Zainou 'Snapshot' Rockets RD-906",
 "Zainou 'Snapshot' Torpedoes TD-602",
 "Zainou 'Snapshot' Torpedoes TD-604",
 'Light Neutron Blaster II',
 "Zainou 'Snapshot' Torpedoes TD-606",
 "Zainou 'Snapshot' Cruise Missiles CM-602",
 "Zainou 'Snapshot' Cruise Missiles CM-604",
 "Zainou 'Snapshot' Cruise Missiles CM-606",
 "Eifyr and Co. 'Gunslinger' Medium Projectile Turret MP-802",
 'Neutron Blaster Cannon II',
 "Eifyr and Co. 'Gunslinger' Medium Projectile Turret MP-804",
 "Eifyr and Co. 'Gunslinger' Medium Projectile Turret MP-806",
 "Eifyr and Co. 'Gunslinger' Motion Prediction MR-702",
 "Eifyr and Co. 'Gunslinger' Motion Prediction MR-704",
 "Eifyr and Co. 'Gunslinger' Motion Prediction MR-706",
 "Eifyr and Co. 'Gunslinger' Surgical Strike SS-902",
 "Eifyr and Co. 'Gunslinger' Surgical Strike SS-904",
 "Eifyr and Co. 'Gunslinger' Surgical Strike SS-906",
 "Eifyr and Co. 'Gunslinger' Large Projectile Turret LP-1002",
 "Eifyr and Co. 'Gunslinger' Large Projectile Turret LP-1004",
 "Eifyr and Co. 'Gunslinger' Large Projectile Turret LP-1006",
 "Eifyr and Co. 'Gunslinger' Small Projectile Turret SP-602",
 "Eifyr and Co. 'Gunslinger' Small Projectile Turret SP-604",
 "Eifyr and Co. 'Gunslinger' Small Projectile Turret SP-606",
 "Inherent Implants 'Lancer' Small Energy Turret SE-602",
 "Inherent Implants 'Lancer' Controlled Bursts CB-702",
 "Inherent Implants 'Lancer' Gunnery RF-902",
 "Inherent Implants 'Lancer' Large Energy Turret LE-1002",
 "Inherent Implants 'Lancer' Medium Energy Turret ME-802",
 "Inherent Implants 'Lancer' Small Energy Turret SE-604",
 "Inherent Implants 'Lancer' Controlled Bursts CB-704",
 "Inherent Implants 'Lancer' Gunnery RF-904",
 "Inherent Implants 'Lancer' Large Energy Turret LE-1004",
 "Inherent Implants 'Lancer' Medium Energy Turret ME-804",
 "Inherent Implants 'Lancer' Small Energy Turret SE-606",
 "Inherent Implants 'Lancer' Controlled Bursts CB-706",
 "Inherent Implants 'Lancer' Gunnery RF-906",
 "Inherent Implants 'Lancer' Large Energy Turret LE-1006",
 "Inherent Implants 'Lancer' Medium Energy Turret ME-806",
 "Zainou 'Deadeye' Sharpshooter ST-902",
 'Harvester Mining Drone',
 "Zainou 'Deadeye' Trajectory Analysis TA-704",
 "Zainou 'Deadeye' Trajectory Analysis TA-706",
 "Zainou 'Deadeye' Large Hybrid Turret LH-1002",
 "Zainou 'Deadeye' Large Hybrid Turret LH-1004",
 "Zainou 'Deadeye' Large Hybrid Turret LH-1006",
 "Zainou 'Deadeye' Small Hybrid Turret SH-602",
 "Zainou 'Deadeye' Small Hybrid Turret SH-604",
 "Zainou 'Deadeye' Small Hybrid Turret SH-606",
 "Zainou 'Gnome' Weapon Upgrades WU-1002",
 "Zainou 'Gnome' Weapon Upgrades WU-1004",
 "Zainou 'Gnome' Weapon Upgrades WU-1006",
 "Zainou 'Deadeye' Medium Hybrid Turret MH-802",
 "Zainou 'Deadeye' Medium Hybrid Turret MH-804",
 "Zainou 'Deadeye' Medium Hybrid Turret MH-806",
 "Zainou 'Deadeye' Sharpshooter ST-904",
 "Zainou 'Deadeye' Sharpshooter ST-906",
 "Zainou 'Deadeye' Trajectory Analysis TA-702",
 "Inherent Implants 'Squire' Capacitor Management EM-802",
 "Inherent Implants 'Squire' Capacitor Management EM-804",
 "Inherent Implants 'Squire' Capacitor Management EM-806",
 "Inherent Implants 'Squire' Capacitor Systems Operation EO-602",
 "Inherent Implants 'Squire' Capacitor Systems Operation EO-604",
 'Warp Disruptor I',
 'Warp Disruptor II',
 "Inherent Implants 'Squire' Capacitor Systems Operation EO-606",
 "Inherent Implants 'Squire' Capacitor Emission Systems ES-702",
 "Inherent Implants 'Squire' Capacitor Emission Systems ES-704",
 "Inherent Implants 'Squire' Capacitor Emission Systems ES-706",
 "Inherent Implants 'Squire' Energy Pulse Weapons EP-702",
 "Inherent Implants 'Squire' Energy Pulse Weapons EP-704",
 "Inherent Implants 'Squire' Energy Pulse Weapons EP-706",
 "Inherent Implants 'Squire' Energy Grid Upgrades EU-702",
 "Inherent Implants 'Squire' Energy Grid Upgrades EU-704",
 "Inherent Implants 'Squire' Energy Grid Upgrades EU-706",
 "Inherent Implants 'Squire' Power Grid Management EG-602",
 "Inherent Implants 'Squire' Power Grid Management EG-604",
 "Inherent Implants 'Squire' Power Grid Management EG-606",
 "Zainou 'Gypsy' Electronics Upgrades EU-602",
 "Zainou 'Gypsy' Electronics Upgrades EU-604",
 "Zainou 'Gypsy' Electronics Upgrades EU-606",
 "Zainou 'Gypsy' CPU Management EE-602",
 "Zainou 'Gypsy' CPU Management EE-604",
 "Zainou 'Gypsy' CPU Management EE-606",
 "Zainou 'Gypsy' Signature Analysis SA-702",
 "Zainou 'Gypsy' Signature Analysis SA-704",
 "Zainou 'Gypsy' Signature Analysis SA-706",
 "Zainou 'Gypsy' Electronic Warfare EW-902",
 "Zainou 'Gypsy' Electronic Warfare EW-904",
 "Zainou 'Gypsy' Electronic Warfare EW-906",
 "Zainou 'Gypsy' Long Range Targeting LT-802",
 "Zainou 'Gypsy' Long Range Targeting LT-804",
 "Zainou 'Gypsy' Long Range Targeting LT-806",
 "Zainou 'Gypsy' Propulsion Jamming PJ-802",
 "Zainou 'Gypsy' Propulsion Jamming PJ-804",
 "Zainou 'Gypsy' Propulsion Jamming PJ-806",
 "Zainou 'Gypsy' Sensor Linking SL-902",
 "Zainou 'Gypsy' Sensor Linking SL-904",
 "Zainou 'Gypsy' Sensor Linking SL-906",
 "Zainou 'Gypsy' Weapon Disruption WD-902",
 "Zainou 'Gypsy' Weapon Disruption WD-904",
 'Quad Light Beam Laser II',
 "Zainou 'Gypsy' Weapon Disruption WD-906",
 "Zainou 'Gypsy' Target Painting TG-902",
 "Zainou 'Gypsy' Target Painting TG-904",
 "Zainou 'Gypsy' Target Painting TG-906",
 "Inherent Implants 'Noble' Repair Systems RS-602",
 "Inherent Implants 'Noble' Repair Systems RS-604",
 "Inherent Implants 'Noble' Repair Systems RS-606",
 "Inherent Implants 'Noble' Remote Armor Repair Systems RA-702",
 "Inherent Implants 'Noble' Remote Armor Repair Systems RA-704",
 'Basic Co-Processor',
 "Inherent Implants 'Noble' Remote Armor Repair Systems RA-706",
 "Inherent Implants 'Noble' Mechanic MC-802",
 "Inherent Implants 'Noble' Mechanic MC-804",
 "Inherent Implants 'Noble' Mechanic MC-806",
 "Inherent Implants 'Noble' Repair Proficiency RP-902",
 "Inherent Implants 'Noble' Repair Proficiency RP-904",
 "Inherent Implants 'Noble' Repair Proficiency RP-906",
 "Inherent Implants 'Noble' Hull Upgrades HG-1002",
 'Micro Capacitor Battery II',
 "Inherent Implants 'Noble' Hull Upgrades HG-1004",
 "Inherent Implants 'Noble' Hull Upgrades HG-1006",
 'Small Capacitor Battery II',
 'Medium Capacitor Battery II',
 'Large Capacitor Battery II',
 'Focused Medium Pulse Laser II',
 'Malice',
 'Vangel',
 'Heavy Pulse Laser II',
 'Medium Armor Repairer I',
 'Medium Armor Repairer II',
 'Echelon',
 'Capital Inefficient Armor Repair Unit',
 'Capital Coaxial Remote Armor Repairer',
 'Large Armor Repairer I',
 'Large Armor Repairer II',
 'Capital Neutron Saturation Injector I',
 'Capital Murky Remote Shield Booster',
 'Limited Mega Ion Siege Blaster I',
 "Dual 1000mm 'Scout' Accelerator Cannon",
 'Cap Booster 75',
 'Cap Booster 100',
 'Micro Capacitor Booster I',
 'Micro Capacitor Booster II',
 'Dual Modal Giga Pulse Laser I',
 'Dual Giga Modal Laser I',
 "'Limos' Citadel Cruise Launcher I",
 "Shock 'Limos' Citadel Torpedo Bay I",
 'Small Capacitor Booster I',
 'Small Capacitor Booster II',
 'Quad 3500mm Gallium Cannon',
 '6x2500mm Heavy Gallium Repeating Cannon',
 'Capital Murky Remote Capacitor Transmitter',
 'Heavy Capacitor Booster I',
 'Heavy Capacitor Booster II',
 'Purloined Sansha Data Analyzer',
 'Small Remote Shield Booster I',
 'Small Remote Shield Booster II',
 'Medium Remote Shield Booster I',
 'Medium Remote Shield Booster II',
 'Large Remote Shield Booster I',
 'Large Remote Shield Booster II',
 'Capital Remote Shield Booster I',
 'Soil',
 'Water',
 'Holoreels',
 'Civilian Miner',
 'Medium Hull Repairer I',
 'Medium Hull Repairer II',
 'Large Hull Repairer I',
 'Large Hull Repairer II',
 'Wheat',
 'Oxygen',
 'Hydrogen Batteries',
 'Electronic Parts',
 'Mechanical Parts',
 'Synthetic Oil',
 'Fertilizer',
 'Polytextiles',
 'Silicate Glass',
 'Quafe',
 'Nerve Sticks',
 'Crash',
 'Blue Pill',
 'Drop',
 'X-Instinct',
 'Vitoc',
 'Frozen Food',
 'Dairy Products',
 'Tourists',
 'Slaves',
 'Slaver Hound',
 'Livestock',
 'Plutonium',
 'Toxic Waste',
 'Gnosis',
 'Vigil',
 'Ectoplasm',
 'Hydrochloric Acid',
 'Viral Agent',
 'Long-limb Roes',
 'Biomass',
 'Refugees',
 'Marines',
 'Data Sheets',
 'Reports',
 'Exile',
 'Sooth Sayer',
 'Frentix',
 'Crystal Egg',
 'Mindflood',
 'Construction Blocks',
 'Medium Shield Extender I',
 'Medium Shield Extender II',
 'Large Shield Extender I',
 'Large Shield Extender II',
 'Micro Shield Extender I',
 'Micro Shield Extender II',
 'Co-Processor I',
 'Co-Processor II',
 'Micro Proton Smartbomb I',
 'Quafe Zero',
 'Micro Proton Smartbomb II',
 'Micro Graviton Smartbomb I',
 'Micro Graviton Smartbomb II',
 'Micro Plasma Smartbomb I',
 'Micro Plasma Smartbomb II',
 'Micro EMP Smartbomb I',
 'Micro EMP Smartbomb II',
 'Medium Proton Smartbomb I',
 'Medium Proton Smartbomb II',
 'Medium Graviton Smartbomb I',
 'Medium Graviton Smartbomb II',
 'Medium Plasma Smartbomb I',
 'Medium Plasma Smartbomb II',
 'Medium EMP Smartbomb I',
 'Medium EMP Smartbomb II',
 'GDN-9 "Nightstalker" Combat Goggles',
 'Customs Office Gantry',
 "Men's 'Precision' Boots",
 "Women's 'Structure' Dress (navy)",
 'Large Proton Smartbomb I',
 'Large Proton Smartbomb II',
 'Large Graviton Smartbomb I',
 'Large Graviton Smartbomb II',
 'Large Remote Hull Repairer II',
 'Large Plasma Smartbomb I',
 'Large Plasma Smartbomb II',
 "Men's 'Commando' Pants (black wax)",
 'Large EMP Smartbomb I',
 'Large EMP Smartbomb II',
 "Women's 'Excursion' Pants (black/gray)",
 "Women's 'Impress' Skirt (gray)",
 "Women's 'Impress' Skirt (black wax)",
 "Men's 'Trench' Boots",
 "Women's 'Minima' Heels",
 "Women's 'Greave' Knee-Boots",
 "Women's 'Mystrioso' Boots",
 'Scorpion Ishukone Watch',
 "Men's 'Lockstep' Boots",
 'Looking Glass Monocle Interface (right/gold)',
 'RADAR Backup Array I',
 'RADAR Backup Array II',
 "Women's 'Excursion' Pants (black)",
 "Women's 'Excursion' Pants (black/blue/gold)",
 "Women's 'Excursion' Pants (black/gold)",
 "Women's 'Excursion' Pants (black/gold line)",
 "Women's 'Excursion' Pants (black/red/gold)",
 "Women's 'Excursion' Pants (black/silver)",
 "Women's 'Excursion' Pants (gold)",
 'X5 Prototype Engine Enervator',
 "Women's 'Excursion' Pants (matte blue)",
 'Fleeting Propulsion Inhibitor I',
 "Women's 'Excursion' Pants (matte green)",
 "'Langour' Drive Disruptor I",
 "Women's 'Excursion' Pants (matte red)",
 'Patterned Stasis Web I',
 "Women's 'Excursion' Pants (silver)",
 "Women's 'Impress' Skirt (black leather)",
 "Women's 'Impress' Skirt (brown leather)",
 "Women's 'Impress' Skirt (graphite)",
 "Women's 'Impress' Skirt (green/gold)",
 'Odin Synthetic Eye (right/dark)',
 'Odin Synthetic Eye (right/gray)',
 'Odin Synthetic Eye (right/gold)',
 'Looking Glass Monocle Interface (right/gray)',
 'Odin Synthetic Eye (left/dark)',
 'Odin Synthetic Eye (left/gold)',
 'Odin Synthetic Eye (left/gray)',
 'Looking Glass Monocle Interface (left/gold)',
 'Caldari Fuel Block',
 'Looking Glass Monocle Interface (left/gray)',
 "Women's 'Executor' Coat",
 "Men's 'Sterling' Dress Shirt (black)",
 "Men's 'Sterling' Dress Shirt (navy)",
 "Men's 'Sterling' Dress Shirt (dust)",
 "Men's 'Sterling' Dress Shirt (olive)",
 "Women's 'Sterling' Dress Blouse (black)",
 "Women's 'Sterling' Dress Blouse (navy)",
 "Women's 'Sterling' Dress Blouse (dust)",
 "Women's 'Sterling' Dress Blouse (olive)",
 "Women's 'Sterling' Dress Blouse (platinum)",
 "Women's 'Quafe' T-shirt YC 113",
 "Men's 'Quafe' T-shirt YC 113",
 ...]

In [240]: [i for i in v.convert.name where 'Alumel' in i]
  File "<ipython-input-240-fe359f72736b>", line 1
    [i for i in v.convert.name where 'Alumel' in i]
                                   ^
SyntaxError: invalid syntax


In [241]: [i for i in v.convert.name if 'Alumel' in i]
Out[241]: 
['Alumel-Wired Sensor Augmentation',
 'Alumel Radar ECCM Sensor Array I',
 'Alumel Ladar ECCM Sensor Array I',
 'Alumel Gravimetric ECCM Sensor Array I',
 'Alumel Omni ECCM Sensor Array I',
 'Alumel Magnetometric ECCM Sensor Array I']

In [242]: v.convert.name == 'Alumel Magnetometric ECCM Sensor Array I'
Out[242]: 
itemid
18        False
19        False
20        False
21        False
22        False
34        False
35        False
36        False
37        False
38        False
39        False
40        False
41        False
42        False
43        False
...
34167     False
34168     False
34169     False
34170     False
34171     False
34172     False
34173     False
34174     False
34175     False
34176     False
34177     False
34178     False
34179     False
34180     False
34181     False
Name: name, Length: 7794, dtype: bool

In [243]: v.convert[v.convert.name == 'Alumel Magnetometric ECCM Sensor Array I']
Out[243]: 
                                            name
itemid                                          
7937    Alumel Magnetometric ECCM Sensor Array I

In [244]: ame = v.market_data_groups.get_group(7937)

In [245]: ame
Out[245]: 
        itemid price_date  volume   avgprice  price_delta_10  price_delta_30
587600    7937 2013-09-29     120     500.15             NaN             NaN
587601    7937 2013-09-30     120     500.20             NaN             NaN
587602    7937 2013-10-01     102     500.22             NaN             NaN
587603    7937 2013-10-02     102     500.26             NaN             NaN
587604    7937 2013-10-03     128     500.30             NaN             NaN
587605    7937 2013-10-04     171     500.34             NaN             NaN
587606    7937 2013-10-05     132     500.48             NaN             NaN
587607    7937 2013-10-06     141     500.53             NaN             NaN
587608    7937 2013-10-07     127     500.60             NaN             NaN
587609    7937 2013-10-08      75     500.66           0.286             NaN
587610    7937 2013-10-09      90     500.70           0.271             NaN
587611    7937 2013-10-10      70     495.00          -4.909             NaN
587612    7937 2013-10-11     129     500.76           0.797             NaN
587613    7937 2013-10-12     152     500.80           0.783             NaN
587614    7937 2013-10-13     195     500.80           0.733             NaN
587615    7937 2013-10-14     175     500.82           0.705             NaN
587616    7937 2013-10-15     162     500.85           0.698             NaN
587617    7937 2013-10-16      79     510.28           9.153             NaN
587618    7937 2013-10-17      85     500.88          -0.275             NaN
587619    7937 2013-10-18     132     501.18          -0.027             NaN
587620    7937 2013-10-19     139     501.18          -0.075             NaN
587621    7937 2013-10-20     178     501.20          -0.675             NaN
587622    7937 2013-10-21      65     531.90          26.911             NaN
587623    7937 2013-10-22     129     501.20          -3.829             NaN
587624    7937 2013-10-23      98     704.83         179.398             NaN
587625    7937 2013-10-24     333     501.28         -24.198             NaN
587626    7937 2013-10-25     101     501.28         -24.241             NaN
587627    7937 2013-10-26     102     501.30         -23.323             NaN
587628    7937 2013-10-27      97     497.17         -27.082             NaN
587629    7937 2013-10-28      97     511.62         -13.676        2.661000
...        ...        ...     ...        ...             ...             ...
587970    7937 2014-10-04     106    3501.23         441.981      682.917667
587971    7937 2014-10-05      82    3501.25         550.953      586.629333
587972    7937 2014-10-06     173    3501.27         450.872      603.271000
587973    7937 2014-10-07      71    5698.03        2327.857     2630.286333
587974    7937 2014-10-08     150  131999.91      115679.852   124552.569667
587975    7937 2014-10-09     100    7346.27       -9458.304     -325.545667
587976    7937 2014-10-10      40    3501.27      -13353.316    -4266.854667
587977    7937 2014-10-11      54    3667.89      -13253.369    -4202.097333
587978    7937 2014-10-12      80    3501.27      -13469.995    -4458.362667
587979    7937 2014-10-13     547    7501.25       -9870.714     -687.991000
587980    7937 2014-10-14     218    3501.27      -13870.698    -4746.057667
587981    7937 2014-10-15      52    3501.27      -13870.700    -4779.437667
587982    7937 2014-10-16      40    3501.27      -13870.700    -4812.817667
587983    7937 2014-10-17      56    3501.27      -13651.024    -4849.889333
587984    7937 2014-10-18     103    3501.27        -801.160    -4883.269333
587985    7937 2014-10-19      73    3501.99        -416.012    -4915.953333
587986    7937 2014-10-20     108    3501.27        -416.732    -4951.042333
587987    7937 2014-10-21     149    6199.92        2028.715    -2374.351333
587988    7937 2014-10-22      95   11874.83        6866.269     3046.397333
587989    7937 2014-10-23      64    4587.91        -129.317    -4310.124000
587990    7937 2014-10-24      94    3501.30       -1215.930    -4881.515667
587991    7937 2014-10-25     278    3501.99       -1215.312    -4844.533000
587992    7937 2014-10-26     116    3502.00       -1215.375    -4877.914333
587993    7937 2014-10-27      60    3502.00       -1215.448    -4911.305000
587994    7937 2014-10-28      39    3502.00       -1215.521    -4944.669667
587995    7937 2014-10-29      56    3501.96       -1215.558    -4978.071333
587996    7937 2014-10-30      62    3502.00       -1215.591    -4994.726333
587997    7937 2014-10-31     250    3503.91        -944.080    -5009.574667
587998    7937 2014-11-01    2237    3502.00        -108.707    -5028.177667
587999    7937 2014-11-02     134    3502.00          -0.116    -5028.435667

[400 rows x 6 columns]

In [246]: ame.index = price_date
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-246-7a4479b46c9f> in <module>()
----> 1 ame.index = price_date

NameError: name 'price_date' is not defined

In [247]: ame.index = ame.price_date

In [248]: s = v.stats.loc[7937,'price_delta_10']

In [249]: s
Out[249]: 
N           391.000000
MIN      -13870.700000
P10       -1215.318300
MED          -0.464500
AVG          34.548432
P90         278.857600
MAX      115679.852000
STD        6691.816035
SN2P5    -13778.046212
SN2P0     -7164.986596
SN1P5     -1953.160011
SN1P0      -342.919094
SN0P5       -27.868222
S0P0         -0.558000
S0P5          0.046341
S1P0          5.292373
S1P5        439.896085
S2P0       2416.041831
S2P5      16289.923072
Name: 7937, dtype: float64

In [250]: v.stats.loc[7937,'price_delta_30']
Out[250]: 
N           371.000000
MIN       -5028.435667
P10       -2277.452633
MED         -13.099500
AVG         188.120937
P90        2236.885133
MAX      124552.569667
STD        7130.434106
SN2P5     -5005.156156
SN2P0     -4899.598740
SN1P5     -2391.925084
SN1P0      -646.016220
SN0P5       -99.475399
S0P0        -17.012000
S0P5         -0.085439
S1P0         35.394024
S1P5        806.107021
S2P0       2794.726862
S2P5      18192.979896
Name: 7937, dtype: float64

In [251]: v.stats.loc[7937,'avgprice']
Out[251]: 
N           400.000000
MIN         495.000000
P10         501.340000
MED         569.300000
AVG        1565.839275
P90        3494.957000
MAX      131999.910000
STD        7149.370238
SN2P5       497.236872
SN2P0       500.350822
SN1P5       501.293121
SN1P0       501.383034
SN0P5       566.344259
S0P0        569.300000
S0P5        610.060000
S1P0        985.076627
S1P5       3501.970318
S2P0       6161.122574
S2P5      19502.205092
Name: 7937, dtype: float64

In [252]: v.stats.loc[7937,'avgprice'].hist()
Out[252]: <matplotlib.axes._subplots.AxesSubplot at 0x2d93a6a0>




In [253]: v.stats.loc[7937,'avgprice'].hist(bins=50)
Out[253]: <matplotlib.axes._subplots.AxesSubplot at 0x1a80f6d8>




In [254]: 132000.0/7149
Out[254]: 18.464120856063786

In [255]: v.convert[v.convert.name == 'Wrecked Weapon Subroutines']
Out[255]: 
                              name
itemid                            
30633   Wrecked Weapon Subroutines

In [256]: wws = v.market_data_groups.get_group(30633)

In [257]: wws
Out[257]: 
         itemid price_date  volume   avgprice  price_delta_10  price_delta_30
2502800   30633 2013-09-29     163  460103.56             NaN             NaN
2502801   30633 2013-09-30     147  460103.69             NaN             NaN
2502802   30633 2013-10-01     210  461003.75             NaN             NaN
2502803   30633 2013-10-02     237  500000.06             NaN             NaN
2502804   30633 2013-10-03     214  550000.06             NaN             NaN
2502805   30633 2013-10-04     133  550000.00             NaN             NaN
2502806   30633 2013-10-05     195  539000.00             NaN             NaN
2502807   30633 2013-10-06     192  500000.03             NaN             NaN
2502808   30633 2013-10-07     113  461003.78             NaN             NaN
2502809   30633 2013-10-08     238  461003.78      -33218.091             NaN
2502810   30633 2013-10-09     195  461000.03      -33311.488             NaN
2502811   30633 2013-10-10     152  461000.03      -33401.122             NaN
2502812   30633 2013-10-11     338  461000.00      -33400.777             NaN
2502813   30633 2013-10-12     230  460103.56      -30307.567             NaN
2502814   30633 2013-10-13     281  460005.22      -21406.423             NaN
2502815   30633 2013-10-14     258  461578.59      -10990.912             NaN
2502816   30633 2013-10-15      97  460005.22       -4664.804             NaN
2502817   30633 2013-10-16     392  460005.22        -665.323             NaN
2502818   30633 2013-10-17     154  353503.03      -96417.438             NaN
2502819   30633 2013-10-18     905  353503.03      -85667.363             NaN
2502820   30633 2013-10-19     233  375000.00      -55570.390             NaN
2502821   30633 2013-10-20     164  353502.03      -66318.560             NaN
2502822   30633 2013-10-21     269  353502.03      -55568.763             NaN
2502823   30633 2013-10-22      91  327287.22      -68501.939             NaN
2502824   30633 2013-10-23     146  420000.00       28211.363             NaN
2502825   30633 2013-10-24      57  222071.23     -145766.671             NaN
2502826   30633 2013-10-25      62  253080.70      -94064.749             NaN
2502827   30633 2013-10-26      48  212075.02     -110277.409             NaN
2502828   30633 2013-10-27     107  214200.02      -94222.108             NaN
2502829   30633 2013-10-28     120  214200.20      -80291.645  -195094.503000
...         ...        ...     ...        ...             ...             ...
2503170   30633 2014-10-04      85  229529.23      -10132.074    27863.157333
2503171   30633 2014-10-05     100  210390.02      -20360.305     8377.613333
2503172   30633 2014-10-06      77  201688.19      -17231.057    -2047.139000
2503173   30633 2014-10-07     120  160000.00      -51919.247   -43894.764000
2503174   30633 2014-10-08    1040  249999.95       34533.089    42771.873667
2503175   30633 2014-10-09      69  204275.38       -9619.019    -4761.856000
2503176   30633 2014-10-10      89  230719.20       15752.881    20324.674000
2503177   30633 2014-10-11     172  220001.06        5034.635     7735.954000
2503178   30633 2014-10-12     391  291999.97       70139.670    75001.553667
2503179   30633 2014-10-13     127  250000.00       25139.700    32075.649667
2503180   30633 2014-10-14     362  250000.03       23092.650    28742.365000
2503181   30633 2014-10-15     129  260000.00       28131.622    37375.651000
2503182   30633 2014-10-16      79  244747.38        8573.083    18964.790333
2503183   30633 2014-10-17     189  240001.02       -4173.379    10335.437333
2503184   30633 2014-10-18     281  294993.97       46320.169    59612.296000
2503185   30633 2014-10-19      29  132608.80     -108898.343  -103076.126667
2503186   30633 2014-10-20      54  144444.80      -88434.903   -90604.580000
2503187   30633 2014-10-21     214  199994.98      -30884.115   -34387.600333
2503188   30633 2014-10-22     131  170000.00      -48679.098   -60065.919000
2503189   30633 2014-10-23     369  218000.00        2520.902   -10999.253333
2503190   30633 2014-10-24    2140  294995.94       75017.251    66146.815667
2503191   30633 2014-10-25     209  250000.00       31021.311    22800.869333
2503192   30633 2014-10-26     145  270000.00       48496.049    44467.501667
2503193   30633 2014-10-27      96  277084.00       51871.751    49982.035000
2503194   30633 2014-10-28     141  320000.00       92287.148    89382.162000
2503195   30633 2014-10-29     912  310000.00       64548.028    76382.162000
2503196   30633 2014-10-30     137  160000.03      -87007.465   -71617.809000
2503197   30633 2014-10-31      73  160000.83      -83007.250   -69617.036667
2503198   30633 2014-11-01     164  160001.67      -82006.577   -67514.211667
2503199   30633 2014-11-02     462  337112.38       83192.895   105692.752333

[400 rows x 6 columns]

In [258]: swws = v.stats.loc[30633]

In [259]: swws
Out[259]: 
volume  N         400.000000
        MIN        28.000000
        P10        72.000000
        MED       151.000000
        AVG       207.152500
        P90       373.100000
        MAX      2140.000000
        STD       198.555912
        SN2P5      33.865939
        SN2P0      48.077303
        SN1P5      66.000000
        SN1P0      84.000000
        SN0P5     112.106478
        S0P0      151.000000
        S0P5      215.787044
...
price_delta_30  AVG       -5278.139458
                P90      161530.685200
                MAX      508198.998333
                STD       77903.194188
                SN2P5   -183760.970885
                SN2P0   -147486.098385
                SN1P5   -107141.244034
                SN1P0    -70212.378570
                SN0P5    -35036.747120
                S0P0     -15061.378667
                S0P5      21369.858027
                S1P0      52692.084959
                S1P5     119228.831076
                S2P0     166884.005101
                S2P5     234952.846756
Name: 30633, Length: 76, dtype: float64

In [260]: swws = v.stats.loc[30633, 'price_delta_10']

In [261]: swws
Out[261]: 
N           391.000000
MIN     -219663.871000
P10      -59589.033600
MED      -10296.490500
AVG       -3040.939698
P90       94390.628900
MAX      439455.487000
STD       66416.395796
SN2P5   -185954.716077
SN2P0   -114800.463635
SN1P5    -77595.580237
SN1P0    -49281.153012
SN0P5    -30197.750696
S0P0     -10296.914000
S0P5       5031.702522
S1P0      48554.650471
S1P5      99369.554718
S2P0     148260.891073
S2P5     217732.171506
Name: 30633, dtype: float64

In [262]: wws.tail(20)
Out[262]: 
         itemid price_date  volume   avgprice  price_delta_10  price_delta_30
2503180   30633 2014-10-14     362  250000.03       23092.650    28742.365000
2503181   30633 2014-10-15     129  260000.00       28131.622    37375.651000
2503182   30633 2014-10-16      79  244747.38        8573.083    18964.790333
2503183   30633 2014-10-17     189  240001.02       -4173.379    10335.437333
2503184   30633 2014-10-18     281  294993.97       46320.169    59612.296000
2503185   30633 2014-10-19      29  132608.80     -108898.343  -103076.126667
2503186   30633 2014-10-20      54  144444.80      -88434.903   -90604.580000
2503187   30633 2014-10-21     214  199994.98      -30884.115   -34387.600333
2503188   30633 2014-10-22     131  170000.00      -48679.098   -60065.919000
2503189   30633 2014-10-23     369  218000.00        2520.902   -10999.253333
2503190   30633 2014-10-24    2140  294995.94       75017.251    66146.815667
2503191   30633 2014-10-25     209  250000.00       31021.311    22800.869333
2503192   30633 2014-10-26     145  270000.00       48496.049    44467.501667
2503193   30633 2014-10-27      96  277084.00       51871.751    49982.035000
2503194   30633 2014-10-28     141  320000.00       92287.148    89382.162000
2503195   30633 2014-10-29     912  310000.00       64548.028    76382.162000
2503196   30633 2014-10-30     137  160000.03      -87007.465   -71617.809000
2503197   30633 2014-10-31      73  160000.83      -83007.250   -69617.036667
2503198   30633 2014-11-01     164  160001.67      -82006.577   -67514.211667
2503199   30633 2014-11-02     462  337112.38       83192.895   105692.752333

In [263]: v.convert[v.convert.name == 'Javelin M']
Out[263]: 
             name
itemid           
12801   Javelin M

In [264]: 